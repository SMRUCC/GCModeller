Imports System.Collections.Generic

Namespace stats

    Public Class DistributionTable

        Private table_fivepercent As IList(Of Double()) = New List(Of Double())()
        Private table_onepercent As IList(Of Double()) = New List(Of Double())()
        Private numerators As Integer() = New Integer() {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 20, 24, 30, 40, 60, 120, 121}
        Private denominators As Integer() = New Integer() {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 40, 60, 120, 121}

        Public Sub New()
            setup_fivepercent_table()
            setup_onepercent_table()
        End Sub

        ' 
        '  The numerator = the number of groups that are being compared ( i.e., group degrees of freedom )
        '  The denomiator = the number of all the observations of all the groups ( i.e., group degrees of freedom )
        '  type = 0.05% or 0.01% test 
        '  
        '  Returns a double... ...if the F score is higher than the returned critial number
        '  then _reject the null hypothesis_
        ' 
        Public Overridable Function getCriticalNumber(ByVal numerator As Integer, ByVal denominator As Integer, ByVal type As String) As Double

            Dim n = getRowIndex(numerator)
            Dim d = getColIndex(denominator)

            Dim criticalNumber As Double = -1

            ' NOTE: The table is 1 based but array are 0 based so -1 from each of the n and d
            If type.Equals(Constants.P_FIVE_PERCENT) Then
                Dim row = table_fivepercent(n - 1)
                criticalNumber = row(d - 1)
            ElseIf type.Equals(Constants.P_ONE_PERCENT) Then
                Dim row = table_onepercent(n - 1)
                criticalNumber = row(d - 1)
            End If

            Return criticalNumber
        End Function

        Public Overridable Function about() As String
            Dim msg = "These F distribution tables are adapted from: http://www.socr.ucla.edu/applets.dir/f_table.html"
            Return msg
        End Function

        ' 
        '  Row = numerator lookup
        ' 
        Protected Friend Overridable Function getRowIndex(ByVal actualNumerator As Integer) As Integer
            Dim chosen = -1
            For i = 0 To numerators.Length - 1
                If actualNumerator = numerators(i) Then
                    chosen = numerators(i)
                ElseIf actualNumerator > numerators(i) Then
                    Try
                        chosen = numerators(i + 1)
                    Catch __unusedIndexOutOfRangeException1__ As IndexOutOfRangeException
                        ' set to infinity. I.e., the last possible option.
                        chosen = numerators(numerators.Length - 1)
                    End Try
                End If
            Next
            Return chosen
        End Function
        ' 
        '  Col = denominator lookup
        ' 
        Protected Friend Overridable Function getColIndex(ByVal actualNumerator As Integer) As Integer
            Dim choosen = -1
            For i = 0 To denominators.Length - 1
                If actualNumerator = denominators(i) Then
                    choosen = denominators(i)
                ElseIf actualNumerator > denominators(i) Then
                    Try
                        choosen = denominators(i + 1)
                    Catch __unusedIndexOutOfRangeException1__ As IndexOutOfRangeException
                        ' set to infinity. I.e., the last possible option.
                        choosen = denominators(denominators.Length - 1)
                    End Try
                End If
            Next
            Return choosen
        End Function

        Private Sub setup_fivepercent_table()

            table_fivepercent.Add(New Double() {161.4476, 199.5, 215.7073, 224.5832, 230.1619, 233.986, 236.7684, 238.8827, 240.5433, 241.8817, 243.906, 245.9499, 248.0131, 249.0518, 250.0951, 251.1432, 252.1957, 253.2529, 254.3144})
            table_fivepercent.Add(New Double() {18.5128, 19, 19.1643, 19.2468, 19.2964, 19.3295, 19.3532, 19.371, 19.3848, 19.3959, 19.4125, 19.4291, 19.4458, 19.4541, 19.4624, 19.4707, 19.4791, 19.4874, 19.4957})
            table_fivepercent.Add(New Double() {10.128, 9.5521, 9.2766, 9.1172, 9.0135, 8.9406, 8.8867, 8.8452, 8.8123, 8.7855, 8.7446, 8.7029, 8.6602, 8.6385, 8.6166, 8.5944, 8.572, 8.5494, 8.5264})
            table_fivepercent.Add(New Double() {7.7086, 6.9443, 6.5914, 6.3882, 6.2561, 6.1631, 6.0942, 6.041, 5.9988, 5.9644, 5.9117, 5.8578, 5.8025, 5.7744, 5.7459, 5.717, 5.6877, 5.6581, 5.6281})
            table_fivepercent.Add(New Double() {6.6079, 5.7861, 5.4095, 5.1922, 5.0503, 4.9503, 4.8759, 4.8183, 4.7725, 4.7351, 4.6777, 4.6188, 4.5581, 4.5272, 4.4957, 4.4638, 4.4314, 4.3985, 4.365})
            table_fivepercent.Add(New Double() {5.9874, 5.1433, 4.7571, 4.5337, 4.3874, 4.2839, 4.2067, 4.1468, 4.099, 4.06, 3.9999, 3.9381, 3.8742, 3.8415, 3.8082, 3.7743, 3.7398, 3.7047, 3.6689})
            table_fivepercent.Add(New Double() {5.5914, 4.7374, 4.3468, 4.1203, 3.9715, 3.866, 3.787, 3.7257, 3.6767, 3.6365, 3.5747, 3.5107, 3.4445, 3.4105, 3.3758, 3.3404, 3.3043, 3.2674, 3.2298})
            table_fivepercent.Add(New Double() {5.3177, 4.459, 4.0662, 3.8379, 3.6875, 3.5806, 3.5005, 3.4381, 3.3881, 3.3472, 3.2839, 3.2184, 3.1503, 3.1152, 3.0794, 3.0428, 3.0053, 2.9669, 2.9276})
            table_fivepercent.Add(New Double() {5.1174, 4.2565, 3.8625, 3.6331, 3.4817, 3.3738, 3.2927, 3.2296, 3.1789, 3.1373, 3.0729, 3.0061, 2.9365, 2.9005, 2.8637, 2.8259, 2.7872, 2.7475, 2.7067})
            table_fivepercent.Add(New Double() {4.9646, 4.1028, 3.7083, 3.478, 3.3258, 3.2172, 3.1355, 3.0717, 3.0204, 2.9782, 2.913, 2.845, 2.774, 2.7372, 2.6996, 2.6609, 2.6211, 2.5801, 2.5379})
            table_fivepercent.Add(New Double() {4.8443, 3.9823, 3.5874, 3.3567, 3.2039, 3.0946, 3.0123, 2.948, 2.8962, 2.8536, 2.7876, 2.7186, 2.6464, 2.609, 2.5705, 2.5309, 2.4901, 2.448, 2.4045})
            table_fivepercent.Add(New Double() {4.7472, 3.8853, 3.4903, 3.2592, 3.1059, 2.9961, 2.9134, 2.8486, 2.7964, 2.7534, 2.6866, 2.6169, 2.5436, 2.5055, 2.4663, 2.4259, 2.3842, 2.341, 2.2962})
            table_fivepercent.Add(New Double() {4.6672, 3.8056, 3.4105, 3.1791, 3.0254, 2.9153, 2.8321, 2.7669, 2.7144, 2.671, 2.6037, 2.5331, 2.4589, 2.4202, 2.3803, 2.3392, 2.2966, 2.2524, 2.2064})
            table_fivepercent.Add(New Double() {4.6001, 3.7389, 3.3439, 3.1122, 2.9582, 2.8477, 2.7642, 2.6987, 2.6458, 2.6022, 2.5342, 2.463, 2.3879, 2.3487, 2.3082, 2.2664, 2.2229, 2.1778, 2.1307})
            table_fivepercent.Add(New Double() {4.5431, 3.6823, 3.2874, 3.0556, 2.9013, 2.7905, 2.7066, 2.6408, 2.5876, 2.5437, 2.4753, 2.4034, 2.3275, 2.2878, 2.2468, 2.2043, 2.1601, 2.1141, 2.0658})
            table_fivepercent.Add(New Double() {4.494, 3.6337, 3.2389, 3.0069, 2.8524, 2.7413, 2.6572, 2.5911, 2.5377, 2.4935, 2.4247, 2.3522, 2.2756, 2.2354, 2.1938, 2.1507, 2.1058, 2.0589, 2.0096})
            table_fivepercent.Add(New Double() {4.4513, 3.5915, 3.1968, 2.9647, 2.81, 2.6987, 2.6143, 2.548, 2.4943, 2.4499, 2.3807, 2.3077, 2.2304, 2.1898, 2.1477, 2.104, 2.0584, 2.0107, 1.9604})
            table_fivepercent.Add(New Double() {4.4139, 3.5546, 3.1599, 2.9277, 2.7729, 2.6613, 2.5767, 2.5102, 2.4563, 2.4117, 2.3421, 2.2686, 2.1906, 2.1497, 2.1071, 2.0629, 2.0166, 1.9681, 1.9168})
            table_fivepercent.Add(New Double() {4.3807, 3.5219, 3.1274, 2.8951, 2.7401, 2.6283, 2.5435, 2.4768, 2.4227, 2.3779, 2.308, 2.2341, 2.1555, 2.1141, 2.0712, 2.0264, 1.9795, 1.9302, 1.878})
            table_fivepercent.Add(New Double() {4.3512, 3.4928, 3.0984, 2.8661, 2.7109, 2.599, 2.514, 2.4471, 2.3928, 2.3479, 2.2776, 2.2033, 2.1242, 2.0825, 2.0391, 1.9938, 1.9464, 1.8963, 1.8432})
            table_fivepercent.Add(New Double() {4.3248, 3.4668, 3.0725, 2.8401, 2.6848, 2.5727, 2.4876, 2.4205, 2.366, 2.321, 2.2504, 2.1757, 2.096, 2.054, 2.0102, 1.9645, 1.9165, 1.8657, 1.8117})
            table_fivepercent.Add(New Double() {4.3009, 3.4434, 3.0491, 2.8167, 2.6613, 2.5491, 2.4638, 2.3965, 2.3419, 2.2967, 2.2258, 2.1508, 2.0707, 2.0283, 1.9842, 1.938, 1.8894, 1.838, 1.7831})
            table_fivepercent.Add(New Double() {4.2793, 3.4221, 3.028, 2.7955, 2.64, 2.5277, 2.4422, 2.3748, 2.3201, 2.2747, 2.2036, 2.1282, 2.0476, 2.005, 1.9605, 1.9139, 1.8648, 1.8128, 1.757})
            table_fivepercent.Add(New Double() {4.2597, 3.4028, 3.0088, 2.7763, 2.6207, 2.5082, 2.4226, 2.3551, 2.3002, 2.2547, 2.1834, 2.1077, 2.0267, 1.9838, 1.939, 1.892, 1.8424, 1.7896, 1.733})
            table_fivepercent.Add(New Double() {4.2417, 3.3852, 2.9912, 2.7587, 2.603, 2.4904, 2.4047, 2.3371, 2.2821, 2.2365, 2.1649, 2.0889, 2.0075, 1.9643, 1.9192, 1.8718, 1.8217, 1.7684, 1.711})
            table_fivepercent.Add(New Double() {4.2252, 3.369, 2.9752, 2.7426, 2.5868, 2.4741, 2.3883, 2.3205, 2.2655, 2.2197, 2.1479, 2.0716, 1.9898, 1.9464, 1.901, 1.8533, 1.8027, 1.7488, 1.6906})
            table_fivepercent.Add(New Double() {4.21, 3.3541, 2.9604, 2.7278, 2.5719, 2.4591, 2.3732, 2.3053, 2.2501, 2.2043, 2.1323, 2.0558, 1.9736, 1.9299, 1.8842, 1.8361, 1.7851, 1.7306, 1.6717})
            table_fivepercent.Add(New Double() {4.196, 3.3404, 2.9467, 2.7141, 2.5581, 2.4453, 2.3593, 2.2913, 2.236, 2.19, 2.1179, 2.0411, 1.9586, 1.9147, 1.8687, 1.8203, 1.7689, 1.7138, 1.6541})
            table_fivepercent.Add(New Double() {4.183, 3.3277, 2.934, 2.7014, 2.5454, 2.4324, 2.3463, 2.2783, 2.2229, 2.1768, 2.1045, 2.0275, 1.9446, 1.9005, 1.8543, 1.8055, 1.7537, 1.6981, 1.6376})
            table_fivepercent.Add(New Double() {4.1709, 3.3158, 2.9223, 2.6896, 2.5336, 2.4205, 2.3343, 2.2662, 2.2107, 2.1646, 2.0921, 2.0148, 1.9317, 1.8874, 1.8409, 1.7918, 1.7396, 1.6835, 1.6223})
            table_fivepercent.Add(New Double() {4.0847, 3.2317, 2.8387, 2.606, 2.4495, 2.3359, 2.249, 2.1802, 2.124, 2.0772, 2.0035, 1.9245, 1.8389, 1.7929, 1.7444, 1.6928, 1.6373, 1.5766, 1.5089})
            table_fivepercent.Add(New Double() {4.0012, 3.1504, 2.7581, 2.5252, 2.3683, 2.2541, 2.1665, 2.097, 2.0401, 1.9926, 1.9174, 1.8364, 1.748, 1.7001, 1.6491, 1.5943, 1.5343, 1.4673, 1.3893})
            table_fivepercent.Add(New Double() {3.9201, 3.0718, 2.6802, 2.4472, 2.2899, 2.175, 2.0868, 2.0164, 1.9588, 1.9105, 1.8337, 1.7505, 1.6587, 1.6084, 1.5543, 1.4952, 1.429, 1.3519, 1.2539})
            table_fivepercent.Add(New Double() {3.8415, 2.9957, 2.6049, 2.3719, 2.2141, 2.0986, 2.0096, 1.9384, 1.8799, 1.8307, 1.7522, 1.6664, 1.5705, 1.5173, 1.4591, 1.394, 1.318, 1.2214, 1})
        End Sub

        Private Sub setup_onepercent_table()

            table_onepercent.Add(New Double() {4052.181, 4999.5, 5403.352, 5624.583, 5763.65, 5858.986, 5928.356, 5981.07, 6022.473, 6055.847, 6106.321, 6157.285, 6208.73, 6234.631, 6260.649, 6286.782, 6313.03, 6339.391, 6365.864})
            table_onepercent.Add(New Double() {98.503, 99, 99.166, 99.249, 99.299, 99.333, 99.356, 99.374, 99.388, 99.399, 99.416, 99.433, 99.449, 99.458, 99.466, 99.474, 99.482, 99.491, 99.499})
            table_onepercent.Add(New Double() {34.116, 30.817, 29.457, 28.71, 28.237, 27.911, 27.672, 27.489, 27.345, 27.229, 27.052, 26.872, 26.69, 26.598, 26.505, 26.411, 26.316, 26.221, 26.125})
            table_onepercent.Add(New Double() {21.198, 18, 16.694, 15.977, 15.522, 15.207, 14.976, 14.799, 14.659, 14.546, 14.374, 14.198, 14.02, 13.929, 13.838, 13.745, 13.652, 13.558, 13.463})
            table_onepercent.Add(New Double() {16.258, 13.274, 12.06, 11.392, 10.967, 10.672, 10.456, 10.289, 10.158, 10.051, 9.888, 9.722, 9.553, 9.466, 9.379, 9.291, 9.202, 9.112, 9.02})
            table_onepercent.Add(New Double() {13.745, 10.925, 9.78, 9.148, 8.746, 8.466, 8.26, 8.102, 7.976, 7.874, 7.718, 7.559, 7.396, 7.313, 7.229, 7.143, 7.057, 6.969, 6.88})
            table_onepercent.Add(New Double() {12.246, 9.547, 8.451, 7.847, 7.46, 7.191, 6.993, 6.84, 6.719, 6.62, 6.469, 6.314, 6.155, 6.074, 5.992, 5.908, 5.824, 5.737, 5.65})
            table_onepercent.Add(New Double() {11.259, 8.649, 7.591, 7.006, 6.632, 6.371, 6.178, 6.029, 5.911, 5.814, 5.667, 5.515, 5.359, 5.279, 5.198, 5.116, 5.032, 4.946, 4.859})
            table_onepercent.Add(New Double() {10.561, 8.022, 6.992, 6.422, 6.057, 5.802, 5.613, 5.467, 5.351, 5.257, 5.111, 4.962, 4.808, 4.729, 4.649, 4.567, 4.483, 4.398, 4.311})
            table_onepercent.Add(New Double() {10.044, 7.559, 6.552, 5.994, 5.636, 5.386, 5.2, 5.057, 4.942, 4.849, 4.706, 4.558, 4.405, 4.327, 4.247, 4.165, 4.082, 3.996, 3.909})
            table_onepercent.Add(New Double() {9.646, 7.206, 6.217, 5.668, 5.316, 5.069, 4.886, 4.744, 4.632, 4.539, 4.397, 4.251, 4.099, 4.021, 3.941, 3.86, 3.776, 3.69, 3.602})
            table_onepercent.Add(New Double() {9.33, 6.927, 5.953, 5.412, 5.064, 4.821, 4.64, 4.499, 4.388, 4.296, 4.155, 4.01, 3.858, 3.78, 3.701, 3.619, 3.535, 3.449, 3.361})
            table_onepercent.Add(New Double() {9.074, 6.701, 5.739, 5.205, 4.862, 4.62, 4.441, 4.302, 4.191, 4.1, 3.96, 3.815, 3.665, 3.587, 3.507, 3.425, 3.341, 3.255, 3.165})
            table_onepercent.Add(New Double() {8.862, 6.515, 5.564, 5.035, 4.695, 4.456, 4.278, 4.14, 4.03, 3.939, 3.8, 3.656, 3.505, 3.427, 3.348, 3.266, 3.181, 3.094, 3.004})
            table_onepercent.Add(New Double() {8.683, 6.359, 5.417, 4.893, 4.556, 4.318, 4.142, 4.004, 3.895, 3.805, 3.666, 3.522, 3.372, 3.294, 3.214, 3.132, 3.047, 2.959, 2.868})
            table_onepercent.Add(New Double() {8.531, 6.226, 5.292, 4.773, 4.437, 4.202, 4.026, 3.89, 3.78, 3.691, 3.553, 3.409, 3.259, 3.181, 3.101, 3.018, 2.933, 2.845, 2.753})
            table_onepercent.Add(New Double() {8.4, 6.112, 5.185, 4.669, 4.336, 4.102, 3.927, 3.791, 3.682, 3.593, 3.455, 3.312, 3.162, 3.084, 3.003, 2.92, 2.835, 2.746, 2.653})
            table_onepercent.Add(New Double() {8.285, 6.013, 5.092, 4.579, 4.248, 4.015, 3.841, 3.705, 3.597, 3.508, 3.371, 3.227, 3.077, 2.999, 2.919, 2.835, 2.749, 2.66, 2.566})
            table_onepercent.Add(New Double() {8.185, 5.926, 5.01, 4.5, 4.171, 3.939, 3.765, 3.631, 3.523, 3.434, 3.297, 3.153, 3.003, 2.925, 2.844, 2.761, 2.674, 2.584, 2.489})
            table_onepercent.Add(New Double() {8.096, 5.849, 4.938, 4.431, 4.103, 3.871, 3.699, 3.564, 3.457, 3.368, 3.231, 3.088, 2.938, 2.859, 2.778, 2.695, 2.608, 2.517, 2.421})
            table_onepercent.Add(New Double() {8.017, 5.78, 4.874, 4.369, 4.042, 3.812, 3.64, 3.506, 3.398, 3.31, 3.173, 3.03, 2.88, 2.801, 2.72, 2.636, 2.548, 2.457, 2.36})
            table_onepercent.Add(New Double() {7.945, 5.719, 4.817, 4.313, 3.988, 3.758, 3.587, 3.453, 3.346, 3.258, 3.121, 2.978, 2.827, 2.749, 2.667, 2.583, 2.495, 2.403, 2.305})
            table_onepercent.Add(New Double() {7.881, 5.664, 4.765, 4.264, 3.939, 3.71, 3.539, 3.406, 3.299, 3.211, 3.074, 2.931, 2.781, 2.702, 2.62, 2.535, 2.447, 2.354, 2.256})
            table_onepercent.Add(New Double() {7.823, 5.614, 4.718, 4.218, 3.895, 3.667, 3.496, 3.363, 3.256, 3.168, 3.032, 2.889, 2.738, 2.659, 2.577, 2.492, 2.403, 2.31, 2.211})
            table_onepercent.Add(New Double() {7.77, 5.568, 4.675, 4.177, 3.855, 3.627, 3.457, 3.324, 3.217, 3.129, 2.993, 2.85, 2.699, 2.62, 2.538, 2.453, 2.364, 2.27, 2.169})
            table_onepercent.Add(New Double() {7.721, 5.526, 4.637, 4.14, 3.818, 3.591, 3.421, 3.288, 3.182, 3.094, 2.958, 2.815, 2.664, 2.585, 2.503, 2.417, 2.327, 2.233, 2.131})
            table_onepercent.Add(New Double() {7.677, 5.488, 4.601, 4.106, 3.785, 3.558, 3.388, 3.256, 3.149, 3.062, 2.926, 2.783, 2.632, 2.552, 2.47, 2.384, 2.294, 2.198, 2.097})
            table_onepercent.Add(New Double() {7.636, 5.453, 4.568, 4.074, 3.754, 3.528, 3.358, 3.226, 3.12, 3.032, 2.896, 2.753, 2.602, 2.522, 2.44, 2.354, 2.263, 2.167, 2.064})
            table_onepercent.Add(New Double() {7.598, 5.42, 4.538, 4.045, 3.725, 3.499, 3.33, 3.198, 3.092, 3.005, 2.868, 2.726, 2.574, 2.495, 2.412, 2.325, 2.234, 2.138, 2.034})
            table_onepercent.Add(New Double() {7.562, 5.39, 4.51, 4.018, 3.699, 3.473, 3.304, 3.173, 3.067, 2.979, 2.843, 2.7, 2.549, 2.469, 2.386, 2.299, 2.208, 2.111, 2.006})
            table_onepercent.Add(New Double() {7.314, 5.179, 4.313, 3.828, 3.514, 3.291, 3.124, 2.993, 2.888, 2.801, 2.665, 2.522, 2.369, 2.288, 2.203, 2.114, 2.019, 1.917, 1.805})
            table_onepercent.Add(New Double() {7.077, 4.977, 4.126, 3.649, 3.339, 3.119, 2.953, 2.823, 2.718, 2.632, 2.496, 2.352, 2.198, 2.115, 2.028, 1.936, 1.836, 1.726, 1.601})
            table_onepercent.Add(New Double() {6.851, 4.787, 3.949, 3.48, 3.174, 2.956, 2.792, 2.663, 2.559, 2.472, 2.336, 2.192, 2.035, 1.95, 1.86, 1.763, 1.656, 1.533, 1.381})
            table_onepercent.Add(New Double() {6.635, 4.605, 3.782, 3.319, 3.017, 2.802, 2.639, 2.511, 2.407, 2.321, 2.185, 2.039, 1.878, 1.791, 1.696, 1.592, 1.473, 1.325, 1})
        End Sub
    End Class

End Namespace
