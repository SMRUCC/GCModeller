<?xml version="1.0"?>
<doc>
  <assembly>
    <name>
      Microsoft.VisualBasic.Framework_v47_dotnet_8da45dcd8060cc9a
    </name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.My.Resources.Resources">
      <summary>
        一个强类型的资源类，用于查找本地化的字符串等。
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.My.Resources.Resources.ResourceManager">
      <summary>
        返回此类使用的缓存的 ResourceManager 实例。
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.My.Resources.Resources.Culture">
      <summary>
        使用此强类型资源类，为所有资源查找
        重写当前线程的 CurrentUICulture 属性。
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.My.Resources.Resources.CPOL">
      <summary>
        查找类似 ?&lt;html&gt;
        &lt;head&gt;
        &lt;title&gt;The Code Project Open License (CPOL)&lt;/title&gt;
        &lt;Style&gt;
        BODY, P, TD { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt }
        H1,H2,H3,H4,H5 { color: #ff9900; font-weight: bold; }
        H1 { font-size: 14pt;color:black }
        H2 { font-size: 13pt; }
        H3 { font-size: 12pt; }
        H4 { font-size: 10pt; color: black; }
        PRE { BACKGROUND-COLOR: #FBEDBB; FONT-FAMILY: &quot;Courier New&quot;, Courier, mono; WHITE-SPACE: pre; }
        CODE { COLOR: #990000; FONT-FAMILY: &quot;Courier New&quot;, Courier, mono; }
        .S [字符串的其余部分被截断]&quot;; 的本地化字符串。
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.My.Resources.Resources.gpl">
      <summary>
        查找类似                     GNU GENERAL PUBLIC LICENSE
        Version 3, 29 June 2007

        Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
        Everyone is permitted to copy and distribute verbatim copies
        of this license document, but changing it is not allowed.

        Preamble

        The GNU General Public License is a free, copyleft license for
        software and other kinds of works.

        The licenses for most software and other practical works are designed
        to [字符串的其余部分被截断]&quot;; 的本地化字符串。
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.My.Resources.Resources.license">
      <summary>
        查找类似 This program is free software: you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU  [字符串的其余部分被截断]&quot;; 的本地化字符串。
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.My.Resources.Resources.List_of_MIME_types___Internet_Media_Types_">
      <summary>
        查找类似 Name	MIME Type / Internet Media Type	File Extension	More Details
        3D Crossword Plugin	application/vnd.hzn-3d-crossword	.x3d	IANA: 3D Crossword Plugin
        3GP	video/3gpp	.3gp	Wikipedia: 3GP
        3GP2	video/3gpp2	.3g2	Wikipedia: 3G2
        3GPP MSEQ File	application/vnd.mseq	.mseq	IANA: 3GPP MSEQ File
        3M Post It Notes	application/vnd.3m.post-it-notes	.pwn	IANA: 3M Post It Notes
        3rd Generation Partnership Project - Pic Large	application/vnd.3gpp.pic-bw-large	.plb	3GPP
        3rd Generation Partnership Project - Pic Small	appli [字符串的其余部分被截断]&quot;; 的本地化字符串。
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.RegistryUtils.RegisterCOMDll(System.String)">
      <summary>
        Register a .NET dll file as a COM component.(将某一个.NET语言所编写的DLL文件注册为COM组件)
      </summary>
      <param name="COM_Dll"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.RegistryUtils.RegisterExtensions(System.String,System.String)">
      <summary>
        ### Registering Extensions of the .NET Framework

        > https://msdn.microsoft.com/en-us/library/ee722096.aspx
      </summary>
      <param name="PATH$"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Utils.TaskRun(System.Action,System.String)">
      <summary>
        Run background task, if the <see cref="M:Microsoft.VisualBasic.Parallel.Tasks.AsyncHandle`1.GetValue"/> returns nothing,
        then means the task run no errors.
      </summary>
      <param name="task"></param>
      <param name="stack">进行调用堆栈的上一层的栈名称</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Utils.Time(System.Action)">
      <summary>
        Returns the total executation time of the target <paramref name="work"/>.
        (性能测试工具，函数之中会自动输出整个任务所经历的处理时长)
      </summary>
      <param name="work">
        Function pointer of the task work that needs to be tested.(需要测试性能的工作对象)
      </param>
      <returns>
        Returns the total executation time of the target <paramref name="work"/>. ms
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Utils.FormatTicks(System.Int64)">
      <summary>
        Format ``ms`` for content print.
      </summary>
      <param name="ms"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Utils.Wait(System.Func{System.Boolean})">
      <summary>
        假若条件判断<paramref name="handle"/>不为真的话，函数会一直阻塞线程，直到条件判断<paramref name="handle"/>为真
      </summary>
      <param name="handle"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Utils.Wait(Microsoft.VisualBasic.ApplicationServices.Utils.WaitHandle)">
      <summary>
        假若条件判断<paramref name="handle"/>不为真的话，函数会一直阻塞线程，直到条件判断<paramref name="handle"/>为真
      </summary>
      <param name="handle"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Utils.CLIPath(System.String)">
      <summary>
        If the path string value is already wrappered by quot, then this function will returns the original string (DO_NOTHING).
        (假若命令行之中的文件名参数之中含有空格的话，则可能会造成错误，需要添加一个双引号来消除歧义)
      </summary>
      <param name="Path"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Utils.CLIToken(System.String)">
      <summary>
        <see cref="M:Microsoft.VisualBasic.ApplicationServices.Utils.CLIPath(System.String)"/>函数为了保持对Linux系统的兼容性会自动替换\为/符号，这个函数则不会执行这个替换
      </summary>
      <param name="Token"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Utils.GetMIMEDescrib(System.String)">
      <summary>
        *.txt -> text
      </summary>
      <param name="ext$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Debugging.VisualBasicAppException">
      <summary>
        VisualBasic application exception wrapper
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Debugging.VisualBasicAppException.args">
      <summary>
        The CLI arguments string
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Debugging.VisualBasicAppException.Environment">
      <summary>
        The internal App environment variables
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Debugging.VisualBasicAppException.System">
      <summary>
        The system version information
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.VisualBasicAppException.#ctor(System.Exception,System.String)">
      <summary>
        <see cref="T:System.Exception"/> inner wrapper
      </summary>
      <param name="ex">The exception details</param>
      <param name="calls">Method name where occurs this exception.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.ExceptionExtensions.Fail(System.String,System.String)">
      <summary>
        Just throw exception, but the exception contains more details information for the debugging
      </summary>
      <param name="msg$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerLevels">
      <summary>
        默认的参数值是<see cref="F:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerLevels.On"/>
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerLevels.On">
      <summary>
        是否输出调试信息有程序代码来控制，这个是默认的参数
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerLevels.Off">
      <summary>
        不会输出任务调试信息
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerLevels.All">
      <summary>
        强制覆盖掉<see cref="F:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerLevels.On"/>的设置，输出所有类型的信息
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerLevels.Warning">
      <summary>
        只会输出警告或者错误类型的信息
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerLevels.Error">
      <summary>
        只会输出错误类型的信息
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerArgs">
      <summary>
        调试器设置参数模块
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerArgs.ErrLogs">
      <summary>
        错误日志的文件存储位置，默认是在AppData里面
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerArgs.SaveErrorLog(System.String)">
      <summary>

      </summary>
      <param name="log">日志文本</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerArgs.__logShell(Microsoft.VisualBasic.CommandLine.CommandLine)">
      <summary>
        Logging command shell history.
      </summary>
      <param name="args"></param>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerArgs.DebuggerHelps">
      <summary>
        Some optional VisualBasic debugger parameter help information.(VisualBasic调试器的一些额外的开关参数的帮助信息)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.DebuggerArgs.InitDebuggerEnvir(Microsoft.VisualBasic.CommandLine.CommandLine,System.String)">
      <summary>
        Initialize the global environment variables in this App process.
      </summary>
      <param name="args">--echo on/off/all/warn/error --err &lt;path.log></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogReader">
      <summary>
        分析服务器的问题原因所需要的日志分析工具
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogEntry.ToString">
      <summary>
        生成日志文档之中的一行记录数据
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES">
      <summary>
        Logging levels, the types enumeration of the log file message.
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES.INF">
      <summary>
        The normal information message.[WHITE]
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES.ERR">
      <summary>
        The program error information message.[RED]
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES.WRN">
      <summary>
        Warnning message from the program.[YELLOW]
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES.DEBUG">
      <summary>
        The program debug information message.[BLUE]
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog">
      <summary>
        Provides interaction with Windows event logs.(这个日志入口点对象的创建应该调用于安装程序的模块之中，并且以管理员权限执行)
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.#ctor(System.String,System.String)">
      <summary>

      </summary>
      <param name="Product">Source</param>
      <param name="Services"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>
        Writes a localized entry to the event log.
      </summary>
      <param name="EventType">
        An <see cref="T:System.Diagnostics.EventLogEntryType"/> value that indicates the event type.
      </param>
      <param name="category">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.WriteEntry(System.Collections.Generic.IEnumerable{System.String},System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>
        Writes a localized entry to the event log.
      </summary>
      <param name="EventType">
        An <see cref="T:System.Diagnostics.EventLogEntryType"/> value that indicates the event type.
      </param>
      <param name="category">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.WriteEntry(System.Collections.Generic.IEnumerable{System.String},System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>
        Writes a localized entry to the event log.
      </summary>
      <param name="EventType">
        An <see cref="T:System.Diagnostics.EventLogEntryType"/> value that indicates the event type.
      </param>
      <param name="category">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.WriteEntry(System.Collections.Generic.IEnumerable{System.String},System.Reflection.MethodBase,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>
        Writes a localized entry to the event log.
      </summary>
      <param name="EventType">
        An <see cref="T:System.Diagnostics.EventLogEntryType"/> value that indicates the event type.
      </param>
      <param name="category">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>
        Writes a localized entry to the event log.
      </summary>
      <param name="EventType">
        An <see cref="T:System.Diagnostics.EventLogEntryType"/> value that indicates the event type.
      </param>
      <param name="category">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.WriteEntry(System.String,System.Reflection.MethodBase,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>
        Writes a localized entry to the event log.
      </summary>
      <param name="EventType">
        An <see cref="T:System.Diagnostics.EventLogEntryType"/> value that indicates the event type.
      </param>
      <param name="category">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.LogException(System.Exception,System.String,System.Int32)">
      <summary>
        Writes a localized entry to the event log.
      </summary>
      <param name="category">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</param>
      <returns></returns>
      <param name="Trace">可以不需要进行额外的处理，编译器会自动在这个参数填充调用栈的位置</param>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.LogException(System.Exception,System.Reflection.MethodBase,System.Int32)">
      <summary>
        Writes a localized entry to the event log.
      </summary>
      <param name="category">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.ToString">
      <summary>
        $"{<see cref="P:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.Services"/>}//{<see cref="P:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.EventLog.Product"/>}"
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogFile">
      <summary>
        日志文件记录模块。因为在Linux平台上面，Windows的日志记录API可能不会正常工作，
        所以需要这个日志模块来接替Windows的日志模块的工作
      </summary>
      <remarks>
        这个类模块将输入的信息格式化保存到文本文件之中，记录的信息包括信息头，消息文本，以及消息等级
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogFile.FileName">
      <summary>
        没有路径名称和拓展名，仅包含有单独的文件名
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogFile.NowTimeNormalizedString">
      <summary>
        将时间字符串里面的":"符号去除之后，剩余的字符串可以用于作为路径来使用
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogFile.#ctor(System.String,System.Boolean,System.Int32)">
      <summary>

      </summary>
      <param name="Path">This logfile will saved to.</param>
      <remarks></remarks>
      <param name="bufferSize">当日志的记录数目达到这个数目的时候就会将日志数据写入到文件之中</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogFile.WriteLine(System.String,System.String,Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES)">
      <summary>
        向日志文件之中写入数据
      </summary>
      <param name="Msg"></param>
      <param name="[Object]"></param>
      <param name="Type"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogFile.SaveLog">
      <summary>
        会自动拓展已经存在的日志数据
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogFile.WriteLine(System.String,System.String[])">
      <summary>

      </summary>
      <param name="s"></param>
      <param name="args">{[Object] As String, Optional Type As MsgType = MsgType.INF, Optional WriteToScreen As Boolean = True}</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogFile.Save(System.String,System.Text.Encoding)">
      <summary>
        日志文件在保存的时候默认是追加的方式
      </summary>
      <param name="FilePath"></param>
      <param name="Encoding"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.LogFile.SystemInfo">
      <summary>
        给出用于调试的系统的信息摘要
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.IOHandler">
      <summary>
        Collection IO extensions
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Terminal.PrintAsTable.Print``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <summary>
        Returns a text string
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="addBorder"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Terminal.PrintAsTable.Print``1(System.Collections.Generic.IEnumerable{``0},System.IO.TextWriter,System.Boolean)">
      <summary>
        Print the object collection as table on the console
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="dev"></param>
      <param name="addBorder"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Terminal.PrintAsTable.PrintTable(System.Collections.Generic.IEnumerable{System.String[]},System.IO.TextWriter,System.Char,System.String[],System.Boolean,System.Int32)">
      <summary>
        与函数<see cref="M:Microsoft.VisualBasic.ApplicationServices.Terminal.PrintAsTable.Print(System.Collections.Generic.Dictionary{System.String,System.String},System.IO.TextWriter,System.Char,System.Int32)"/>所不同的是，这个函数还会添加边框
      </summary>
      <param name="source"></param>
      <param name="dev"></param>
      <param name="sep"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Terminal.PrintAsTable.Print(System.Collections.Generic.IEnumerable{System.String[]},System.IO.TextWriter,System.Char,System.Int32)">
      <summary>
        Print the string matrix collection <paramref name="source"/> in table layout.
      </summary>
      <param name="source">The string matrix collection.</param>
      <param name="dev">The output device</param>
      <param name="sep"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Terminal.PrintAsTable.Print(System.Collections.Generic.Dictionary{System.String,System.String},System.IO.TextWriter,System.Char,System.Int32)">
      <summary>
        Print the string dictionary as table
      </summary>
      <param name="table"></param>
      <param name="dev"></param>
      <param name="sep"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Development.LicenseMgr">
      <summary>
        Source code license manager
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Development.LicenseMgr.Template">
      <summary>
        The license template example.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Development.LicenseMgr.Ignores">
      <summary>
        Enumerates all of the VisualStudio IDE auto generated source file.

        ```json
        {".+\.Designer\.vb", "AssemblyInfo\.vb"}
        ```
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.LicenseMgr.Insert(System.String,Microsoft.VisualBasic.ApplicationServices.Development.LicenseInfo)">
      <summary>

      </summary>
      <param name="src">*.vb path</param>
      <param name="info">License meta data</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.LicenseMgr.Inserts(Microsoft.VisualBasic.ApplicationServices.Development.LicenseInfo)">
      <summary>

      </summary>
      <param name="info">The root directory</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.Project">
      <summary>
        Describes a Project, a collection of related types and namespaces.  In this case, one Project = one DLL.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectMember">
      <summary>
        Base class for a method or property.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectMember.Declare">
      <summary>
        申明的原型
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectNamespace">
      <summary>
        A namespace within a project -- typically a collection of related types.  Equates to a .net Namespace.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectNamespace.ExportMarkdownFile(System.String,System.String,Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.URLBuilder)">
      <summary>
        Exports for namespace markdown documents
      </summary>
      <param name="folderPath"></param>
      <param name="pageTemplate"></param>
      <param name="url"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectSpace">
      <summary>
        A collection of one or more projects put together, and their attendant namespaces.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectSpace.ExportMarkdownFiles(System.String,System.String,Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.URLBuilder)">
      <summary>

      </summary>
      <param name="folderPath">The root directory folder path for the generated markdown document that saved.</param>
      <param name="pageTemplate">
        a markdown page template. This token: [content] will be replaced with generated content.
      </param>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectSpace.TemplateToken">
      <summary>
        Default page content template
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectSpace.ExportMarkdownFiles(System.String,Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.URLBuilder)">
      <summary>
        Using this method for the xml docs export as markdown documents
      </summary>
      <param name="folderPath">
        The root directory folder path for the generated markdown document that saved.
      </param>
      <param name="url">Generates the hexo page source file?</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectSpace.BuildIndex(System.String,Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.Libraries)">
      <summary>

      </summary>
      <param name="out"></param>
      <param name="lib">Generates the hexo page source?</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectType">
      <summary>
        A type within a project namespace.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectType.ExportMarkdownFile(System.String,System.String,Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.URLBuilder)">
      <summary>
        Exports for the specific type in a namespace
      </summary>
      <param name="folderPath"></param>
      <param name="pageTemplate"></param>
      <param name="url"></param>
      <remarks>这里还应该包括完整的函数的参数注释的输出</remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.URLBuilder.ext">
      <summary>
        link url after hexo generates the static site
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.URLBuilder.GetNamespaceSave(System.String,Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly.ProjectNamespace)">
      <summary>
        ``*.md`` output path
      </summary>
      <param name="folderPath$"></param>
      <param name="ns"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.Libraries.Github">
      <summary>
        The built document library was using as github wiki
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.Libraries.xDoc">
      <summary>
        The built document library was using as xDoc library content source.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.Libraries.Hexo">
      <summary>
        The built document library was using as hexo page source.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.memberTypes.Type">
      <summary>
        T
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.memberTypes.Filed">
      <summary>
        F
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.memberTypes.Method">
      <summary>
        M
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.memberTypes.Property">
      <summary>
        P
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.memberTypes.Event">
      <summary>
        E
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.Doc">
      <summary>
        .NET assembly generated XML comments documents file.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.DocAPI.GetLibraryType(Microsoft.VisualBasic.Language.Value{System.String})">
      <summary>
        类型名称的大小写不敏感
      </summary>
      <param name="type"></param>
      <returns>
        查找失败的时候默认是返回<see cref="F:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.Libraries.Github"/>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization.DocAPI.__trans(System.String)">
      <summary>
        这里会将双引号替换成为markdown里面的inline code形式
      </summary>
      <param name="cref"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Windows.Forms.VistaSecurity.IsAdmin">
      <summary>
        Checks if the process is elevated
      </summary>
      <returns>If is elevated</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Windows.Forms.VistaSecurity.AddShieldToButton(System.Windows.Forms.Button)">
      <summary>
        Add a shield icon to a button
      </summary>
      <param name="b">The button</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Windows.Forms.VistaSecurity.RestartElevated(System.String)">
      <summary>
        Restart the current process with administrator credentials.(以管理员的身份重启本应用程序)
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationDetails">
      <summary>
        Parsing product assembly meta data
      </summary>
      <remarks>
        http://www.c-sharpcorner.com/uploadfile/ravesoft/access-assemblyinfo-file-and-get-product-informations/
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationDetails.#ctor">
      <summary>
        获取当前的应用程序的描述信息
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationDetails.CurrentExe">
      <summary>
        获取当前进程的exe文件的程序描述信息，直接使用New申明得到的只是运行时核心模块dll文件的信息
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationDetails.CompanyName">
      <summary>
        Get the name of the system provider name from the assembly
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationDetails.ProductVersion">
      <summary>
        Get System version from the assembly
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationDetails.ProductName">
      <summary>
        Get the name of the System from the assembly
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationDetails.CopyRightsDetail">
      <summary>
        Get the copyRights details from the assembly
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationDetails.ProductTitle">
      <summary>
        Get the Product tile from the assembly
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationDetails.ProductDescription">
      <summary>
        Get the description of the product from the assembly
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo">
      <summary>
        Provides detailed information about the host operating system.(用于判断操作系统的具体版本信息的工具)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.ProgramBits">
      <summary>
        Determines if the current application is 32 or 64-bit.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.ProcessorBits">
      <summary>
        Determines if the current processor is 32 or 64-bit.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.Edition">
      <summary>
        Gets the edition of the operating system running on this computer.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.null">
      <summary>
        Linux/MAC
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.Windows3_1">
      <summary>
        Windows 3.1
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsCE">
      <summary>
        Windows CE
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.Windows95OSR2">
      <summary>
        Windows 95 OSR2
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.Windows95">
      <summary>
        Windows 95
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.Windows98SecondEdition">
      <summary>
        Windows 98 Second Edition
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.Windows98">
      <summary>
        Windows 98
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsMe">
      <summary>
        Windows Me
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsNT3_51">
      <summary>
        Windows NT 3.51
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsNT4_0">
      <summary>
        Windows NT 4.0
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsNT4_0Server">
      <summary>
        Windows NT 4.0 Server
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.Windows2000">
      <summary>
        Windows 2000
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsXP">
      <summary>
        Windows XP
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsServer2003">
      <summary>
        Windows Server 2003
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsVista">
      <summary>
        Windows Vista
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsServer2008">
      <summary>
        Windows Server 2008
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.Windows7">
      <summary>
        Windows 7
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsServer2008R2">
      <summary>
        Windows Server 2008 R2
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.Windows8">
      <summary>
        Windows 8
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsNameList.WindowsServer2012">
      <summary>
        Windows Server 2012
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.WindowsName">
      <summary>
        Gets the name of the operating system running on this computer.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.GetVersionEx(Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.OSVERSIONINFOEX@)">
      <summary>
        ##### GetVersionEx Function

        _GetVersionEx may be altered Or unavailable for releases after Windows 8.1. Instead, use the Version Helper functions_

        With the release Of Windows 8.1, the behavior Of the GetVersionEx API has changed In the value it will Return For the
        operating system version. The value returned by the GetVersionEx Function now depends On how the application Is
        manifested.
        Applications Not manifested for Windows 8.1 Or Windows 10 will return the Windows 8 OS version value (6.2). Once an
        application Is manifested for a given operating system version, GetVersionEx will always return the version that the
        application Is manifested for in future releases. To manifest your applications for Windows 8.1 Or Windows 10, refer
        to Targeting your application for Windows.

        **Syntax**

        ```C
        BOOL WINAPI GetVersionEx(
        _Inout_ LPOSVERSIONINFO lpVersionInfo
        );
        ```

      </summary>
      <param name="osVersionInfo">
        An OSVersionInfo Or OSVERSIONINFOEX structure that receives the operating system information.
        Before calling the GetVersionEx Function, set the dwOSVersionInfoSize member of the structure as appropriate to indicate
        which data structure Is being passed to this function.
      </param>
      <returns>
        If the Then Function succeeds, the Return value Is a nonzero value.
        If the Then Function fails, the Return value Is zero. To Get extended Error information, Call GetLastError.
        The Function fails If you specify an invalid value For the dwOSVersionInfoSize member Of the OSVERSIONINFO
        Or OSVERSIONINFOEX Structure.
      </returns>
      <remarks>
        Identifying the current operating system Is usually Not the best way To determine whether a particular operating system
        feature Is present. This Is because the operating system may have had New features added In a redistributable DLL. Rather
        than Using GetVersionEx To determine the operating system platform Or version number, test For the presence Of the feature
        itself. For more information, see Operating System Version.
        The GetSystemMetrics function provides additional information about the current operating system.

        |Product|Setting|
        |-------|-------|
        |Windows XP Media Center Edition|SM_MEDIACENTER|
        |Windows XP Starter Edition|SM_STARTER|
        |Windows XP Tablet PC Edition|SM_TABLETPC|
        |Windows Server 2003 R2|SM_SERVERR2|

        To check for specific operating systems Or operating system features, use the IsOS function. The GetProductInfo function retrieves the product type.
        To retrieve information for the operating system on a remote computer, use the NetWkstaGetInfo function, the Win32_OperatingSystem WMI class, Or the OperatingSystem property of the IADsComputer interface.
        To compare the current system version to a required version, use the VerifyVersionInfo function instead of using GetVersionEx to perform the comparison yourself.

        If compatibility Then mode Is In effect, the GetVersionEx Function reports the operating system As it identifies itself, which may Not
        be the operating system that Is installed. For example, If compatibility mode Is In effect, GetVersionEx reports the operating system
        that Is selected For application compatibility.

        **Examples**

        When using the GetVersionEx function to determine whether your application Is running on a particular version of the operating system,
        check for version numbers that are greater than Or equal to the desired version numbers. This ensures that the test succeeds for later
        versions of the operating system. For example, if your application requires Windows XP Or later, use the following test.

        ```C
        #include &lt;windows.h>
        #include &lt;stdio.h>

        Void main()
        {
        OSVersionInfo osvi;
        BOOL bIsWindowsXPorLater;

        ZeroMemory(&amp;osvi, SizeOf(OSVersionInfo));
        osvi.dwOSVersionInfoSize = SizeOf(OSVersionInfo);

        GetVersionEx(&amp;osvi);

        bIsWindowsXPorLater =
        ((osvi.dwMajorVersion > 5) ||
        ((osvi.dwMajorVersion == 5) &amp;&amp; (osvi.dwMinorVersion >= 1) ));

        if(bIsWindowsXPorLater)
        printf("The system meets the requirements.\n");
        else printf("The system does not meet the requirements.\n");
        }
        ```

        For an example that identifies the current operating system, see Getting the System Version.

        **Requirements**

        | | |
        |-|-|
        |Minimum supported client|Windows 2000 Professional [desktop apps only]|
        |Minimum supported server|Windows 2000 Server [desktop apps only]|
        |Header|Winbase.h(include Windows.h)|
        |Library|Kernel32.lib|
        |DLL|Kernel32.dll|
        |Unicode And ANSI names|GetVersionExW(Unicode) And GetVersionExA (ANSI)|
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.ServicePack">
      <summary>
        Gets the service pack information of the operating system running on this computer.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.BuildVersion">
      <summary>
        Gets the build version number of the operating system running on this computer.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.VersionString">
      <summary>
        Gets the full version string of the operating system running on this computer.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.Version">
      <summary>
        Gets the full version of the operating system running on this computer.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.MajorVersion">
      <summary>
        Gets the major version number of the operating system running on this computer.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.MinorVersion">
      <summary>
        Gets the minor version number of the operating system running on this computer.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.OSVersionInfo.RevisionVersion">
      <summary>
        Gets the revision version number of the operating system running on this computer.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite">
      <summary>
        Represents a resource manager that provides convenient access to culture-specific
        resources at run time.Security Note: Calling methods in this class with untrusted
        data is a security risk. Call the methods in the class only with trusted data.
        For more information, see Untrusted Data Security Risks.
        (资源卫星程序集)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.FileName">
      <summary>
        The file path of the resources satellite assembly.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.Resources">
      <summary>
        <see cref="T:System.Resources.ResourceManager"/> object in the satellite assembly.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.GetObject(System.String)">
      <summary>
        Returns the value of the specified non-string resource.
      </summary>
      <param name="name">The name of the resource to get.</param>
      <returns>
        The value of the resource localized for the caller's current culture settings.
        If an appropriate resource set exists but name cannot be found, the method returns
        null.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>
        Gets the value of the specified non-string resource localized for the specified
        culture.
      </summary>
      <param name="name">The name of the resource to get.</param>
      <param name="culture">
        The culture for which the resource is localized. If the resource is not localized
        for this culture, the resource manager uses fallback rules to locate an appropriate
        resource.If this value is null, the System.Globalization.CultureInfo object is
        obtained by using the System.Globalization.CultureInfo.CurrentUICulture property.
      </param>
      <returns>
        The value of the resource, localized for the specified culture. If an appropriate
        resource set exists but name cannot be found, the method returns null.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.GetStream(System.String)">
      <summary>
        Returns an unmanaged memory stream object from the specified resource.
      </summary>
      <param name="name">The name of a resource.</param>
      <returns>An unmanaged memory stream object that represents a resource .</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.GetStream(System.String,System.Globalization.CultureInfo)">
      <summary>
        Returns an unmanaged memory stream object from the specified resource, using
        the specified culture.
      </summary>
      <param name="name">The name of a resource.</param>
      <param name="culture">
        An object that specifies the culture to use for the resource lookup. If culture
        is null, the culture for the current thread is used.
      </param>
      <returns>An unmanaged memory stream object that represents a resource.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.GetString(System.String)">
      <summary>
        Returns the value of the specified string resource.
      </summary>
      <param name="name">The name of the resource to retrieve.</param>
      <returns>
        The value of the resource localized for the caller's current UI culture, or null
        if name cannot be found in a resource set.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.GetString(System.String,System.Globalization.CultureInfo)">
      <summary>
        Returns the value of the string resource localized for the specified culture.
      </summary>
      <param name="name">The name of the resource to retrieve.</param>
      <param name="culture">An object that represents the culture for which the resource is localized.</param>
      <returns>
        The value of the resource localized for the specified culture, or null if name
        cannot be found in a resource set.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.#ctor(System.Type)">
      <summary>
        Load external resource data from current module's satellite assembly.
      </summary>
      <param name="type"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.#ctor(System.Reflection.Assembly)">
      <summary>
        默认是<see cref="P:Microsoft.VisualBasic.App.HOME"/>/Resources/assmFile
      </summary>
      <param name="assm"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.#ctor(System.Type,System.Reflection.Assembly)">
      <summary>

      </summary>
      <param name="my">null</param>
      <param name="assm"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.LoadMy">
      <summary>
        从自身的程序集之中加载数据
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ResourcesSatellite.MyResource">
      <summary>
        Returns the cached ResourceManager instance used by this class.
      </summary>
      <returns></returns>

    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Globalization.StringResources`1.Default">
      <summary>
        从属性或者域上面解析出来的默认的语言值
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Globalization.LanguageAttribute.#ctor(System.Int32,System.String,System.Type)">
      <summary>

      </summary>
      <param name="Language">The language of the target object.</param>
      <param name="Context"></param>
      <param name="langEnum">This type define should be a enum type.</param>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.Globalization.LanguageHelper`1">
      <summary>

      </summary>
      <typeparam name="TLanguage">必须是枚举类型</typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.Globalization.LanguageHelper`1.Text(`0,System.String)">
      <summary>
        Get the string that store as specific language.
        (获取指定语言的字符串)
      </summary>
      <param name="Language">字符串的语言</param>
      <value></value>
      <param name="res">请使用 NameOf 操作符来获取</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Globalization.LanguageHelper`1.#ctor(System.Type)">
      <summary>
        解析出所有属性，域上面的语言定义
      </summary>
      <param name="type">必须是模块类型或者属性或者域是共享类型的</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.Globalization.LanguageHelper`1.__init(System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})">
      <summary>

      </summary>
      <param name="members"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.NgenInstaller">
      <summary>
        Ngen.exe (Native Image Generator)

        The Native Image Generator (Ngen.exe) is a tool that improves the performance of managed applications.
        Ngen.exe creates native images, which are files containing compiled processor-specific machine code,
        and installs them into the native image cache on the local computer. The runtime can use native images
        from the cache instead of using the just-in-time (JIT) compiler to compile the original assembly.

        Changes To Ngen.exe In the .NET Framework 4
        Ngen.exe now compiles assemblies With full trust, And code access security (CAS) policy Is no longer evaluated.
        Native images that are generated With Ngen.exe can no longer be loaded into applications that are running In Partial trust.

        Changes To Ngen.exe In the .NET Framework version 2.0:
        Installing an assembly also installs its dependencies, simplifying the syntax Of Ngen.exe.
        Native images can now be Shared across application domains.
        A New Action, update, re - creates images that have been invalidated.
        Actions can be deferred For execution by a service that uses idle time On the computer To generate And install images.
        Some causes Of image invalidation have been eliminated.
      </summary>
      <remarks>
        1.7 Native代码产生器: NGen.exe

        随.NET Framework发布的NGen.exe工具可以将IL代码编译成native代码, 当应用程序安装在用户的机器上时. 因为代码是在安装的时候编译的, CLR的JIT编译器不需要在运行时刻编译IL代码
        这能提高应用程序的性能. NGen.exe工具在下面两个场合很有趣:

        提高了应用程序的启动速度 运行NGen.exe能提高启动速度, 因为代码已经编译成native代码, 所以在运行时就不需要编译了
        减少应用程序的工作集 如果你认为一个程序集会被同时载入到多个进程/ Appdomain, 在这个程序集上运行NGen.exe能减少应用程序的工作集, 其原因是NGen.exe工具将IL编译成native代码,
        然后将输出保存到单独的文件中, 这个文件能同时被内存映射(memory - mapping)到多个进程地址空间中, 允许代码共享, 每个进程 / AppDomain不必为自己拷贝一份代码

        当一个安装程序调用NGen.exe对一个应用程序或程序集进行编译时, 那个应用程序的所有程序集或者一个特定的程序集会把其IL代码编译成native代码, 一个新的只包含native代码而不含有IL的程序集文件会被NGen.exe创建.
        这个新的文件被放到名字类似于 C: /Windows/Assembly/NativeImages_v2.0.50727_32的文件夹下面, 这个文件家名字包含了CLR的版本和native代码是否是为x86(32位版本的Windows), x64,
        或者Itaninum(64位版本的Windows)编译的信息.

        现在, 当CLR载入一个程序集文件时, CLR查看对应的NGen native文件是否存在, 如果没发现native文件, CLR JIT对IL代码像通常那样进行编译.
        然而, 如果对应的native文件存在, CLR将使用native文件中的编译好的代码, 文件中的函数就不需要在运行时刻编译了.

        在表面上, 这听起来非常好, 听上去就像如果你得到了托管代码的全部优点(垃圾回收, 代码验证, 类型安全, 等等)而不牺牲托管代码的性能(JIT编译),
        但是实际情况并不总是那么美好, NGen'd文件有几个潜在的问题:

        没有知识产权保护 很多人以为可以发布NGen文件而不用发布包含原始IL代码的文件, 从而使他们的知识产权更加保密
        不幸的是, 这并不可行, 在运行时刻, CLR需要访问程序集的metadata(为某些函数, 例如反射和串行化函数), 这需要发布包含IL和metadata的程序集.
        此外, 如果由于某种原因, CLR不能使用NGen文件(如下面所描述的), 那么CLR会回到JIT编译, 对程序集的IL代码进行编译, 因此IL代码必须存在.

        NGen文件可能会过时 当CLR载入NGen文件时, 它会比较以前编译的代码和当前的执行环境的很多特征, 如果任何特征不匹配, NGen文件就不能被使用, JIT编译器进程就要使用. 这是必须被匹配的部分特征列表.

        程序集模块的版本ID(MVID)
        被引用的程序集的版本ID
        处理器类型
        CLR版本
        Build类型(release, debug, optimized debug, profiling, 等等)

        所有链接时的安全性要求都必须在运行时刻被满足才能允许载入.

        注意有可能以升级的方式运行NGen.exe, 这告诉工具对以前曾经被执行NGen'd的所有的程序集上运行NGen.exe. 当终端用户安装.NET Framework的一个新service pack,
        那么service pack的安装程序将会在更新模式下自动运行NGen.exe, 使得NGen文件保持和CLR的版本一致.

        较差的载入时性能(重定位/绑定): 程序集文件是标准的Windows PE文件, 每个文件包含着一个优先使用的基地址. 很多Windows开发者对围绕基地址和重定位的问题很熟悉,
        关于这个主题的更多信息, 可以参考我的书 programming Applications for Microsoft Windows, 4th Edition. 当JIT编译代码时, 不必关心这些问题, 因为正确的内存地址引用会在运行时计算出来.

        然而, NGen的程序集文件的一些内存地址引用是静态计算的, 当Windows加载一个NGen文件时, 它检查文件是否被载入到优先的基地址上, 如果文件没有载入到优先的基地址,
        Windows会重新定位文件, 修改所有内存地址引用. 这是极其耗时的, 因为Windows必须载入整个文件, 并修改文件中的很多字节. 此外, 这个页面文件对应的代码不能跨进程边界共享.

        因此如果你打算NGen程序集文件, 你应该为你的程序集文件选择好的基地址(通过csc.exe的 / baseaddress命令行开关).当你NGen一个程序集文件时, NGen文件将被赋予一个基地址,
        这需要使用一个基于托管程序集基地址的算法. 不幸的是, 微软从没有一个良好的指导来帮助开发者如何赋予基地址. 在64位版本的Windows上, 这还不太会成为问题, 因为地址空间是很充足的,
        但是对于一个32位的地址空间, 为每一个程序集选择一个好的基地址几乎是不可能的, 除非你精确地知道什么东西会被载入到进程, 知道那个程序集的大小不会超过后一个版本.

        较差的执行时性能 当编译代码时, NGen对执行环境做出的假设不会比JIT编译器的多, 这会造成NGen.exe产生较差的代码, 例如, NGen不能优化一些CPU指令, 对静态字段的访问需要简介的操作,
        因为静态字段实际的地址需要在运行时刻才能知道.NGen到处插入代码来调用类的构造函数, 因为它不知道代码执行的次序, 不知道类的构造憾事是否已经被调用了(见第8章, 类的构造函数).
        一些NGen应用程序会比JIT编译的代码慢大约5%, 因此, 如果你打算使用NGen来提高应用程序的性能, 你应该对比NGen’d和非NGen’d版本的应用程序, 确定NGen’d版本在实际执行时并不慢.
        对于一些应用程序, 减小的工作集大小会提高性能, 因此NGen总体上还是会取胜.

        因为上面列出的所有问题, 当考虑使用NGen.exe时, 你应该非常小心.对于服务器端的应用程序来说, NGen.exe的用处很小甚至没有意义, 因为只有第一个客户需求经历了性能上的下降,
        后面的客户需求都是高速运行的.此外, 对于大多数服务器应用程序, 只需要代码的一个实例, 因此没有工作集方面的利益.

        对于客户端应用程序, NGen.exe可能对于提高启动速度或者减小工作集有帮助, 如果程序集被多个应用程序同时使用.甚至没有多个应用程序使用一个程序集, NGen一个程序集也会提高工作集.
        此外, 如果NGen.exe被用于所有的客户端应用程序的程序集, 那么CLR就根本不需要载入JIT编译器, 从而更进一步地降低了工作集.
        当然, 如果只有一个程序集不是NGen'd或者如果一个程序集的NGen文件不能被使用, JIT编译器就会被载入, 应用程序的工作集将会增加.
      </remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Scenarios.Debug">
      <summary>
        Generate native images that can be used under a debugger.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Scenarios.Profile">
      <summary>
        Generate native images that can be used under a profiler.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Scenarios.NoDependencies">
      <summary>
        Generate the minimum number Of native images required by the specified scenario options.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.PriorityLevels.Immediately">
      <summary>
        1 Native images are generated And installed immediately, without waiting For idle time.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.PriorityLevels.Waiting">
      <summary>
        2 Native images are generated And installed without waiting For idle time, but after all priority 1 actions (And their dependencies) have completed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.PriorityLevels.Idle">
      <summary>
        3 Native images are installed When the native image service detects that the computer Is idle. See Native Image Service.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Install(System.String,Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Scenarios,System.String,System.Boolean,Microsoft.VisualBasic.ApplicationServices.NgenInstaller.PriorityLevels)">
      <summary>
        Generate native images for an assembly and its dependencies and install the images in the native image cache.
      </summary>
      <param name="assemblyName">
        The full display name of the assembly. For example, "myAssembly, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0038abc9deabfle5".
        Only one assembly can be specified per Ngen.exe command line.

        * Note You can supply a Partial assembly name, such As myAssembly, For the display And uninstall actions.

        The explicit path of the assembly. You can specify a full or relative path.
        If you specify a file name without a path, the assembly must be located In the current directory.
        Only one assembly can be specified per Ngen.exe command line.
      </param>
      <param name="scenarios"></param>
      <param name="ExeConfig">
        exePath, Use the configuration of the specified executable assembly.
        Ngen.exe needs to make the same decisions as the loader when binding to dependencies. When a shared component Is loaded at run time,
        using the Load method, the application's configuration file determines the dependencies that are loaded for the shared component —
        for example, the version of a dependency that is loaded. The /ExeConfig switch gives Ngen.exe guidance on which dependencies would be loaded at run time.
      </param>
      <param name="AppBase">directoryPath, When locating dependencies, use the specified directory as the application base.</param>
      <param name="queue">If /queue is specified, the action is queued for the native image service. The default priority is 3. See the Priority Levels table.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Uninstall(System.String,Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Scenarios,System.String,System.Boolean)">
      <summary>
        Delete the native images of an assembly and its dependencies from the native image cache.
        To uninstall a single image And its dependencies, use the same command-line arguments that were used to install the image.

        Note In the .NET Framework 4, the action uninstall * Is no longer supported.
      </summary>
      <param name="assemblyName">
        The full display name of the assembly. For example, "myAssembly, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0038abc9deabfle5".
        Only one assembly can be specified per Ngen.exe command line.

        * Note You can supply a Partial assembly name, such As myAssembly, For the display And uninstall actions.

        The explicit path of the assembly. You can specify a full or relative path.
        If you specify a file name without a path, the assembly must be located In the current directory.
        Only one assembly can be specified per Ngen.exe command line.
      </param>
      <param name="scenarios"></param>
      <param name="ExeConfig">
        exePath, Use the configuration of the specified executable assembly.
        Ngen.exe needs to make the same decisions as the loader when binding to dependencies. When a shared component Is loaded at run time,
        using the Load method, the application's configuration file determines the dependencies that are loaded for the shared component —
        for example, the version of a dependency that is loaded. The /ExeConfig switch gives Ngen.exe guidance on which dependencies would be loaded at run time.
      </param>
      <param name="AppBase">directoryPath, When locating dependencies, use the specified directory as the application base.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Update(System.Boolean)">
      <summary>
        Update native images that have become invalid.
        If /queue Is specified, the updates are queued For the native image service. Updates are always scheduled at priority 3, so they run When the computer Is idle.
      </summary>
      <param name="queue"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Display(System.String)">
      <summary>
        Display the state of the native images for an assembly and its dependencies.
        If no argument Is supplied, everything In the native image cache Is displayed.
      </summary>
      <param name="assemblyName"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.ExecuteQueuedItems(Microsoft.VisualBasic.ApplicationServices.NgenInstaller.PriorityLevels)">
      <summary>
        Execute queued compilation jobs.
        If a priority Is specified, compilation jobs With greater Or equal priority are executed.
        If no priority Is specified, all queued compilation jobs are executed.
      </summary>
      <param name="queue"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Queue(Microsoft.VisualBasic.ApplicationServices.NgenInstaller.QueueActions)">
      <summary>
        Pause the native image service, allow the paused service to continue, or query the status of the service.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.QueueActions.pause">
      <summary>
        Pause the native image service
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.QueueActions.Continue">
      <summary>
        allow the paused service to continue
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.QueueActions.status">
      <summary>
        query the status of the service.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NgenInstaller.Install(System.String,System.Boolean)">
      <summary>
        将当前目录下的所有的.NET程序都进行安装
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.GZip">
      <summary>
        Creating Zip Files Easily in .NET 4.5
        Tim Corey, 11 May 2012

        http://www.codeproject.com/Articles/381661/Creating-Zip-Files-Easily-in-NET
      </summary>
      <remarks></remarks>

    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.GZip.Overwrite">
      <summary>
        Used to specify what our overwrite policy
        is for files we are extracting.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.GZip.ArchiveAction">
      <summary>
        Used to identify what we will do if we are
        trying to create a zip file and it already
        exists.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.GZip.ImprovedExtractToDirectory(System.String,System.String,Microsoft.VisualBasic.ApplicationServices.GZip.Overwrite)">
      <summary>
        Unzips the specified file to the given folder in a safe
        manner.  This plans for missing paths and existing files
        and handles them gracefully.
      </summary>
      <param name="sourceArchiveFileName">
        The name of the zip file to be extracted
      </param>
      <param name="destinationDirectoryName">
        The directory to extract the zip file to
      </param>
      <param name="overwriteMethod">
        Specifies how we are going to handle an existing file.
        The default is IfNewer.
      </param>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.GZip.ImprovedExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,Microsoft.VisualBasic.ApplicationServices.GZip.Overwrite)">
      <summary>
        Safely extracts a single file from a zip file
      </summary>
      <param name="file">
        The zip entry we are pulling the file from
      </param>
      <param name="destinationPath">
        The root of where the file is going
      </param>
      <param name="overwriteMethod">
        Specifies how we are going to handle an existing file.
        The default is Overwrite.IfNewer.
      </param>

    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.GZip.AddToArchive(System.Collections.Generic.IEnumerable{System.String},System.String,Microsoft.VisualBasic.ApplicationServices.GZip.ArchiveAction,Microsoft.VisualBasic.ApplicationServices.GZip.Overwrite,System.IO.Compression.CompressionLevel,System.String)">
      <summary>
        Allows you to add files to an archive, whether the archive
        already exists or not
      </summary>
      <param name="archiveFullName">
        The name of the archive to you want to add your files to
      </param>
      <param name="files">
        A set of file names that are to be added
      </param>
      <param name="action">
        Specifies how we are going to handle an existing archive
      </param>
      <param name="compression">
        Specifies what type of compression to use - defaults to Optimal
      </param>

    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.InteropService.InteropService">
      <summary>
        The class object which can interact with the target commandline program.
        (与目标命令行程序进行命令行交互的编程接口，本类型的对象的作用主要是生成命令行参数)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.InteropService.InteropService.Path">
      <summary>
        App path
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.InteropService.InteropService._executableAssembly">
      <summary>
        Assembly path for the target invoked program.
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.InteropService.RunProgram(System.String)">
      <summary>
        请注意，这个函数只是生成了具体的进程调用对象，还需要手动调用
        <see cref="M:Microsoft.VisualBasic.CommandLine.IIORedirectAbstract.Run"/>或者
        <see cref="M:Microsoft.VisualBasic.CommandLine.IIORedirectAbstract.Start(System.Boolean)"/>
        方法才会启动目标进程
      </summary>
      <param name="args$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.InteropService.NullOrDefault">
      <summary>
        Default value
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.InteropService.CLIAbstractor">
      <summary>
        将函数的定义抽象为一个命令行，从而能够提供更好的命令行编写服务
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.CLIAbstractor.CLIUsage(System.Reflection.MethodInfo,System.String)">
      <summary>
        Abstract the function declare as a CLI usage declare. This tool not support the generic function method.
        (不支持泛型函数)
      </summary>
      <param name="api"></param>
      <param name="prefix$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.API">
      <summary>
        CommandLine source code mapper API
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.API.CommandLineModel(System.String)">
      <summary>
        从<see cref="P:Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute.Usage"/>之中解析出命令行的模型
      </summary>
      <param name="usage$">
        + 由于习惯于在命令行的usage说明之中使用``&lt;>``括号对来包裹参数值，所以usage字符串数据还不能直接使用普通的命令行函数进行解析
        + ``[]``方括号所包裹的参数对象都是可选参数
        + 对于可选参数的默认值，默认值的解析形式为``default=...``，如果没有这个表达式，则默认为Nothing空值为默认值
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.API.BuildArguments(System.String[],System.String[],System.String[]@)">
      <summary>

      </summary>
      <param name="args$">因为逻辑变量只存在于可选参数之中，所以在这里必须参数直接split2即可</param>
      <param name="optionals$"></param>
      <param name="booleans$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.API.Tokenize(System.String)">
      <summary>
        使用空格分隔，但是需要对value额外注意

        + 在这里面分隔符为空格
        + 可以使用双引号包裹值，则双引号之中的字符串在可选参数之中都被看作为可选参数值
        + 可以使用尖括号包裹值，则尖括号之中的default=表达式则是可选参数之中的默认参数值
      </summary>
      <param name="s$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.Perl">
      <summary>
        为了构建GCModeller的脚本自动化而构建的源代码生成器，生成``perl module(*.pm)``
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.CodeGenerator.exe">
      <summary>
        目标应用程序模块的文件名，不包含有文件拓展名
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.RLanguage">
      <summary>

      </summary>
      <remarks>因为会和Unix bash之中的``ls``命令之中的``-r``参数冲突，所以在这里命名为``Rlanguage``</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.VisualBasic.__calls(System.Text.StringBuilder,Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{Microsoft.VisualBasic.CommandLine.CommandLine})">
      <summary>

      </summary>
      <param name="vb"></param>
      <param name="API"></param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.VisualBasic.__vbParameters(Microsoft.VisualBasic.CommandLine.CommandLine)">
      <summary>
        在这个函数之中会生成函数的参数列表
      </summary>
      <param name="API"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.VisualBasic.__defaultValue(System.String)">
      <summary>
        必须是以``default=``来作为前缀的，否则默认使用空字符串
      </summary>
      <param name="value$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.SharedORM.VisualBasic.__normalizedAsIdentifier(System.String)">
      <summary>
        将命令行参数的名称转义为VB之中有效的对象标识符
      </summary>
      <param name="arg$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.CLIBuildMethod.GetCLI``1(``0)">
      <summary>
        Generates the command line string value for the invoked target cli program using this interop services object instance.
        (生成命令行参数)
      </summary>
      <typeparam name="TInteropService">
        A class type object for interaction with a commandline program.
        (与命令行程序进行交互的模块对象类型)
      </typeparam>
      <param name="app">目标交互对象的实例</param>
      <returns></returns>
      <remarks>
        依照类型<see cref="T:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes"/>来生成参数字符串

        <see cref="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.Boolean"/>, True => 参数名；
        <see cref="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.Double"/>, <see cref="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.Integer"/>, <see cref="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.String"/>, => 参数名 + 参数值，假若字符串为空则不添加；
        （假若是枚举值类型，可能还需要再枚举值之中添加<see cref="T:System.ComponentModel.DescriptionAttribute"/>属性）
        <see cref="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.File"/>, 假若字符串为空则不添加，有空格自动添加双引号，相对路径会自动转换为全路径。
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.CLIBuildMethod.SimpleBuilder(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
        Creates a command line string by using simply fills the name and parameter values
      </summary>
      <param name="name"></param>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.InteropService.CLIBuildMethod.__getMethods">
      <summary>
        Converts the property value to a CLI token
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.CLIBuildMethod.__pathRule(System.Object,Microsoft.VisualBasic.CommandLine.Reflection.Optional,System.Reflection.PropertyInfo)">
      <summary>
        The different between the String and Path is that applying <see cref="T:Microsoft.VisualBasic.CommandLine.Reflection.CLIToken"/> or <see cref="M:Microsoft.VisualBasic.ApplicationServices.Utils.CLIPath(System.String)"/>.
      </summary>
      <param name="value">
        只能是<see cref="T:System.String"/>类型的
      </param>
      <param name="attr"></param>
      <param name="prop"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.CLIBuildMethod.__stringRule(System.Object,Microsoft.VisualBasic.CommandLine.Reflection.Optional,System.Reflection.PropertyInfo)">
      <summary>
        可能包含有枚举值
      </summary>
      <param name="value"></param>
      <param name="attr"></param>
      <param name="prop"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.CLIBuildMethod.__booleanRule(System.Object,Microsoft.VisualBasic.CommandLine.Reflection.Optional,System.Reflection.PropertyInfo)">
      <summary>
        Property value to boolean flag in the CLI
      </summary>
      <param name="value"></param>
      <param name="attr"></param>
      <param name="prop"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteropService.CLIBuildMethod.ClearParameters``1(``0)">
      <summary>
        Reset the CLI parameters property in the target class object.
      </summary>
      <typeparam name="TInteropService"></typeparam>
      <param name="inst"></param>
      <returns>返回所重置的参数的个数</returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Parsers.CLIParser">
      <summary>
        命令行单词解析器
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Parsers.CLIParser.GetTokens(System.String)">
      <summary>
        非正则表达式命令行解析引擎
      </summary>
      <param name="CLI$"></param>
      <returns></returns>
      <remarks>
        + 双引号表示一个完整的token
        + 空格为分隔符
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Parsers.DictionaryParser.TryParse(System.String)">
      <summary>
        键值对之间使用分号分隔
      </summary>
      <param name="str$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.CLIMapper">
      <summary>
        从可写属性之中赋值
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLIMapper.Maps``1(Microsoft.VisualBasic.CommandLine.CommandLine,System.Boolean)">
      <summary>
        Assign the argument value in the commandline into the target argument container object.
        The properties in the container class type needs decorating with attribute
        <see cref="T:Microsoft.VisualBasic.CommandLine.Reflection.CLIParameter"/>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="args"></param>
      <param name="strict"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLIMapper.GetName(System.Reflection.PropertyInfo)">
      <summary>
        If the property <paramref name="prop"/> have the custom attribute <see cref="T:Microsoft.VisualBasic.CommandLine.Reflection.CLIParameter"/>
        then the name value in <see cref="T:Microsoft.VisualBasic.CommandLine.Reflection.CLIParameter"/> will be used, otherwise,
        <see cref="P:System.Reflection.MemberInfo.Name"/> will be used.
      </summary>
      <param name="prop"></param>
      <returns></returns>
    </member>
    <member name="E:Microsoft.VisualBasic.CommandLine.IIORedirectAbstract.ProcessExit">
      <summary>
        The target invoked process event has been exit with a specific return code.(目标派生子进程已经结束了运行并且返回了一个错误值)
      </summary>
      <param name="exitCode"></param>
      <param name="exitTime"></param>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.IIORedirectAbstract.StandardOutput">
      <summary>
        Gets the standard output for the target invoke process.
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IIORedirectAbstract.Start(System.Boolean)">
      <summary>
        Start the target process. If the target invoked process is currently on the running state,
        then this function will returns the -100 value as error code and print the warning
        information on the system console.(启动目标进程)
      </summary>
      <param name="WaitForExit">Indicate that the program code wait for the target process exit or not?(参数指示应用程序代码是否等待目标进程的结束)</param>
      <returns>当发生错误的时候会返回错误代码，当当前的进程任然处于运行的状态的时候，程序会返回-100错误代码并在终端之上打印出警告信息</returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IIORedirectAbstract.Run">
      <summary>
        启动目标子进程，然后等待执行完毕并返回退出代码(请注意，在进程未执行完毕之前，整个线程会阻塞在这里)
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.IORedirectFile">
      <summary>
        Using this class object rather than <see cref="T:Microsoft.VisualBasic.CommandLine.IORedirect"/> is more encouraged.
        (假若所建立的子进程并不需要进行终端交互，相较于<see cref="T:Microsoft.VisualBasic.CommandLine.IORedirect"/>对象，更加推荐使用本对象类型来执行。
        似乎<see cref="T:Microsoft.VisualBasic.CommandLine.IORedirect"/>对象在创建一个子进程的时候的对象IO重定向的句柄的处理有问题，所以在这里构建一个更加简单的类型对象，
        这个IO重定向对象不具备终端交互功能)
      </summary>
      <remarks>先重定向到一个临时文件之中，然后再返回临时文件给用户代码</remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.IORedirectFile._TempRedirect">
      <summary>
        重定向的临时文件
      </summary>
      <remarks>当使用.tmp拓展名的时候会由于APP框架里面的GC线程里面的自动临时文件清理而产生冲突，所以这里需要其他的文件拓展名来避免这个冲突</remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.IORedirectFile.shellScript">
      <summary>
        shell文件接口
      </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.CommandLine.IORedirectFile.ProcessExit">
      <summary>
        The target invoked process event has been exit with a specific return code.(目标派生子进程已经结束了运行并且返回了一个错误值)
      </summary>
      <param name="exitCode"></param>
      <param name="exitTime"></param>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.IORedirectFile.StandardOutput">
      <summary>
        目标子进程的终端标准输出
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirectFile.CopyRedirect(System.String)">
      <summary>
        将目标子进程的标准终端输出文件复制到一个新的文本文件之中
      </summary>
      <param name="CopyToPath"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirectFile.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean,System.String)">
      <summary>
        Using this class object rather than <see cref="T:Microsoft.VisualBasic.CommandLine.IORedirect"/> is more encouraged if there is no console interactive with your folked process.
      </summary>
      <param name="file">The program file.(请注意检查路径参数，假若路径之中包含有%这个符号的话，在调用cmd的时候会失败)</param>
      <param name="argv">The program commandline arguments.(请注意检查路径参数，假若路径之中包含有%这个符号的话，在调用cmd的时候会失败)</param>
      <param name="environment">Temporary environment variable</param>
      <param name="FolkNew">Folk the process on a new console window if this parameter value is TRUE</param>
      <param name="stdRedirect">If not want to redirect the std out to your file, just leave this value blank.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirectFile.Run">
      <summary>
        Start target child process and then wait for the child process exits.
        So that the thread will be stuck at here until the sub process is
        job done!
        (启动目标子进程，然后等待执行完毕并返回退出代码(请注意，在进程未执行完毕
        之前，整个线程会阻塞在这里))
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirectFile.Start(System.Action)">
      <summary>
        启动子进程，但是不等待执行完毕，当目标子进程退出的时候，回调<paramref name="procExitCallback"/>函数句柄
      </summary>
      <param name="procExitCallback"></param>

    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.CLITools">
      <summary>
        CLI parser and <see cref="T:Microsoft.VisualBasic.CommandLine.CommandLine"/> object creates.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.CreateParameterValues(System.String[],System.Boolean,System.String)">
      <summary>
        Parsing parameters from a specific tokens.
        (从给定的词组之中解析出参数的结构)
      </summary>
      <param name="tokens">个数为偶数的，但是假若含有开关的时候，则可能为奇数了</param>
      <param name="IncludeLogicSW">返回来的列表之中是否包含有逻辑开关</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.GetLogicalArguments(System.Collections.Generic.IEnumerable{System.String},System.String@)">
      <summary>
        Get all of the logical parameters from the input tokens.
        (这个函数所生成的逻辑参数的名称全部都是小写形式的)
      </summary>
      <param name="args">要求第一个对象不能够是命令的名称</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.TryParse(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
        Try parsing the cli command string from the string value.(尝试着从文本行之中解析出命令行参数信息)
      </summary>
      <param name="args">The commandline arguments which is user inputs from the terminal.</param>
      <param name="duplicatedAllows">
        Allow the duplicated command parameter argument name in the input,
        default is not allowed the duplication.(是否允许有重复名称的参数名出现，默认是不允许的)
      </param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.Args">
      <summary>
        Gets the commandline object for the current program.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.TryParse(System.String,System.Boolean)">
      <summary>
        Try parsing the cli command string from the string value.
        (尝试着从文本行之中解析出命令行参数信息，假若value里面有空格，则必须要将value添加双引号)
      </summary>
      <param name="CLI">The commandline arguments which is user inputs from the terminal.</param>
      <param name="duplicateAllowed">
        Allow the duplicated command parameter argument name in the input,
        default is not allowed the duplication.(是否允许有重复名称的参数名出现，默认是不允许的)
      </param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.IsPossibleLogicFlag(System.String)">
      <summary>
        Is this string tokens is a possible <see cref="T:System.Boolean"/> value flag
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.Join(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        ReGenerate the cli command line argument string text.(重新生成命令行字符串)
      </summary>
      <param name="tokens">If the token value have a space character, then this function will be wrap that token with quot character automatically.</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.CLITools.SPLIT_REGX_EXPRESSION">
      <summary>
        A regex expression string that use for split the commandline text.
        (用于分析命令行字符串的正则表达式)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.GetTokens(System.String)">
      <summary>
        Try parse the argument tokens which comes from the user input commandline string.
        (尝试从用户输入的命令行字符串之中解析出所有的参数)
      </summary>
      <param name="CLI"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.CLITools.TokenSplitRegex">
      <summary>
        会对%进行替换的
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.TryParse(System.String,System.String,System.Char)">
      <summary>
        尝试从输入的语句之中解析出词法单元，注意，这个函数不是处理从操作系统所传递进入的命令行语句
      </summary>
      <param name="CommandLine"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.CreateObject(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        Creates command line object from a set obj <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
      </summary>
      <param name="name"></param>
      <param name="args"></param>
      <param name="bFlags"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.TrimParamPrefix(System.String)">
      <summary>
        Trim the CLI argument name its prefix symbols.
        (修剪命令行参数名称的前置符号)
      </summary>
      <param name="argName"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CLITools.Equals(Microsoft.VisualBasic.CommandLine.CommandLine,Microsoft.VisualBasic.CommandLine.CommandLine)">
      <summary>
        请注意，这个是有方向性的，由于是依照参数1来进行比较的，假若args2里面的参数要多于第一个参数，但是第一个参数里面的所有参数值都可以被参数2完全比对得上的话，就认为二者是相等的
      </summary>
      <param name="args1"></param>
      <param name="args2"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.ProcessExtensions">
      <summary>
        How to found the process by CLI
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.ProcessExtensions.GetProc(System.Int32)">
      <summary>
        <see cref="M:System.Diagnostics.Process.GetProcessById(System.Int32)"/>
      </summary>
      <param name="pid"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.ProcessExtensions.GetProc(System.String)">
      <summary>
        Get process by command line parameter.(按照命令行参数来获取进程实例)
      </summary>
      <param name="CLI"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.ProcessExtensions.FindProc(Microsoft.VisualBasic.CommandLine.IIORedirectAbstract)">
      <summary>
        这个主要是为了<see cref="T:Microsoft.VisualBasic.CommandLine.IORedirectFile"/>对象进行相关进程的查找而设置的，
        对于<see cref="T:Microsoft.VisualBasic.CommandLine.IORedirect"/>而言则直接可以从其属性<see cref="P:Microsoft.VisualBasic.CommandLine.IORedirect.ProcessInfo"/>之中获取相关的进程信息
      </summary>
      <param name="IO"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.ProcessExtensions.ExecSub(System.String,System.String,Microsoft.VisualBasic.CommandLine.ProcessExtensions.dReadLine,System.String)">
      <summary>
        执行CMD命令

        Example:

        ```vbnet
        Call excuteCommand("ipconfig", "/all", AddressOf PrintMessage)
        ```
      </summary>
      <param name="app">命令</param>
      <param name="args">参数</param>
      <param name="onReadLine">行信息（委托）</param>
      <remarks>https://github.com/lishewen/LSWFramework/blob/master/LSWClassLib/CMD/CMDHelper.vb</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.ProcessExtensions.Call(System.String,System.String,System.String)">
      <summary>

      </summary>
      <param name="app">The file path of the application to be called by its parent process.</param>
      <param name="args">CLI arguments</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.__ExecuteFile">
      <summary>
        假若所传入的命令行的name是文件路径，解释器就会执行这个函数指针
      </summary>
      <param name="path"></param>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.__ExecuteEmptyCLI">
      <summary>
        假若所传入的命令行是空的，就会执行这个函数指针
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.__ExecuteNotFound">
      <summary>
        假若查找不到命令的话，执行这个函数
      </summary>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.Argument">
      <summary>
        Use for the detail description for a specific commandline switch.(用于对某一个命令的开关参数的具体描述帮助信息)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.Name">
      <summary>
        The name of this command line parameter switch.(该命令开关的名称)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.Description">
      <summary>
        The description and brief help information about this parameter switch,
        you can using the ``\n`` escape string to gets a ``VbCrLf`` value.
        (对这个开关参数的具体的描述以及帮助信息，可以使用``\n``转义字符进行换行)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.Example">
      <summary>
        The usage example of this parameter switch.(该开关的值的示例)

        ```
        name example
        ```
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.Usage">
      <summary>
        The usage syntax information about this parameter switch.(本开关参数的使用语法)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.Optional">
      <summary>
        Is this parameter switch is an optional value.(本开关是否为可选的参数)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.Out">
      <summary>
        Is this parameter is using for the output
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.AcceptTypes">
      <summary>
        Accept these types as input or output data in this types if <see cref="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.Out"/> is true.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.Extensions">
      <summary>
        Example:

        ```
        csv, json, txt
        ```

        Extension for the document format <see cref="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.AcceptTypes"/> if this argument its <see cref="P:Microsoft.VisualBasic.CommandLine.Reflection.Argument.TokenType"/> is a <see cref="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.File"/>
        If supports multiple extension, delimiter using ``,`` comma symbol.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.Argument.#ctor(System.String,System.Boolean,Microsoft.VisualBasic.CommandLine.Reflection.CLITypes,Microsoft.VisualBasic.CommandLine.Reflection.PipelineTypes)">
      <summary>
        对命令行之中的某一个参数进行描述性信息的创建，包括用法和含义
      </summary>
      <param name="Name">The name of this command line parameter switch.(该命令开关的名称)</param>
      <param name="Optional">Is this parameter switch is an optional value.(本开关是否为可选的参数)</param>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ActiveViews.type">
      <summary>
        Code type name in the markdown, default is ``json``
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.GroupAttribute">
      <summary>
        应用于方法之上的，标注当前的这个方法的功能分组
      </summary>

    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.GroupingDefineAttribute">
      <summary>
        应用于命令行类型容器之上的，用于功能分组的详细描述信息
      </summary>

    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.GroupingDefineAttribute.Description">
      <summary>
        当前的这一功能分组的详细描述信息
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Reflection.PipelineTypes.std_in">
      <summary>
        This argument can accept the std_out from upstream app as input
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Reflection.PipelineTypes.std_out">
      <summary>
        This argument can output data to std_out
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.Namespace">
      <summary>
        (<see cref="T:Microsoft.VisualBasic.CommandLine.Interpreter">CommandLine interpreter</see> executation Entry and the ShellScript software packages namespace.)这是一个命令行解释器所使用的执行入口点的集合
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.Description">
      <summary>
        A brief description text about the function of this namespace.(关于本模块之中的描述性的摘要文本)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.Namespace">
      <summary>
        The name value of this namespace module.(本命名空间模块的名称值)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.AutoExtract">
      <summary>
        Readonly
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.#ctor(System.String,System.String)">
      <summary>
        The name value of this namespace module.(本命名空间模块的名称值)
      </summary>
      <param name="Namespace">The name value of this namespace module.(本命名空间模块的名称值)</param>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.TypeInfo">
      <summary>
        Constant of type information for the reflection
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.CreateInstance(System.Type)">
      <summary>
        从目标类型之中构造出一个命令行解释器
      </summary>
      <param name="Type"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes">
      <summary>
        The data type enumeration of the target optional parameter switch.
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.File">
      <summary>
        File/directory path, is equals most string.
        (对于指定为路径类型的参数值，在生成命令行的时候会自动调用<see cref="M:Microsoft.VisualBasic.ApplicationServices.Utils.CLIPath(System.String)"/>函数，在Linux系统之中，文件夹也是一种文件)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.String">
      <summary>
        String.(对于指定为字符串类型的参数，在调用的时候回自动调用<see cref="M:Microsoft.VisualBasic.ApplicationServices.Utils.CLIToken(System.String)"/>函数)
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.Integer">
      <summary>
        Int
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.Double">
      <summary>
        Real
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Reflection.CLITypes.Boolean">
      <summary>
        This is a flag value, if this flag presents in the CLI, then this named Boolean value is TRUE, otherwise is FALSE.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.ExceptionHelp">
      <summary>
        Defines the url or e-mail information for the exceptions.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ExceptionHelp.Documentation">
      <summary>
        CLI tools' docs url
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ExceptionHelp.EMailLink">
      <summary>
        The author e-mail
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.SDKManual">
      <summary>
        Generates the help document in markdown format.
        (生成markdown格式的帮助文件)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.SDKManual.LaunchManual(Microsoft.VisualBasic.CommandLine.Interpreter)">
      <summary>
        这个是用于在终端上面显示的无格式的文本输出
      </summary>
      <param name="CLI"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.SDKManual.MarkdownDoc(Microsoft.VisualBasic.CommandLine.Interpreter)">
      <summary>
        这个是用于保存于文件之中的markdown格式的有格式标记的文本输出
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.SDKManual.HelpSummary(Microsoft.VisualBasic.CommandLine.Interpreter,System.Boolean)">
      <summary>
        Returns the summary brief help information of all of the commands in current cli interpreter.
        (枚举出本CLI解释器之中的所有的命令的帮助的摘要信息)
      </summary>
      <returns></returns>
      <remarks></remarks>
      <param name="markdown">Output in markdown format?</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.RunDllEntryPoint.#ctor(System.String)">
      <summary>
        rundll namespace::api
      </summary>
      <param name="Name"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.RunDllEntryPoint.GetPoint(System.String)">
      <summary>

      </summary>
      <param name="entrypoint$"></param>
      <returns>
        假若没有api的名称的话，是默认使用一个名字为``Main``的主函数来运行的
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.CLIToken">
      <summary>
        A very basically type in the <see cref="T:Microsoft.VisualBasic.CommandLine.CommandLine"/>
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.CLIToken.Name">
      <summary>
        Name of this token object, this can be parameter name or api name.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.CLIToken.#ctor(System.String)">
      <summary>
        Init this token by using <see cref="P:Microsoft.VisualBasic.CommandLine.Reflection.CLIToken.Name"/> value.
      </summary>
      <param name="name">Token name</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute">
      <summary>
        A command object that with a specific name.(一个具有特定名称命令执行对象)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute.Name">
      <summary>
        The name of the commandline object.(这个命令的名称)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute.Info">
      <summary>
        Something detail of help information.(详细的帮助信息)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute.Usage">
      <summary>
        The usage of this command.(这个命令的用法，本属性仅仅是一个助记符，当用户没有编写任何的使用方法信息的时候才会使用本属性的值)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute.Example">
      <summary>
        A example that to useing this command.
        (对这个命令的使用示例，本属性仅仅是一个助记符，当用户没有编写任何示例信息的时候才会使用本属性的值，
        在编写帮助示例的时候，需要编写出包括命令开关名称的完整的例子)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute.#ctor(System.String)">
      <summary>
        You are going to define a available export api for you application to another language or scripting program environment.
        (定义一个命令行程序之中可以使用的命令)
      </summary>
      <param name="Name">The name of the commandline object or you define the exported API name here.(这个命令的名称)</param>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.IExportAPI.Name">
      <summary>
        The name of the commandline object.(这个命令的名称)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.IExportAPI.Info">
      <summary>
        Something detail of help information.(详细的帮助信息)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.IExportAPI.Usage">
      <summary>
        The usage of this command.(这个命令的用法，本属性仅仅是一个助记符，当用户没有编写任何的使用方法信息的时候才会使用本属性的值)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.IExportAPI.Example">
      <summary>
        A example that to useing this command.(对这个命令的使用示例，本属性仅仅是一个助记符，当用户没有编写任何示例信息的时候才会使用本属性的值)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.ManualBuilder">
      <summary>
        用来生成帮助信息
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.ManualBuilder.PrintHelp(Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint)">
      <summary>
        Prints the formatted help information on the console.
        (用于生成打印在终端上面的命令行帮助信息)
      </summary>
      <param name="api"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Reflection.ManualBuilder.boolFlag">
      <summary>
        (boolean flag does not require of argument value)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIDelegate.Name">
      <summary>
        The usage name of this command line entry point.(本命令行对象的调用命令名称)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIDelegate.#ctor(Microsoft.VisualBasic.ComponentModel.Binding{Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute,System.Reflection.MethodInfo},System.Func{System.Object[],System.Int32})">
      <summary>
        不可以使用本方法初始化目标对象为实例方法的类型
      </summary>
      <param name="attribute"></param>
      <param name="Invoke"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIDelegate.Execute(System.Object[])">
      <summary>

      </summary>
      <param name="parameters">数组的长度必须与目标函数的参数的数目一致，否则短于目标函数的参数的数目的数组会使用Nothing来填充缺少的部分，而多于目标函数的参数会被截断</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint">
      <summary>
        The entry point data of the commands in the command line which was original loaded
        from the source meta data in the compiled target.
        (命令行命令的执行入口点)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.Arguments">
      <summary>
        当前的这个命令对象的参数帮助信息列表
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.EntryPoint">
      <summary>
        The reflection entry point in the assembly for the target method object.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.target">
      <summary>
        If the target invoked <see cref="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.EntryPoint">method delegate</see> is a instance method,
        then this property value should be the target object instance which has the method delegate.
        (假若目标方法不是共享的方法，则必须要使用本对象来进行Invoke的调用)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.IsInstanceMethod">
      <summary>
        The shared method did not requires of the object instance.(这个方法是否为实例方法)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.EntryPointFullName(System.Boolean)">
      <summary>
        The full name path of the target invoked method delegate in the namespace library.
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.#ctor(System.Object)">
      <summary>
        这个构造函数只设置目标实例对象，其他的数据从属性进行设置
      </summary>
      <param name="invokeOn"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.#ctor(Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute,System.Reflection.MethodInfo,System.Boolean)">
      <summary>
        Instance method can be initialize from this constructor.
        (假若目标方法为实例方法，请使用本方法进行初始化)
      </summary>
      <param name="attribute"></param>
      <param name="Invoke"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.HelpInformation(System.Boolean)">
      <summary>
        Returns the help information details for this command line entry object.(获取本命令行执行入口点的详细帮助信息)
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.Invoke(System.Object[],System.Boolean)">
      <summary>
        Invoke this command line and returns the function value.(函数会补齐可选参数)
      </summary>
      <param name="parameters">
        The function parameter for the target invoked method, the optional value will be filled
        using the paramter default value if you are not specific the optional paramter value is the element position of
        this paramter value.
      </param>
      <param name="Throw">
        If throw then if the exception happened from delegate invocation then the program will throw an
        exception and terminated, if not then the program will save the exception information into a log file and then
        returns a failure status.
      </param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.DirectInvoke(System.Object[],System.Boolean)">
      <summary>
        不会自动调整补齐参数
      </summary>
      <param name="callParameters"></param>
      <param name="[Throw]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.__directInvoke(System.Object[],System.Object,System.Boolean)">
      <summary>
        记录错误信息的最上层的堆栈
      </summary>
      <param name="callParameters"></param>
      <param name="target"></param>
      <param name="[Throw]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.Invoke(System.Object[],System.Object,System.Boolean)">
      <summary>
        Invoke this command line and returns the function value.
        (函数会补齐可选参数)
      </summary>
      <param name="parameters">
        The function parameter for the target invoked method, the optional value will be filled
        using the paramter default value if you are not specific the optional paramter value is the element position of
        this paramter value.
      </param>
      <param name="target">Target entry pointer of this function method delegate.</param>
      <param name="Throw">
        If throw then if the exception happened from delegate invocation then the program will throw an
        exception and terminated, if not then the program will save the exception information into a log file and then
        returns a failure status.
      </param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint.InvokeCLI(System.Object[],System.Object,System.Boolean)">
      <summary>
        Invoke this command line but returns the function execute success, Zero for success and -1 for failure.
        (函数会补齐可选参数)
      </summary>
      <param name="parameters"></param>
      <param name="target"></param>
      <param name="Throw"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.Optional">
      <summary>
        Optional commandline arguments.(本属性标记一个命令行字符串之中的可选参数)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.Optional.#ctor(System.String,Microsoft.VisualBasic.CommandLine.Reflection.CLITypes)">
      <summary>

      </summary>
      <param name="Name">
        The name value of the target parameter switch which will be marked as an optional parameter.
        (目标将要被标记为可选参数的命令行参数开关对象)
      </param>
      <param name="Type">The data type of the target command line parameter switch, default type is string type.</param>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Reflection.ArgumentCollection">
      <summary>
        The help information for a specific command line parameter switch.(某一个指定的命令的开关的帮助信息)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ArgumentCollection.Count">
      <summary>
        本命令行对象中的包含有帮助信息的开关参数的数目
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ArgumentCollection.Parameter(System.String)">
      <summary>
        Returns the parameter switch help information with the specific name value.(显示某一个指定名称的开关信息)
      </summary>
      <param name="Name"></param>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ArgumentCollection.GetExample">
      <summary>
        Gets the usage example of this parameter switch.(获取本参数开关的帮助信息)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Reflection.ArgumentCollection.ToString">
      <summary>
        显示所有的开关信息
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Grouping.Groups.Data">
      <summary>
        这个分组之中的API列表
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Grouping.#ctor(Microsoft.VisualBasic.CommandLine.Interpreter)">
      <summary>

      </summary>
      <param name="CLI">
        主要是需要从这个类型定义之中得到<see cref="T:Microsoft.VisualBasic.CommandLine.Reflection.GroupingDefineAttribute"/>数据
      </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.CliResCommon">
      <summary>
        CLI resources manager
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CliResCommon.#ctor(System.String,System.Type)">
      <summary>

      </summary>
      <param name="EXPORT">资源文件的数据缓存文件夹</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CliResCommon.TryRelease(System.String,System.String)">
      <summary>

      </summary>
      <param name="Name">使用 NameOf 操作符来获取资源</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.InteractiveConsole">
      <summary>
        interactive console in ``/i`` mode, example:

        ```bash
        # This command will makes your CLI program enter
        # the interactive console mode.
        #
        # type quit() for exit.
        #
        App /i
        ```
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.InteractiveConsole.RunAppInternal(Microsoft.VisualBasic.CommandLine.CommandLine)">
      <summary>
        Contains sevral build in command about file system operation and the program CLI interpreter commands
      </summary>
      <param name="cmd"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.Interpreter">
      <summary>
        Command line interpreter for your **CLI** program.
        (命令行解释器，请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待
        回车退出)
      </summary>
      <remarks></remarks>

    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Interpreter.__API_table">
      <summary>
        在添加之前请确保键名是小写的字符串
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.ExecuteFile">
      <summary>
        Public Delegate Function __ExecuteFile(path As String, args As String()) As Integer,
        (<seealso cref="T:Microsoft.VisualBasic.CommandLine.__ExecuteFile"/>: 假若所传入的命令行的name是文件路径，解释器就会执行这个函数指针)
        这个函数指针一般是用作于执行脚本程序的
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.ExecuteEmptyCli">
      <summary>
        Public Delegate Function __ExecuteEmptyCli() As Integer,
        (<seealso cref="T:Microsoft.VisualBasic.CommandLine.__ExecuteEmptyCLI"/>: 假若所传入的命令行是空的，就会执行这个函数指针)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.ToDictionary">
      <summary>
        Gets the dictionary data which contains all of the available command information in this assembly module.
        (获取从本模块之中获取得到的所有的命令行信息)
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.Execute(Microsoft.VisualBasic.CommandLine.CommandLine)">
      <summary>
        Execute the specific command line using this interpreter.
      </summary>
      <param name="args">The user input command line string.</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.__executeEmpty">
      <summary>
        命令行是空的话，假若<see cref="P:Microsoft.VisualBasic.CommandLine.Interpreter.ExecuteEmptyCli"/>不是空值的话，会优先执行<see cref="P:Microsoft.VisualBasic.CommandLine.Interpreter.ExecuteEmptyCli"/>函数指针
        否则打印出所有的命令名称信息
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.__methodInvoke(System.String,System.Object[],System.String[])">
      <summary>
        The interpreter runs all of the command from here.(所有的命令行都从这里开始执行)
      </summary>
      <param name="commandName"></param>
      <param name="argvs">就只有一个命令行对象</param>
      <param name="help_argvs"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.Interpreter.BAD_COMMAND_LISTING_COMMANDS">
      <summary>
        Bad command, no such a command named ""{0}"", but you probably want to using one of these commands:
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.SDKdocs">
      <summary>
        Generate the sdk document for the target program assembly.(生成目标应用程序的命令行帮助文档，markdown格式的)
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.Execute(System.String[])">
      <summary>
        Process the command option arguments of the main function:
        <code>
          Public Function Main(argvs As String()) As Integer
        </code>
      </summary>
      <param name="CommandLineArgs">The cli command line parameter string value collection.</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.AddCommand(Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.APIEntryPoint)">
      <summary>
        Add a command in current cli interpreter.(x向当前的这个CLI命令行解释器之中添加一个命令)
      </summary>
      <param name="Command"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.Help(System.String)">
      <summary>
        Gets the help information of a specific command using its name property value.(获取某一个命令的帮助信息)
      </summary>
      <param name="CommandName">
        If the paramteer command name value is a empty string then this function
        will list all of the commands' help information.(假若本参数为空则函数会列出所有的命令的帮助信息)
      </param>
      <returns>Error code, ZERO for no error</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.ListCommandInfo">
      <summary>
        Returns the command entry info list array.
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.#ctor(System.Type,System.String)">
      <summary>

      </summary>
      <param name="type">
        A module or a class which contains some shared method for the command entry.
        (包含有若干使用<see cref="T:Microsoft.VisualBasic.CommandLine.Reflection.ExportAPIAttribute"></see>进行标记的命令行执行入口点的Module或者Class对象类型，
        可以使用 Object.GetType/GetType 关键词操作来获取所需要的类型信息)
      </param>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.Type">
      <summary>
        The CLI API container Module/Class type information.(申明这个解释器的命令行API容器类型)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.__getsAllCommands(System.Type,System.Boolean)">
      <summary>
        导出所有符合条件的静态方法
      </summary>
      <param name="Type"></param>
      <param name="[Throw]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.GetAllCommands(System.Type,System.Boolean)">
      <summary>
        导出所有符合条件的静态方法，请注意，在这里已经将外部的属性标记和所属的函数的入口点进行连接了
      </summary>
      <param name="type"></param>
      <param name="[Throw]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.getAPI(System.Reflection.MethodInfo,System.Type,System.Boolean)">
      <summary>
        从方法定义<see cref="T:System.Reflection.MethodInfo"/>之中解析出命令行的定义
      </summary>
      <param name="methodInfo"></param>
      <param name="commandAttribute"></param>
      <param name="[throw]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.CreateEmptyCLIObject">
      <summary>
        Create an empty cli command line interpreter object which contains no commands entry.
        (创建一个没有包含有任何命令入口点的空的CLI命令行解释器)
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.CreateInstance(System.Type)">
      <summary>
        Create a new interpreter instance from a specific type information.
        (从目标类型之中构造出一个命令行解释器)
      </summary>
      <param name="Type"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.CreateInstance``1">
      <summary>
        Create a new interpreter instance using the specific type information.
        (使用所制定的目标类型信息构造出一个CLI命令行解释器)
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.CreateInstance(System.String)">
      <summary>
        Create a new interpreter instance from a specific dll/exe path, this program assembly file should be a standard .NET assembly.
        (从一个标准的.NET程序文件之中构建出一个命令行解释器)
      </summary>
      <param name="assmPath">DLL/EXE file path.(标准的.NET程序集文件的文件路径)</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.Clear">
      <summary>
        Clear the hash table of the cli command line interpreter command entry points.(清除本CLI解释器之中的所有的命令行执行入口点的哈希数据信息)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.Count">
      <summary>
        Gets the command counts in current cli interpreter.(返回本CLI命令行解释器之中所包含有的命令的数目)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.ExistsCommand(System.String)">
      <summary>
        The target command line command is exists in this cli interpreter using it name property?(判断目标命令行命令是否存在于本CLI命令行解释器之中)
      </summary>
      <param name="CommandName">The command name value is not case sensitive.(命令的名称对大小写不敏感的)</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.Item(System.String)">
      <summary>

      </summary>
      <param name="key">调用前需要转换为小写字母的形式</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.ListingRelated(System.String)">
      <summary>
        列举出所有可能的命令
      </summary>
      <param name="query">模糊匹配</param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.APINameList">
      <summary>
        List all of the command line entry point name which were contains in this cli interpreter.
        (列举出本CLI命令行解释器之中的所有的命令行执行入口点的名称)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.APIList">
      <summary>
        当前的解释器内所容纳的所有的CLI API列表
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.CommandLine">
      <summary>
        A command line object that parse from the user input commandline string.
        (从用户所输入的命令行字符串之中解析出来的命令行对象，标准的命令行格式为：
        <example>&lt;EXE> &lt;CLI_Name> ["Parameter" "Value"]</example>)
      </summary>
      <remarks></remarks>

    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.CommandLine._CLICommandArgvs">
      <summary>
        原始的命令行字符串
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Name">
      <summary>
        The command name that parse from the input command line.
        (从输入的命令行中所解析出来的命令的名称)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Tokens">
      <summary>
        The command tokens that were parsed from the input commandline.
        (从所输入的命令行之中所解析出来的命令参数单元)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.ParameterList">
      <summary>
        Listing all of the parameter value collection that parsed from the commandline string.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Keys">
      <summary>
        得到当前的命令行对象之中的所有的参数的名称的列表
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Parameters">
      <summary>
        The parameters in the commandline without the first token of the command name.
        (将命令行解析为词元之后去掉命令的名称之后所剩下的所有的字符串列表)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.BoolFlags">
      <summary>
        对于参数而言，都是--或者-或者/或者\开头的，下一个单词为单引号或者非上面的字符开头的，例如/o &lt;path>
        对于开关而言，与参数相同的其实符号，但是后面不跟参数而是其他的开关，通常开关用来进行简要表述一个逻辑值
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.CLICommandArgvs">
      <summary>
        Get the original command line string.(获取所输入的命令行对象的原始的字符串)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Item(System.String)">
      <summary>
        The parameter name is not case sensitive.
        (开关的名称是不区分大小写的，进行字符串插值脚本化处理的时候，是使用的<see cref="M:Microsoft.VisualBasic.App.GetVariable(System.String)"/>函数来获取环境变量值)
      </summary>
      <param name="paramName">The argument name in the commandline.</param>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.HavebFlag(System.String)">
      <summary>
        See if the target logical flag argument is exists in the commandline?
        (查看命令行之中是否存在某一个逻辑开关)
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.ToString">
      <summary>
        Returns the original cli command line argument string.(返回所传入的命令行的原始字符串)
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetFullDIRPath(System.String)">
      <summary>
        Get specific argument value as full directory path.
      </summary>
      <param name="name">parameter name</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetFullFilePath(System.String)">
      <summary>
        Get specific argument value as full file path.(这个函数还会同时修正file://协议的头部)
      </summary>
      <param name="name">parameter name</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetCommandsOverview">
      <summary>
        Gets the brief summary information of current cli command line object.
        (获取当前的命令行对象的参数摘要信息)
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.CheckMissingRequiredParameters(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        Checking for the missing required parameter, this function will returns the missing parameter
        in the current cli command line object using a specific parameter name list.
        (检查<paramref name="list"></paramref>之中的所有参数是否存在，函数会返回不存在的参数名)
      </summary>
      <param name="list"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.CheckMissingRequiredArguments(System.String[])">
      <summary>
        Gets a list of missing required argument name.
      </summary>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.IsNullOrEmpty">
      <summary>
        Does this cli command line object contains any parameter argument information.
        (查看本命令行参数对象之中是否存在有参数信息)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.IsNothing">
      <summary>
        <see cref="T:System.String"/> of <see cref="P:Microsoft.VisualBasic.CommandLine.CommandLine.Name"/> AndAlso <see cref="P:Microsoft.VisualBasic.CommandLine.CommandLine.IsNullOrEmpty"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.ContainsParameter(System.String,System.Boolean)">
      <summary>
        Does the specific argument exists in this commandline? argument name is not case sensitity.
        (参数名称字符串大小写不敏感)
      </summary>
      <param name="parameterName"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.op_Implicit(System.String)~Microsoft.VisualBasic.CommandLine.CommandLine">
      <summary>
        Parsing the commandline string as object model
      </summary>
      <param name="CommandLine"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.Assert(System.String,System.String)">
      <summary>
        Determined that the specific Boolean flag is exists or not?
        if not then returns <paramref name="failure"/>, if exists such flag, then returns the <paramref name="name"/>.
      </summary>
      <param name="name">Boolean flag name</param>
      <param name="failure"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetDictionary(System.String,System.String)">
      <summary>
        If the target parameter is not presents in the CLI, then this function will returns nothing.
        (键值对之间使用分号分隔)
      </summary>
      <param name="name$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.OpenStreamInput(System.String,System.String@)">
      <summary>
        About <paramref name="s"/>:

        + If the file path is not a value path, then is the value is not null, the argument value will be returned from this parameter.
        + If the value is nothing, then this function will open the standard input as input.
        + If the file path is valid as input file, then a local file system pointer will be returned.

        [管道函数] 假若参数名存在并且所指向的文件也存在，则返回本地文件的文件指针，否则返回标准输入的指针
      </summary>
      <param name="param"></param>
      <param name="s">
        + If the file path is not a value path, then is the value is not null, the argument value will be returned from this parameter.
        + If the value is nothing, then this function will open the standard input as input.
        + If the file path is valid as input file, then a local file system pointer will be returned.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.OpenStreamOutput(System.String,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        If the <see cref="P:System.IO.StreamWriter.BaseStream"/> is <see cref="T:System.IO.FileStream"/>, then it means not a ``std_out`` pointer.
        ([管道函数] 假若参数名存在，则返回本地文件的文件指针，否则返回标准输出的指针)
      </summary>
      <param name="param"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.ReadInput(System.String)">
      <summary>
        Read all of the text input from the file or ``std_in``
      </summary>
      <param name="param"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetBoolean(System.String)">
      <summary>
        Gets the value Of the specified column As a Boolean.
        (这个函数也同时包含有开关参数的，开关参数默认为逻辑值类型，当包含有开关参数的时候，其逻辑值为True，反之函数会检查参数列表，参数不存在则为空值字符串，则也为False)
      </summary>
      <param name="parameter">可以包含有开关参数</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetByte(System.String)">
      <summary>
        Gets the 8-bit unsigned Integer value Of the specified column.
      </summary>
      <param name="parameter"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetBytes(System.String)">
      <summary>
        Reads a stream Of bytes from the specified column offset into the buffer As an array, starting at the given buffer offset.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetChar(System.String)">
      <summary>
        Gets the character value Of the specified column.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetChars(System.String)">
      <summary>
        Reads a stream Of characters from the specified column offset into the buffer As an array, starting at the given buffer offset.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetDateTime(System.String)">
      <summary>
        Gets the Date And time data value Of the specified field.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetDecimal(System.String)">
      <summary>
        Gets the fixed-position numeric value Of the specified field.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetDouble(System.String)">
      <summary>
        Gets the Double-precision floating point number Of the specified field.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetFloat(System.String)">
      <summary>
        Gets the Single-precision floating point number Of the specified field.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetGuid(System.String)">
      <summary>
        Returns the GUID value Of the specified field.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetInt16(System.String)">
      <summary>
        Gets the 16-bit signed Integer value Of the specified field.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetInt32(System.String)">
      <summary>
        Gets the 32-bit signed Integer value Of the specified field.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetInt64(System.String)">
      <summary>
        Gets the 64-bit signed Integer value Of the specified field.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetOrdinal(System.String)">
      <summary>
        Return the index Of the named field. If the name is not exists in the parameter list, then a -1 value will be return.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetString(System.String)">
      <summary>
        Gets the String value Of the specified field.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.IsNull(System.String)">
      <summary>
        Return whether the specified field Is Set To null.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetObject``1(System.String,System.Func{System.String,``0})">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <param name="parameter">Command parameter name in the command line inputs.</param>
      <param name="__getObject"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetValue``1(System.String,``0,System.Func{System.String,``0})">
      <summary>
        If the given parameter is not exists in the user input arguments, then a developer specific default value will be return.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="name">The optional argument parameter name</param>
      <param name="[default]">The default value for returns when the parameter is not exists in the user input.</param>
      <param name="__ctype">The custom string parser for the CLI argument value</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.OpenHandle(System.String,System.String)">
      <summary>
        Open a file handle by using the parameter value
      </summary>
      <param name="name">The parameter name, and its argument value should be a valid file path</param>
      <param name="[default]">Default file path if the argument value is not exists</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetEnumerator">
      <summary>
        这个枚举函数也会将开关给包含进来，与<see cref="M:Microsoft.VisualBasic.CommandLine.CommandLine.ToArgumentVector"/>方法所不同的是，这个函数里面的逻辑值开关的名称没有被修饰剪裁
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.Add(Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String})">
      <summary>
        Adds an item to the System.Collections.Generic.ICollection`1.
      </summary>
      <param name="item"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.Add(System.String,System.String,System.Boolean,System.String)">
      <summary>
        Add a parameter with name and its value.
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.Clear">
      <summary>
        Clear the inner list buffer
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.Contains(Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String})">
      <summary>
        只是通过比较名称来判断是否存在，值没有进行比较
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Count">
      <summary>
        Get the switch counts in this commandline object.(获取本命令行对象中的所定义的开关的数目)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.Remove(System.String)">
      <summary>
        Removes a parameter by name
      </summary>
      <param name="paramName"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.Remove(Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String})">
      <summary>
        Removes a parameter by <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Name"/>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.ToArgumentVector">
      <summary>
        将当前的这个命令行对象之中的所有的参数值都合并到一个向量之中返回.
        (``ToArray``拓展好像是有BUG的，所以请使用这个函数来获取所有的参数信息。
        请注意，逻辑值开关的名称会被去掉前缀)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.op_Addition(Microsoft.VisualBasic.CommandLine.CommandLine,System.String)">
      <summary>
        Open a handle for a file system object.
      </summary>
      <param name="args"></param>
      <param name="fs"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.op_LessThanOrEqual(Microsoft.VisualBasic.CommandLine.CommandLine,System.String)">
      <summary>
        Gets the CLI parameter value.
      </summary>
      <param name="args"></param>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.op_Subtraction(Microsoft.VisualBasic.CommandLine.CommandLine,System.String)">
      <summary>
        Try get parameter value.
      </summary>
      <param name="args"></param>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.op_Subtraction(Microsoft.VisualBasic.CommandLine.CommandLine,Microsoft.VisualBasic.CommandLine.CommandLine)">
      <summary>
        Try get parameter value.
      </summary>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.IORedirect">
      <summary>
        A communication fundation class type for the commandline program interop.
        (一个简单的用于从当前进程派生子进程的Wrapper对象，假若需要folk出来的子进程对象
        不需要终端交互功能，则更加推荐使用<see cref="T:Microsoft.VisualBasic.CommandLine.IORedirectFile"/>对象来进行调用)
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.CommandLine.IORedirect._processStateRunning">
      <summary>
        当前的这个进程实例是否处于运行的状态
      </summary>
      <remarks></remarks>
    </member>
    <member name="E:Microsoft.VisualBasic.CommandLine.IORedirect.ProcessExit">
      <summary>
        The target invoked process event has been exit with a specific return code.
        (目标派生子进程已经结束了运行并且返回了一个错误值)
      </summary>
      <param name="exitCode"></param>
      <param name="exitTime"></param>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.IORedirect.ProcessInfo">
      <summary>
        The process invoke interface of current IO redirect operation.
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.CommandLine.IORedirect.StandardOutput">
      <summary>
        Gets the standard output for the target invoke process.
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.CommandLine.IORedirect.ProcessExitCallBack">
      <summary>
        A function pointer for process the events when the target invoked child process was terminated and exit.
        (当目标进程退出的时候所调用的过程)
      </summary>
      <param name="exitCode">The exit code for the target sub invoke process.进程的退出代码</param>
      <param name="exitTime">The exit time for the target sub invoke process.(进程的退出时间)</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.GetError">
      <summary>
        Gets a <see cref="T:System.String"/> used to read the error output of the application.
      </summary>
      <returns>
        A <see cref="T:System.String"/> text value that read from the std_error of <see cref="T:System.IO.StreamReader"/>
        that can be used to read the standard error stream of the application.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.Start(System.Boolean,System.String[],System.Boolean)">
      <summary>
        Start the target process. If the target invoked process is currently on the running state,
        then this function will returns the -100 value as error code and print the warning
        information on the system console.(启动目标进程)
      </summary>
      <param name="WaitForExit">
        Indicate that the program code wait for the target process exit or not?
        (参数指示应用程序代码是否等待目标进程的结束)
      </param>
      <returns>
        当发生错误的时候会返回错误代码，当当前的进程任然处于运行的状态的时候，程序会返回-100错误代码并在终端之上打印出警告信息
      </returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.Start(Microsoft.VisualBasic.CommandLine.IORedirect.ProcessExitCallBack,System.String[],System.Boolean)">
      <summary>
        Start the target process.(启动目标进程)
      </summary>
      <returns>当发生错误的时候会返回错误代码</returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.__listenSTDOUT">
      <summary>
        输出目标子进程的标准输出设备的内容
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.__detectProcessExit">
      <summary>
        检测目标子进程是否已经结束
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.op_Implicit(System.String)~Microsoft.VisualBasic.CommandLine.IORedirect">
      <summary>
        在进行隐士转换的时候，假若可执行文件的文件路径之中含有空格，则这个时候应该要特别的小心
      </summary>
      <param name="CLI"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        Creates a <see cref="T:System.Diagnostics.Process"/> wrapper for the CLI program operations.
        (在服务器上面可能会有一些线程方面的兼容性BUG的问题，不太清楚为什么会导致这样)
      </summary>
      <param name="Exe">The file path of the executable file.</param>
      <param name="args">The CLI arguments for the folked program.</param>
      <param name="envir">Set up the environment variable for the target invoked child process.</param>
      <param name="_disp_debug"></param>
      <param name="disp_STDOUT">是否显示目标被调用的外部程序的标准输出</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.Start(System.Boolean)">
      <summary>
        Gets the value that the associated process specified when it terminated.
      </summary>
      <param name="WaitForExit"></param>
      <returns>The code that the associated process specified when it terminated.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.Run">
      <summary>
        线程会被阻塞在这里，直到外部应用程序执行完毕
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Algorithm.base.Combination">
      <summary>
        任意多个集合之间的对象之间相互组成组合输出
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Algorithm.base.Combination.CreateCombos``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})">
      <summary>
        生成两个序列的两两组合 ``{<paramref name="seq_1"/> -> <paramref name="seq_2"/>}()``
      </summary>
      <typeparam name="TA"></typeparam>
      <typeparam name="TB"></typeparam>
      <param name="seq_1"></param>
      <param name="seq_2"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Algorithm.base.SlideWindowExtensions">
      <summary>
        Create a collection of slide Windows data for the target collection object.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Algorithm.base.SlideWindowExtensions.CreateSlideWindows``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Boolean)">
      <summary>
        Create a collection of slide Windows data for the target collection object.(创建一个滑窗集合)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="data"></param>
      <param name="slideWindowSize">The windows size of the created slide window.(窗口的大小)</param>
      <param name="offset">在序列之上移动的步长</param>
      <returns></returns>
      <param name="extTails">引用类型不建议打开这个参数</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Algorithm.base.SlideWindowExtensions.SlideWindows``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Boolean)">
      <summary>
        Create a collection of slide Windows data for the target collection object.(创建一个滑窗集合)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="data"></param>
      <param name="slideWindowSize">The windows size of the created slide window.(窗口的大小)</param>
      <param name="offset">在序列之上移动的步长</param>
      <returns></returns>
      <param name="extTails">引用类型不建议打开这个参数</param>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Algorithm.base.SlideWindow`1">
      <summary>
        A slide window data model.(滑窗操作的数据模型)
      </summary>
      <typeparam name="T"></typeparam>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Algorithm.base.SlideWindow`1.Index">
      <summary>
        The position of the current Windows in the Windows list.(在创建的滑窗的队列之中当前的窗口对象的位置)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Algorithm.base.SlideWindow`1.Items">
      <summary>
        The elements in this slide window.(这个划窗之中的元素的列表)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Algorithm.base.SlideWindow`1.Left">
      <summary>
        The left start position of the current slide Windows segment on the original sequence.
        (当前窗口在原始的序列之中的左端起始位点)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Algorithm.base.SlideWindow`1.Length">
      <summary>
        The length of the slide window.(窗口长度)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Algorithm.base.Comb`1">
      <summary>
        对象类型的组合输出工具，即目标类型的集合之中的元素两两组合配对
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Algorithm.base.Comb`1.EOL">
      <summary>
        对象列表是否已经完全组合输出
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Algorithm.base.Comb`1.NewLine">
      <summary>
        是否已经开始读取新的一行数据
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Algorithm.base.Comb`1.CreateCompleteObjectPairs(System.Collections.Generic.IEnumerable{`0})">
      <summary>
        Creates the completely combination of the elements in the target input collection source.
        (创建完完全全的两两配对)
      </summary>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Algorithm.SCS">
      <summary>
        shortest_common_superstring
      </summary>
      <remarks>
        https://github.com/aakash01/codebase/blob/60394bf92eb09410c07eec1c4d3c81cf0fc72a70/src/com/aakash/practice/interviewbit_may2017/dynamic_programming/ShortestCommonSuperString.java
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Algorithm.SCS.Coverage(System.Collections.Generic.IEnumerable{System.String},System.Char)">
      <summary>
        使用重叠程度最高的片段作为统计的标准
      </summary>
      <param name="table"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Algorithm.SCS.ShortestCommonSuperString(Microsoft.VisualBasic.Language.List{System.String})">
      <summary>
        Solve using Greedy. Forf all string find the max common prefix/suffix. Merge those two strings
        and continue it.
      </summary>
      <remarks>
        当这个函数遇到完全没有重叠的序列片段的时候，是会直接将这个不重叠的片段接到SCS的最末尾的
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Counter">
      <summary>
        The object counter
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Counter.Hit">
      <summary>
        ``++i``
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataIgnoredAttribute">
      <summary>
        在数据框数据映射操作之中是否忽略掉这个属性或者方法？
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Projector`2">
      <summary>
        Class field reader
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="Tout"></typeparam>
      <param name="[in]"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.QueryCacheFactory`1">
      <summary>
        这个库检索模型仅建议在目标数据量非常巨大的时候使用，如果数据量比较小，可以直接保存在一个文件之中，然后一次性加载在内存之中来进行查找
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.QueryCacheFactory`1.#ctor(System.Func{System.String,`0},System.Collections.Generic.IReadOnlyDictionary{System.String,`0},Microsoft.VisualBasic.Language.Default.Assert{System.Object})">
      <summary>

      </summary>
      <param name="factory"></param>
      <param name="cache"></param>
      <param name="assertIsNothing">如果这个函数返回的结果是True，说明目标为空值，这个主要是针对于structure类型而言的</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.QueryCacheFactory`1.Clear">
      <summary>
        Clear the cache memory
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.QueryCacheFactory`1.GetByKey(System.String)">
      <summary>
        Load by <see cref="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.QueryCacheFactory`1.factory"/> or read from <see cref="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.QueryCacheFactory`1.cache"/>.
      </summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.QueryCacheFactory`1.GetWhere(System.Func{`0,System.Boolean})">
      <summary>
        Only works on cache
      </summary>
      <param name="clause"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.QueryCacheFactory`1.GetAll">
      <summary>
        Only works on cache
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IMatched">
      <summary>
        The object implements on this interface can be matched with some rules.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IMatched.IsMatched">
      <summary>
        Is this object matched the condition?
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyIndex`1.Index">
      <summary>
        一般是一些短的字符串所构成的能够唯一标记该<see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyIndex`1.Entity"/>对象的术语列表
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1">
      <summary>
        Interface defining any item we can store in a repository and can identify by
        an unique key
      </summary>
      <remarks>
        This interface is typed so we can make type-safe code for retrieving the entity
        (don't pass in an integer if the entity is keyed by string etc.)
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key">
      <summary>
        Get the key to find the entity by
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.ClientRecord">
      <summary>
        Record for storing a client record in the common database
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.ClientRecord.ClientUniqueKey">
      <summary>
        The unique number by which we know this client
      </summary>
      <remarks>
        Every client has an unique id but this is not needed publically
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.ClientRecord.Code">
      <summary>
        The short code for the client
      </summary>
      <remarks>
        e.g. MCL for Merrion Computing Ltd etc.
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepositoryRead`2">
      <summary>
        Interface to support reading entities from the backing store
      </summary>
      <typeparam name="TEntity">
        The key-identified type of entity we are reading
      </typeparam>
      <typeparam name="TKey">
        The type of the key
      </typeparam>
      <remarks>
        In this architecture there is a seperate read and write interface but often this
        pattern has just the one interface for both functions
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepositoryRead`2.Exists(`0)">
      <summary>
        Does a record exist in the repository identified by this key
      </summary>
      <param name="key">
        The unique identifier of the entity we are looking for
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepositoryRead`2.GetByKey(`0)">
      <summary>
        Get the entity uniquely identified by the given key
      </summary>
      <param name="key">
        The unique identifier to use to get the entity
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepositoryRead`2.GetWhere(System.Func{`1,System.Boolean})">
      <summary>
        Get a set of entities from the repository that match the where clause
      </summary>
      <param name="clause">
        A function to apply to filter the results from the repository
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepositoryRead`2.GetAll">
      <summary>
        Get all of this type of thing from the repository
      </summary>
      <remarks>
        returns an IQueryable so this request can be filtered further
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepositoryWrite`2">
      <summary>
        Interface to support writing (and deletes) to a typed repository
      </summary>
      <typeparam name="TEntity">
        The type of entity in the repository
      </typeparam>
      <typeparam name="TKey">
        The type of the key to uniquely identify the entity
      </typeparam>
      <remarks>
        In this architecture there is a seperate read and write interface but often this
        pattern has just the one interface for both functions
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepositoryWrite`2.Delete(`0)">
      <summary>
        Delete the entity uniquely identified by this key
      </summary>
      <param name="key">
        The unique identifier of the record to delete
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepositoryWrite`2.AddOrUpdate(`1,`0)">
      <summary>
        Add or update the entity
      </summary>
      <param name="entity">
        The record to add or update on the repository
      </param>
      <param name="key" >
        The key that uniquely identifies the record to add or update
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepositoryWrite`2.AddNew(`1)">
      <summary>
        Adds an entity that we know to be new and returns its assigned key
      </summary>
      <param name="entity">
        The entity we are adding to the repository
      </param>
      <returns>
        The unique identifier for the entity
      </returns>
      <remarks>
        This is useful if the unique identifier is not an intrinsic property of
        the entity - for example if it is a memory address or a GUID
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IRepository`2">
      <summary>
        Read/write repository of typed entites
      </summary>
      <typeparam name="TKey">
        The type by which the entity is uniquely identified
      </typeparam>
      <typeparam name="TEntity">
        The type of entity in the repository
      </typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.RepositoryReadException">
      <summary>
        An exception that occured when reading from the repository backing store
      </summary>
      <remarks>
        The inner exception is from whatever
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.ILocalSearchHandle.Matches(System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>

      </summary>
      <param name="Keyword"></param>
      <param name="CaseSensitive">是否大小写敏感，默认不敏感</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.ILocalSearchHandle.Match(System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>

      </summary>
      <param name="Keyword"></param>
      <param name="CaseSensitive">是否大小写敏感，默认不敏感</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.SearchFramework">
      <summary>
        Extensions for data query
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.TsvFileIO">
      <summary>
        将文件读取出来然后对每一行数据进行分割，由于没有使用自定义属性来标记列的名称，所以这个很简单的tsv加载器要求属性的名称与列名称要完全一致。
        而且，还不能够为非初始数据类型，这个模块之中提供了简单的数据类型转换操作，这个只是一个简单的内置TSv文件读取模块
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.TsvFileIO.Load``1(System.String,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        Columns indexing by title.(自动将tsv文件数据之中的行解析反序列化加载为一个Class对象)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="Path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.TsvFileIO.LoadByIndex``1(System.String,Microsoft.VisualBasic.Text.Encodings,System.Int32)">
      <summary>
        Columns indexing by position.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="path$"></param>
      <param name="encoding"></param>
      <param name="base">
        By default the array index is ZERO based, or you can specific this array index base from 1, or any other integer values
      </param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.TsvFileIO.withoutProcess">
      <summary>
        Returns the source string without any processing
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.TsvFileIO.GetTsvHeader(System.IO.StreamReader,System.Boolean,System.Func{System.String,System.String})">
      <summary>

      </summary>
      <param name="stream"></param>
      <param name="lower"></param>
      <param name="process"></param>
      <returns></returns>
      <remarks>
        Linux平台上面的mono这里有bug，为什么<see cref="M:System.IO.StreamReader.ReadLine"/>一直都输出空值？
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.TsvFileIO.LoadFile(System.String,System.Text.Encoding,System.Boolean)">
      <summary>
        读取文件并且按照TAb进行分割
      </summary>
      <param name="path"></param>
      <param name="skipFirstLine">The first line of the text document maybe is the title headers, skip this line?</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection`1">
      <summary>
        The value object collection that have a name string, using <see cref="T:Microsoft.VisualBasic.Text.Xml.Models.NamedVector`1"/>
        for XML serialization instead of using this data model.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection`1.Name">
      <summary>
        这个集合对象的标识符名称
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection`1.Value">
      <summary>
        目标集合对象
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection`1.Description">
      <summary>
        目标集合对象的描述信息
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection`1.IsEmpty">
      <summary>
        当前的这个命名的目标集合对象是否是空对象？
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection`1.Length">
      <summary>
        <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection`1.Value"/> array length
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{`0}})">
      <summary>

      </summary>
      <param name="source">
        名称属性<see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Name"/>
      </param>必须是相同的
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1">
      <summary>
        The <see cref="T:System.Reflection.PropertyInfo"/> like definition of the extension property.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.Value">
      <summary>
        The Extension property value.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.obj">
      <summary>
        The instance object for this extension property
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.#ctor(System.Func{`0},System.Action{`0})">
      <summary>
        Custom property value.(value generated based on the extension property host <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.obj"/>)
      </summary>
      <param name="[get]">
        请勿使用<see cref="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.GetValue``1(``0,System.String)"/>
      </param>函数，否则会出现栈空间溢出
      <param name="[set]">
        请勿使用<see cref="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.SetValue(`0)"/>
      </param>方法，否则会出现栈空间溢出
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.#ctor">
      <summary>
        Tag property value.(默认是将数据写入到基本类型的值之中)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.SetValue(`0)">
      <summary>
        这个主要是应用于Linq表达式之中，将属性值设置之后返回宿主对象实例
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.op_Explicit(Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue{`0})~`0">
      <summary>
        Property Get Value
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.ToString">
      <summary>
        <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.Value"/> -> <see cref="M:Microsoft.VisualBasic.Serialization.JSON.JsonContract.GetObjectJson(System.Type,System.Object,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Type})"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.New``1(``0,System.String)">
      <summary>
        Creates a new extension property for the target <see cref="T:Microsoft.VisualBasic.Language.BaseClass"/>
      </summary>
      <typeparam name="Cls"></typeparam>
      <param name="x"></param>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyValue`1.Read``1(``0,System.String)">
      <summary>
        Gets the tag property value from the <see cref="T:Microsoft.VisualBasic.Language.BaseClass"/>.(读取<see cref="T:Microsoft.VisualBasic.Language.BaseClass"/>对象之中的一个拓展属性)
      </summary>
      <typeparam name="Cls"></typeparam>
      <param name="x"></param>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.IProperty.GetValue(System.Object)">
      <summary>
        Gets property value from <paramref name="target"/> object.
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.IProperty.SetValue(System.Object,System.Object)">
      <summary>
        Set <paramref name="value"/> to the property of <paramref name="target"/> object.
      </summary>
      <param name="target"></param>
      <param name="value"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1">
      <summary>
        The value object have a name string.(一个具有自己的名称的变量值)
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Name">
      <summary>
        Identifier tag data. you can using this property value as a dictionary key.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Value">
      <summary>
        Object value
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Description">
      <summary>
        Additional description text about this variable <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Value"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.IsEmpty">
      <summary>
        Does this object have value?
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.ValueType">
      <summary>
        Returns object gettype
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.#ctor(System.String,`0,System.String)">
      <summary>
        Creates a object bind with a specific <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Name"/>.
      </summary>
      <param name="name"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.ToString">
      <summary>
        View object.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.op_Addition(Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{`0},System.Collections.Generic.Dictionary{System.String,`0})">
      <summary>
        这个函数会将<paramref name="value"/>插入为<paramref name="table"/>的第一个元素
      </summary>
      <param name="value"></param>
      <param name="table"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.op_Implicit(System.ValueTuple{System.String,`0})~Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{`0}">
      <summary>
        Convert from tuple
      </summary>
      <param name="tuple"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1">
      <summary>
        Schema for <see cref="T:System.Attribute"/> and its bind <see cref="T:System.Reflection.PropertyInfo"/>/<see cref="T:System.Reflection.FieldInfo"/> object target.
        (使用这个对象将公共的域或者属性的读写统一起来)
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.member">
      <summary>
        The property/field object that bind with its custom attribute <see cref="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.Field"/> of type <typeparamref name="T"/>
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.Field">
      <summary>
        The flag for this field binding.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.Type">
      <summary>
        Gets the type of this <see cref="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.member"/>.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.Identity">
      <summary>
        The map name or the <see cref="P:System.Reflection.MemberInfo.Name"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.IsNull">
      <summary>
        Is this map data is null on its attribute or property data?
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.IsPrimitive">
      <summary>
        Gets a value indicating whether the <see cref="T:System.Type"/> is one of the primitive types.
      </summary>
      <returns>
        true if the <see cref="T:System.Type"/> is one of the primitive types; otherwise, false.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.SetValue(System.Object,System.Object)">
      <summary>
        Sets the property value of a specified object with optional index values for
        index properties.
        (这个设置值的函数只适用于``Class``类型，对于``Structure``类型而言，则无法正常的工作)
      </summary>
      <param name="obj">The object whose property value will be set.</param>
      <param name="value">The new property value.</param>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.GetValue(System.Object)">
      <summary>
        Returns the property value of a specified object with optional index values for
        indexed properties.
      </summary>
      <param name="x">The object whose property value will be returned.</param>
      <returns>The property value of the specified object.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1.ToString">
      <summary>
        Display this schema maps in Visualbasic style.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.SQLTable">
      <summary>
        A generic abstract model of a SQL table.
        (SQL之中的一个数据表的抽象描述接口)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.SQLTable.GetInsertSQL">
      <summary>
        INSERT INTO table_name (field1, field2,...) VALUES (value1, value2,....)
      </summary>
      <returns></returns>
      <remarks>http://www.w3school.com.cn/sql/sql_insert.asp</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.SQLTable.GetUpdateSQL">
      <summary>
        UPDATE table_name SET field = &lt;new value> WHERE field = &lt;value>
      </summary>
      <returns></returns>
      <remarks>http://www.w3school.com.cn/sql/sql_update.asp</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.SQLTable.GetDeleteSQL">
      <summary>
        DELETE FROM table_name WHERE field = value;
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.SQLTable.ToString">
      <summary>
        Display the INSERT INTO sql from function <see cref="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.SQLTable.GetInsertSQL"/>.
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.SQLTable.Clone">
      <summary>
        Clones the property values.
        (由于这个<see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.SQLTable"/>对象的所有属性都是简单的基本类型，所以能够很容易
        的复制这些属性，从而很容易的复制数据表之中的一个行对象)
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.SQLTable.Copy">
      <summary>
        MemberwiseClone
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.Mappings.GetFields``1(System.Type,System.Func{``0,System.String},System.Boolean)">
      <summary>
        这个只是得到最上面的一层属性值
      </summary>
      <typeparam name="T"></typeparam>
      <param name="type"></param>
      <param name="getFieldName"></param>
      <param name="explict">
        当自定义属性不存在的时候，隐式的使用域名或者属性名作为名称，否则会跳过该对象，默认是跳过该对象
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.Mappings.FieldNameMappings``1(System.Boolean)">
      <summary>
        获取从域名称映射到列名称的哈希表
      </summary>
      <typeparam name="T"></typeparam>
      <param name="explict"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.Schema`1">
      <summary>
        Schema for two dimension table.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.PropertyValue">
      <summary>
        用于读写tsv/XML文件格式的键值对数据
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.PropertyValue.Key">
      <summary>
        ID
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.PropertyValue.Property">
      <summary>
        Property Name
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.PropertyValue.Value">
      <summary>
        Value text
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.PropertyValue.ImportsTsv(System.String,System.Boolean)">
      <summary>
        Imports the tsv file like:

        ```
        &lt;ID>&lt;tab>&lt;PropertyName>&lt;tab>&lt;Value>
        ```
      </summary>
      <param name="path$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.Field">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute"/>属性的别称
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.Field.#ctor(System.String)">
      <summary>
        Initializes a new instance by name.
      </summary>
      <param name="FieldName">The name.</param>

    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute">
      <summary>
        Represents a column of certain data frames. The mapping between to schema is also can be represent by this attribute.
        (也可以使用这个对象来完成在两个数据源之间的属性的映射，由于对于一些列名称的属性值缺失的映射而言，
        其是使用属性名来作为列映射名称的，故而在修改这些没有预设的列名称的映射属性的属性名的时候，请注意
        要小心维护这种映射关系)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute.Index">
      <summary>
        Gets the index.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute.Name">
      <summary>
        Gets the name.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute.#ctor(System.String)">
      <summary>
        Initializes a new instance by name.
      </summary>
      <param name="FieldName">The name.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute.#ctor(System.Int32)">
      <summary>
        Initializes a new instance by index.
      </summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute.#ctor">
      <summary>
        会默认使用目标对象的反射的Name属性作为映射的名称
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute.#ctor(System.String,System.Int32)">
      <summary>

      </summary>
      <param name="Name">列名称，假若本参数为空的话，则使用属性名称</param>
      <param name="index">从1开始的下标，表示为第几列</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute.LoadMapping``1(System.String[],System.Boolean)">
      <summary>
        没有名称属性的映射使用属性名来表述，请注意，字典的Key是属性的名称
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute.LoadMapping(System.Type,System.String[],System.Boolean)">
      <summary>
        Load the mapping property, if the custom attribute <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute"></see>
        have no name value, then the property name will be used as the mapping name.
        (这个函数会自动给空名称值进行属性名的赋值操作的)
      </summary>
      <param name="typeInfo">
        The type should be a class type or its properties should have the
        mapping option which was created by the custom attribute <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute"></see>
      </param>
      <param name="ignores">这个是大小写敏感的</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute.__source(System.Type,System.String[],System.Boolean)">
      <summary>

      </summary>
      <param name="type"></param>
      <param name="ignores$"></param>
      <param name="mapsAll">
        Some property probably didn't have masked by <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute"/>,
        so if this option is set to TRUE, then means indexing these property that without <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute"/> masked as well.
        otherwise only indexing the property that have <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute"/> masked on it.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameIO`1.InitializeSchema``1">
      <summary>

      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.IDynamicMeta`1">
      <summary>
        Abstracts for the dynamics property.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.IDynamicMeta`1.Properties">
      <summary>
        Properties
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase`1">
      <summary>
        This abstract object has a <see cref="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase`1.propertyTable"/> dictionary keeps as a dynamics property source.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase`1.Properties">
      <summary>
        The dynamics property object with specific type of value.
      </summary>
      <returns></returns>
      <remarks>Can not serialize the dictionary object in to xml document.</remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase`1.propertyTable">
      <summary>
        动态属性表
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase`1.ItemValue(System.String)">
      <summary>
        Gets/sets item value by using property name.
        (这个函数为安全的函数，当目标属性不存在的时候，会返回空值)
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase`1.ItemValue(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        Get a value package at once using a key collection,
        if the key is not exists in the property, then its
        correspoding value is nothing.
      </summary>
      <param name="keys"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase`1.HasProperty(System.String)">
      <summary>
        Determines whether the System.Collections.Generic.Dictionary`2 contains the specified
        key.
      </summary>
      <param name="name$">The key to locate in the System.Collections.Generic.Dictionary`2.</param>
      <returns>
        true if the System.Collections.Generic.Dictionary`2 contains an element with
        the specified key; otherwise, false.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase`1.EnumerateKeys(System.Boolean)">
      <summary>
        枚举这个动态字典类型之中的所有的键名，这个函数是默认不包含有类型自有的属性名称的
      </summary>
      <param name="joinProperties">是否包括属性名称，默认不包含</param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase`1.MyHashCode">
      <summary>
        Using for debugger view, this property is usually usefull for the dictionary view
        to see if any duplicated was existed?
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Property`1">
      <summary>
        Dictionary for [<see cref="T:System.String"/>, <typeparamref name="T"/>]
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Property`1.#ctor(System.String,`0)">
      <summary>
        New with a init property value
      </summary>
      <param name="initKey"></param>
      <param name="initValue"></param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Property`1.src">
      <summary>

      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Iterator`1">
      <summary>
        在<see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Iterator"/>的基础之上所构建出来的一个泛型化的迭代器对象.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Iterator">
      <summary>
        Implements for the <see cref="T:System.Collections.Generic.IEnumerable`1"/>, Supports a simple iteration over a non-generic collection.
        (这个迭代器对象主要是用在远程数据源之中的，对于本地的数据源而言，使用这个迭代器的效率太低了，但是对于远程数据源而言，由于存在网络延迟，所以这个迭代器的效率影响将可以被忽略不计)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Iterator.Current">
      <summary>
        Gets the current element in the collection.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Iterator.ReadDone">
      <summary>
        Indicates that there are no more characters in the string and tokenizer is finished.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Iterator.GetEnumerator">
      <summary>
        Exposes an enumerator, which supports a simple iteration over a non-generic collection.To
        browse the .NET Framework source code for this type, see the Reference Source.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Iterator.Read">
      <summary>
        Returns current and then automatically move to next position
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Iterator.Reset">
      <summary>
        Sets the enumerator to its initial position, which is before the first element in the collection.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Iterator.MoveNext">
      <summary>
        Advances the enumerator to the next element of the collection.
      </summary>
      <returns>
        true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.ControlsExtension">
      <summary>
        Two Extension methods which expose the ExtendedProps class through the label's Tag object is all you need.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.ExtendedProps">
      <summary>
        An Almost Extension Property
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework">
      <summary>
        在目标对象中必须要具有一个属性有自定义属性<see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute"></see>
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.Flags">
      <summary>
        Controls for <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyAccess"/> on <see cref="T:System.Reflection.PropertyInfo"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.Schema``1(Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyAccess,System.Boolean,System.Boolean)">
      <summary>
        获取类型之中的属性列表
      </summary>
      <typeparam name="T"></typeparam>
      <param name="flag"></param>
      <param name="nonIndex">
        <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters"/> IsNullOrEmpty
      </param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.PublicProperty">
      <summary>
        (instance) ``Public Property xxxxx As xxxxx``
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.PublicShared">
      <summary>
        (statics) ``Public Shared Property xxxx As xxxx``
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.Schema(System.Type,Microsoft.VisualBasic.ComponentModel.DataSourceModel.PropertyAccess,System.Reflection.BindingFlags,System.Boolean)">
      <summary>
        请注意：对于VisualBasic的My.Resources.Resources类型而言，里面的属性都是Friend Shared访问类型的，
        所以在解析内部资源管理器对象的时候应该要特别注意<paramref name="binds"/>参数值的设置，
        因为这个参数默认是<see cref="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.PublicProperty"/>
      </summary>
      <param name="type"></param>
      <param name="flag"></param>
      <param name="binds"></param>
      <param name="nonIndex">
        <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters"/> IsNullOrEmpty
      </param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.StringParsers">
      <summary>
        Converts the .NET primitive types from string.(将字符串数据类型转换为其他的数据类型)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.StringBuilders">
      <summary>
        Object <see cref="T:System.Object"/> methods.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.valueToString(System.Object)">
      <summary>
        这个函数是为了提供转换的方法给字典对象<see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.StringBuilders"/>
      </summary>
      <param name="o">
        因为<see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.StringBuilders"/>要求的是<see cref="T:Microsoft.VisualBasic.Serialization.IStringBuilder"/>，
        即<see cref="T:System.Object"/>类型转换为字符串，所以在这里就不适用T泛型了，而是直接
        使用<see cref="T:System.Object"/>类型
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.IsPrimitive(System.Type)">
      <summary>
        Is one of the primitive type in the hash <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.StringBuilders"/>?
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.IscomplexType(System.Type)">
      <summary>
        如果目标类型的属性之中值包含有基础类型，则是一个非复杂类型，反之包含任意一个非基础类型，则是一个复杂类型
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.CreateObject``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Convert target data object collection into a datatable for the data source of the <see cref="T:System.Windows.Forms.DataGridView"></see>>.
        (将目标对象集合转换为一个数据表对象，用作DataGridView控件的数据源)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.GetValue``1(System.Data.DataTable)">
      <summary>
        Retrive data from a specific datatable object.(从目标数据表中获取数据)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="DataTable"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Generic.NamedValueList`1.op_Addition(System.Collections.Generic.Dictionary{System.String,`0},Microsoft.VisualBasic.ComponentModel.Collection.Generic.NamedValueList{`0})">
      <summary>
        This operator will makes a copy of <paramref name="table"/>
      </summary>
      <param name="table"></param>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IKeyValuePairObject`2">
      <summary>
        Defines a key/value pair that can be set or retrieved.
      </summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IKeyValuePairObject`2.Key">
      <summary>
        Gets the key in the key/value pair.
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IKeyValuePairObject`2.Value">
      <summary>
        Gets the value in the key/value pair.
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IReadOnlyDataSource`1">
      <summary>
        Defines a key/value pair that only can be retrieved.
      </summary>
      <typeparam name="TValue"></typeparam>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.KeyValuePairObject`2">
      <summary>
        Defines a key/value pair that can be set or retrieved.
      </summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.KeyValuePairObject`2.Key">
      <summary>
        Gets the key in the key/value pair.
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.KeyValuePairObject`2.Value">
      <summary>
        Gets the value in the key/value pair.
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.HashDictionary`1">
      <summary>
        The key of the dictionary is string value and the keys is not sensitive to the character case.
        (字典的键名为字符串，大小写不敏感，行为和哈希表类型)
      </summary>
      <typeparam name="T"></typeparam>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Generic.HashDictionary`1.#ctor">
      <summary>
        Initializes a new instance of the System.Collections.Generic.Dictionary`2 class
        that is empty, has the default initial capacity, and uses the default equality
        comparer for the key type.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Generic.HashDictionary`1.ContainsKey(System.String)">
      <summary>

      </summary>
      <param name="key">大小写不敏感</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.HashDictionary`1.Item(System.String)">
      <summary>
        添加<see cref="M:Microsoft.VisualBasic.ComponentModel.Collection.Generic.HashDictionary`1.Add(System.Collections.Generic.KeyValuePair{System.String,`0})"></see>和替换操作主要在这里进行
      </summary>
      <param name="key">大小写不敏感</param>
      <value></value>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.INamedValue">
      <summary>
        This type of object have a <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key"></see> property to unique identified itself in a collection.
        This interface was inherits from type <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1"/>.
        (一个具有自己的名称的变量值的抽象)
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IReadOnlyId">
      <summary>
        与<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.INamedValue"/>所不同的是，这个对象的标识属性是只读的.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IReadOnlyId.Identity">
      <summary>
        The unique identifer in the object collection. Unique-Id of the target implements object
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.CapacityQueue`1.#ctor(System.Int32)">
      <summary>

      </summary>
      <param name="capacity">
        The initial number of elements that the System.Collections.Generic.Queue`1 can
        contain.
      </param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.BucketDictionary`2">
      <summary>
        An ultralarge size dictionary object.
        (当你发现一个数据集合非常的大的时候，一个字典会出现溢出，则这个时候就需要这个超大容量的Bucket字典容器了)
      </summary>
      <typeparam name="K"></typeparam>
      <typeparam name="V"></typeparam>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Collection.BucketDictionary`2.bucketSize">
      <summary>
        每一个字典之中的最大的元素数目
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.BucketDictionary`2.Count">
      <summary>
        获取这个超大的字典集合之中的对象的数量总数
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.BucketDictionary`2.Item(`0)">
      <summary>
        注意，不要直接使用这个方法来添加新的数据，使用<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.BucketDictionaryExtensions"/>的方法会更加高效
      </summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.FuzzyGroup">
      <summary>
        对数据进行分组，通过标签数据的相似度
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.FuzzyGroup.FuzzyGroups``1(System.Collections.Generic.IEnumerable{``0},System.Double,System.Boolean)">
      <summary>
        Grouping objects in a collection based on their <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key"/> string Fuzzy equals to others'.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="cut">字符串相似度的阈值</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.FuzzyGroup.FuzzyGroups``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Double,System.Boolean)">
      <summary>
        Grouping objects in a collection based on their unique key string Fuzzy equals to others'.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="getKey">The unique key provider</param>
      <param name="cut">字符串相似度的阈值</param>
      <returns></returns>
      <remarks>
        由于list在查找方面的速度非常的慢，而字典可能在生成的时候会慢一些，但是查找很快，所以在这里函数里面使用字典来替代列表
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.FuzzyGroup.__groupHelper`1">
      <summary>
        分组操作的内部帮助类
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Collection.FuzzyGroup.__groupHelper`1.key">
      <summary>
        Key for represent this object.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Collection.FuzzyGroup.__groupHelper`1.x">
      <summary>
        Target element object in the grouping
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Collection.FuzzyGroup.__groupHelper`1.keyASC">
      <summary>
        Key cache
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.FuzzyGroup.__groupHelper`1.Equals(Microsoft.VisualBasic.ComponentModel.Collection.FuzzyGroup.__groupHelper{`0})">
      <summary>
        判断Key是否模糊相等
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.BinaryPriorityQueue.Push(System.Object)">
      <summary>
        Push an object onto the PQ
      </summary>
      <param name="O">The new object</param>
      <returns>The index in the list where the object is _now_. This will change when objects are taken from or put onto the PQ.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.BinaryPriorityQueue.Pop">
      <summary>
        Get the smallest object and remove it.
      </summary>
      <returns>The smallest object</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.BinaryPriorityQueue.Update(System.Int32)">
      <summary>
        Notify the PQ that the object at position i has changed
        and the PQ needs to restore order.
        Since you dont have access to any indexes (except by using the
        explicit IList.this) you should not call this function without knowing exactly
        what you do.
      </summary>
      <param name="i">The index of the changed object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.BinaryPriorityQueue.Peek">
      <summary>
        Get the smallest object without removing it.
      </summary>
      <returns>The smallest object</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Index`1">
      <summary>
        Mappings of ``key As String -> index As Integer``
      </summary>
      <typeparam name="T"></typeparam>
      <remarks>
        ###### 2017-12-10

        经过测试，字典对象是完全可以容纳UniProt数据库之中的物种的数量上限的
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Index`1.Count">
      <summary>
        获取包含在<see cref="T:System.Collections.Generic.Dictionary`2"/>中的键/值对的数目。
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Index`1.Objects">
      <summary>
        Gets the input object keys that using for the construction of this index.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Index`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
        请注意，这里的数据源请尽量使用Distinct的，否则对于重复的数据，只会记录下第一个位置
      </summary>
      <param name="source"></param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Index`1.IndexOf(`0)">
      <summary>
        获取目标对象在本索引之中的位置编号，不存在则返回-1
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Index`1.IndexOf(System.Int32)">
      <summary>
        直接通过索引获取目标对象的值，请注意，如果<typeparamref name="T"/>泛型类型是<see cref="T:System.Int32"/>，
        则如果需要查找index的话，则必须要显式的指定参数名为``x:=``，否则调用的是当前的这个索引方法，
        得到错误的结果
      </summary>
      <param name="index%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Index`1.NotExists(`0)">
      <summary>
        For Linq ``where``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Index`1.Add(`0)">
      <summary>
        这个函数是线程不安全的
      </summary>
      <param name="x"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Index`1.ToString">
      <summary>
        Display the input source sequence.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1">
      <summary>
        Represents a collection of keys and values.To browse the .NET Framework source
        code for this type, see the Reference Source.
      </summary>
      <typeparam name="V"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.Item(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        The <paramref name="keys"/> element counts should equals to the value length when invoke property set.
      </summary>
      <param name="keys"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.#ctor(System.Collections.Generic.Dictionary{System.String,`0})">
      <summary>
        Initializes a new instance of the System.Collections.Generic.SortedDictionary`2
        class that contains elements copied from the specified System.Collections.Generic.IDictionary`2
        and uses the default System.Collections.Generic.IComparer`1 implementation for
        the key type.
      </summary>
      <param name="source">
        The System.Collections.Generic.IDictionary`2 whose elements are copied to the
        new System.Collections.Generic.SortedDictionary`2.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.Add(`0)">
      <summary>
        Adds an element with the specified key and value into the System.Collections.Generic.SortedDictionary`2.
      </summary>
      <param name="item"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.Find(System.String)">
      <summary>

      </summary>
      <param name="name">不区分大小写的</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.SafeGetValue(System.String,`0@,System.Boolean@)">
      <summary>
        If the value is not found in the hash directionary, then the default value will be returns, and the default value is nothing.
      </summary>
      <param name="name"></param>
      <param name="[default]"></param>
      <param name="success">可能value本身就是空值，所以在这里使用这个参数来判断是否存在</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.TryGetValue(System.String,System.Boolean@)">
      <summary>
        Gets the value associated with the specified key.(假若找不到键值，就会返回Nothing)
      </summary>
      <param name="name">The key of the value to get.</param>
      <param name="success">
        true if the System.Collections.Generic.SortedDictionary`2 contains an element
        with the specified key; otherwise, false.
      </param>
      <returns>
        When this method returns, the value associated with the specified key, if the
        key is found; otherwise, the default value for the type of the value parameter.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.Remove(`0)">
      <summary>
        假若目标元素不存在于本字典之中，则会返回False
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.op_Addition(Microsoft.VisualBasic.ComponentModel.Collection.Dictionary{`0},`0)">
      <summary>
        Adds an element with the specified key and value into the System.Collections.Generic.SortedDictionary`2.
      </summary>
      <param name="list"></param>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.op_Exponent(Microsoft.VisualBasic.ComponentModel.Collection.Dictionary{`0},System.String)">
      <summary>
        Find a variable in the hash table
      </summary>
      <param name="table"></param>
      <param name="uid"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.op_Subtraction(Microsoft.VisualBasic.ComponentModel.Collection.Dictionary{`0},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        批量移除字典之中的键值对
      </summary>
      <param name="hash"></param>
      <param name="keys">需要移除的键名的列表</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.op_LessThanOrEqual(Microsoft.VisualBasic.ComponentModel.Collection.Dictionary{`0},System.String)">
      <summary>
        Get value by key.
      </summary>
      <param name="hash"></param>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.op_Concatenate(Microsoft.VisualBasic.ComponentModel.Collection.Dictionary{`0},System.String)">
      <summary>
        <see cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)"/>
      </summary>
      <param name="hash"></param>
      <param name="null"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Dictionary`1.op_Concatenate(Microsoft.VisualBasic.ComponentModel.Collection.Dictionary{`0},`0)">
      <summary>
        <see cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)"/>
      </summary>
      <param name="table"></param>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Collection.PriorityQueue`1">
      <summary>
        An Interface for the PriorityQueue Class.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.PriorityQueue`1.Add(`0)">
      <summary>
        Add without sort
      </summary>
      <param name="x"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Collection.PriorityQueue`1.Dequeue">
      <summary>
        Poll
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.Extensions.NameCompare(System.String,System.String)">
      <summary>
        字符串名字的比较规则：

        假若字符串是空值或者空字符串，则该变量小
        假若字符串相等（忽略大小写），则变量值一样
        最后逐个字符进行比较，按照字母的charcode大小来比较，第一个charcode大的变量大
      </summary>
      <param name="a$"></param>
      <param name="b$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.Extensions.NameFuzzyMatch(System.String,System.String)">
      <summary>
        The term index search engine.

        + If the string similarity less than threshold, then will returns negative value
        + If the string similarity greater than threshold, then will returns positive value
        + If the string text equals to other, then will reutrns ZERO
      </summary>
      <param name="a$"></param>
      <param name="b$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.CompareOf`1">
      <summary>
        The generic object comparer model:

        + ``> 0`` means ``a > b``
        + ``= 0`` means ``a = 0``
        + ``&lt;0`` means ``a &lt; b``
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.ClusterParts.ClusterParts``1(Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree{``0},Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.ClusterParts.IsType{``0},Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.ClusterParts.IsType{``0},Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.ClusterParts.GetEntities{``0})">
      <summary>
        {最开始的节点，实体列表}
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.ClusterParts.__hashLeaf``1(Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode{``0},Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.ClusterParts.IsType{``0},Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.ClusterParts.IsType{``0})">
      <summary>
        最远只允许隔着一层Path，这些就可以看作为一个cluster
      </summary>
      <param name="node"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode`1">
      <summary>
        Define tree nodes
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode`1.Count">
      <summary>
        递归的得到子节点的数目
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode`1.#ctor(System.String,`0)">
      <summary>
        Constructor  to create a single node
      </summary>
      <param name="name"></param>
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode`1.GetEnumerator">
      <summary>
        最多只有两个元素
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1">
      <summary>
        The Binary tree itself.

        A very basic Binary Search Tree. Not generalized, stores
        name/value pairs in the tree nodes. name is the node key.
        The advantage of a binary tree is its fast insert and lookup
        characteristics. This version does not deal with tree balancing.
        (二叉搜索树，用于建立对repository的索引文件)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.Root">
      <summary>
        The root of the tree.
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1._counts">
      <summary>
        Points to the root of the tree
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.#ctor(System.String,`0)">
      <summary>
        初始化有一个根节点
      </summary>
      <param name="ROOT"></param>
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.clear">
      <summary>
        Clear the binary tree.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.Add(System.String,Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode{`0},System.Boolean)">
      <summary>
        Manual add tree node
      </summary>
      <param name="parent"></param>
      <param name="node"></param>
      <param name="left"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.Add(System.String,Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode{`0})">
      <summary>
        Manual add tree node
      </summary>
      <param name="parent"></param>
      <param name="node"></param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.Length">
      <summary>
        Returns the number of nodes in the tree
      </summary>
      <returns>Number of nodes in the tree</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.FindSymbol(System.String)">
      <summary>
        Find name in tree. Return a reference to the node
        if symbol found else return null to indicate failure.
      </summary>
      <param name="name">Name of node to locate</param>
      <returns>Returns null if it fails to find the node, else returns reference to node</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.Add(Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode{`0},Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode{`0}@,System.Int32)">
      <summary>
        Recursively locates an empty slot in the binary tree and inserts the node
      </summary>
      <param name="node"></param>
      <param name="tree"></param>
      <param name="[overrides]">
        0不复写，函数自动处理
        &lt;0  LEFT
        >0 RIGHT
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.insert(System.String,`0,System.Boolean)">
      <summary>
        Add a symbol to the tree if it's a new one. Returns reference to the new
        node if a new node inserted, else returns null to indicate node already present.
      </summary>
      <param name="name">Name of node to add to tree</param>
      <param name="d">Value of node</param>
      <returns>
        Returns reference to the new node is the node was inserted.
        If a duplicate node (same name was located then returns null
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.insert(System.String,`0)">
      <summary>
        Add a symbol to the tree if it's a new one. Returns reference to the new
        node if a new node inserted, else returns null to indicate node already present.
      </summary>
      <param name="name">Name of node to add to tree</param>
      <param name="d">Value of node</param>
      <returns>
        Returns reference to the new node is the node was inserted.
        If a duplicate node (same name was located then returns null
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.findParent(System.String,Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode{`0}@)">
      <summary>
        Searches for a node with name key, name. If found it returns a reference
        to the node and to the nodes parent. Else returns null.
      </summary>
      <param name="name"></param>
      <param name="parent"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.findSuccessor(Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode{`0},Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.TreeNode{`0}@)">
      <summary>
        Find the next ordinal node starting at node startNode.
        Due to the structure of a binary search tree, the
        successor node is simply the left most node on the right branch.
      </summary>
      <param name="startNode">Name key to use for searching</param>
      <param name="parent">Returns the parent node if search successful</param>
      <returns>Returns a reference to the node if successful, else null</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.delete(System.String)">
      <summary>
        Delete a given node. This is the more complex method in the binary search
        class. The method considers three senarios, 1) the deleted node has no
        children; 2) the deleted node as one child; 3) the deleted node has two
        children. Case one and two are relatively simple to handle, the only
        unusual considerations are when the node is the root node. Case 3) is
        much more complicated. It requires the location of the successor node.
        The node to be deleted is then replaced by the sucessor node and the
        successor node itself deleted. Throws an exception if the method fails
        to locate the node for deletion.
      </summary>
      <param name="key">Name key of node to delete</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree.BinaryTree`1.ToString">
      <summary>
        Return the tree depicted as a simple string, useful for debugging, eg
        50(40(30(20, 35), 45(44, 46)), 60)
      </summary>
      <returns>Returns the tree</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.ITreeNode`1.ChildNodes">
      <summary>
        Children
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1">
      <summary>
        Generic Tree Node base class
      </summary>
      <typeparam name="T"></typeparam>
      <remarks>https://www.codeproject.com/Articles/345191/Simple-Generic-Tree</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.#ctor(System.String)">
      <summary>

      </summary>
      <param name="name"></param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.Name">
      <summary>
        Name
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.Parent">
      <summary>
        Parent
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.ChildNodes">
      <summary>
        Children
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.MySelf">
      <summary>
        Me/this
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.IsLeaf">
      <summary>
        True if a Leaf Node
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.IsRoot">
      <summary>
        True if the Root of the Tree
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.GetLeafNodes">
      <summary>
        List of Leaf Nodes
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.GetNonLeafNodes">
      <summary>
        List of Non Leaf Nodes
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.GetRootNode">
      <summary>
        Get the Root Node of the Tree
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.FullyQualifiedName">
      <summary>
        Dot separated name from the Root to this Tree Node
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.AddChild(`0)">
      <summary>
        Add a Child Tree Node
      </summary>
      <param name="child"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.AddChildren(System.Collections.Generic.IEnumerable{`0})">
      <summary>
        Add a collection of child Tree Nodes
      </summary>
      <param name="children"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Tree.TreeNodeBase`1.GetEnumerator">
      <summary>
        Iterates all of my childs
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">
      <summary>
        Represents an unordered grouping of unique hetrogenous members.
        (这个对象的功能和List类似，但是这个对象的主要的作用是进行一些集合运算：使用AND求交集以及使用OR求并集的)
      </summary>

    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.BadBehaviourResponses">
      <summary>
        Enum of values to determine the aggressiveness of the response of the
        class to bad data.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.BadBehaviourResponses.BeAggressive">
      <summary>
        If the user enters bad data, throw an exception they have to deal with.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.BadBehaviourResponses.BeCool">
      <summary>
        If the user enters bad data, just eat it quietly.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.DataStructures.Set._equals">
      <summary>
        如何判断两个元素是否相同？
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.#ctor(System.Func{System.Object,System.Object,System.Boolean})">
      <summary>
        Default constructor.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.#ctor(Microsoft.VisualBasic.ComponentModel.DataStructures.Set[],System.Func{System.Object,System.Object,System.Boolean})">
      <summary>
        Constructor called when the source data is an array of <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Sets</see>.  They will
        be unioned together, with addition exceptions quietly eaten.
      </summary>
      <param name="sources">
        The source array of <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see> objects.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.Clear">
      <summary>
        Empty the set of all members.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.IsEmpty">
      <summary>
        A method to determine whether the <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see> has members.
      </summary>
      <returns>True is there are members, false if there are 0 members.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.Remove(System.Object)">
      <summary>
        Remove a member from the <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see>.
      </summary>
      <param name="target">The member to remove.</param>
      <returns>
        True if a member was removed, false if nothing was found that
        was removed.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.Add(System.Object)">
      <summary>
        Method to add an <see cref="T:System.Object">Object</see> to the set.  The new member
        must be unique.
      </summary>
      <param name="member">
        <see cref="T:System.Object">Object</see> to add.
      </param>
      <exception cref="T:System.InvalidOperationException">
        If the member being added is
        already a member of the set an InvalidOperationException is thrown.
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.Contains(System.Object)">
      <summary>
        Method to determine if a given object is a member of the set.
      </summary>
      <param name="target">The object to look for in the set.</param>
      <returns>
        True if it is a member of the <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see>, false if not.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.ToArray">
      <summary>
        Copies the members of the <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see> to an array of
        <see cref="T:System.Object">Objects</see>.
      </summary>
      <returns>
        An <see cref="T:System.Object">Object</see> array copies of the
        elements of the <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see>
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.Item(System.Int32)">
      <summary>
        Public accessor for the members of the <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see>.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.Length">
      <summary>
        The number of members of the set.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.op_Explicit(System.Array)~Microsoft.VisualBasic.ComponentModel.DataStructures.Set">
      <summary>
        If the Set is created by casting an array to it, add the members of
        the array through the Add method, so if the array has dupes an error
        will occur.
      </summary>
      <param name="array">The array with the objects to initialize the array.</param>
      <returns>A new Set object based on the members of the array.</returns>
      <exception cref="T:System.InvalidCastException">
        If the array contains duplicate
        elements, an InvalidCastException will result.
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.op_BitwiseOr(Microsoft.VisualBasic.ComponentModel.DataStructures.Set,Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        Performs a union of two sets. The elements can exists
        in <paramref name="s1"/> or <paramref name="s2"/>.
        (求并集)
      </summary>
      <param name="s1">Any set.</param>
      <param name="s2">Any set.</param>
      <returns>
        A new <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see> object that contains all of the
        members of each of the input sets.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.op_BitwiseAnd(Microsoft.VisualBasic.ComponentModel.DataStructures.Set,Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        Performs an intersection of two sets, the elements should exists
        in <paramref name="s1"/> and <paramref name="s2"/>.
        (求交集)
      </summary>
      <param name="s1">Any set.</param>
      <param name="s2">Any set.</param>
      <returns>
        A new <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see> object that contains the members
        that were common to both of the input sets.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.op_Addition(Microsoft.VisualBasic.ComponentModel.DataStructures.Set,Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        求两个集合的并集，将两个集合之中的所有元素都合并在一起，这个操作符会忽略掉重复出现的元素
      </summary>
      <param name="s1"></param>
      <param name="s2"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.op_Subtraction(Microsoft.VisualBasic.ComponentModel.DataStructures.Set,Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        except(差集)集合运算：先将其中完全重复的数据行删除，再返回只在第一个集合中出现，在第二个集合中不出现的所有行。
      </summary>
      <param name="s1"></param>
      <param name="s2"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.op_Equality(Microsoft.VisualBasic.ComponentModel.DataStructures.Set,Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        Overloaded == operator to determine if 2 sets are equal.
      </summary>
      <param name="s1">Any set.</param>
      <param name="s2">Any set.</param>
      <returns>
        True if the two comparison sets have the same number of elements, and
        all of the elements of set s1 are contained in s2.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.op_Inequality(Microsoft.VisualBasic.ComponentModel.DataStructures.Set,Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        Overloaded != operator to determine if 2 sets are unequal.
      </summary>
      <param name="s1">A benchmark set.</param>
      <param name="s2">The set to compare against the benchmark.</param>
      <returns>
        True if the two comparison sets fail the equality (==) test,
        false if the pass the equality test.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.Equals(System.Object)">
      <summary>
        Determines whether two <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see> instances are equal.
      </summary>
      <param name="obj">
        The <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see> to compare to the current Set.
      </param>
      <returns>
        true if the specified <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see> is equal to the current
        Set; otherwise, false.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.GetHashCode">
      <summary>
        Serves as a hash function for a particular type, suitable for use in hashing
        algorithms and data structures like a hash table.
      </summary>
      <returns>
        A hash code for the current <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see>.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.ToString">
      <summary>
        Returns a <see cref="T:System.String">String</see> that represents the current
        <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see>.
      </summary>
      <returns>
        A <see cref="T:System.String">String</see> that represents the current
        <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see>.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.IEnumerable_GetEnumerator">
      <summary>
        Returns an enumerator that can iterate through a collection.
      </summary>
      <returns>
        An <see cref="T:System.Collections.IEnumerator">IEnumerator</see> that can be
        used to iterate through the collection.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Set.Dispose">
      <summary>
        Performs cleanup tasks on the <see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set">Set</see> object.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.LoopArray`1">
      <summary>
        Infinite loop iterates of the target element collection.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.LoopArray`1.Next">
      <summary>
        Gets the next elements in the array, is move to end, then the index will moves to the array begining position.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.LoopArray`1.GET(System.Int32)">
      <summary>

      </summary>
      <param name="delta%">The pointer move delta</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.LoopArray`1.Break">
      <summary>
        Exit the Infinite loop iterator <see cref="M:Microsoft.VisualBasic.ComponentModel.DataStructures.LoopArray`1.GetEnumerator"/>
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.LoopArray`1.GetEnumerator">
      <summary>
        Infinite loop iterates of the target element collection.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Pointer`1">
      <summary>
        进行集合之中的元素的取出操作的帮助类
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.Pointer`1.op_Addition(`0[],Microsoft.VisualBasic.ComponentModel.DataStructures.Pointer{`0})">
      <summary>
        Returns current line in the array and then pointer moves to next.
      </summary>
      <param name="array"></param>
      <param name="i"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.ITaskDriver">
      <summary>
        Driver abstract model
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.ITaskDriver.Run">
      <summary>
        Start run this driver object.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Triggers.ITrigger.TestRun">
      <summary>
        Test if success then run callback
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Triggers.DailyTimerTrigger">
      <summary>
        这个只会比较时和分，每天都会触发
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Triggers.DailyTimerTrigger.#ctor(System.DateTime,System.Action,System.Int32)">
      <summary>

      </summary>
      <param name="time">只需要赋值小时和分钟即可</param>
      <param name="task"></param>
      <param name="interval"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Triggers.TimerTrigger">
      <summary>
        在指定的日期和时间呗触发，因此这个触发器只会运行一次
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Triggers.TimerTrigger.Time">
      <summary>
        当判定到达这个指定的时间之后就会触发动作
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Triggers.TimerTrigger.Interval">
      <summary>
        ms
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Triggers.TimerTrigger.#ctor(System.DateTime,System.Action,System.Int32)">
      <summary>

      </summary>
      <param name="time">只精确到分，不会比较秒数</param>
      <param name="task"></param>
      <param name="interval">ms</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Triggers.TimerTrigger.__test">
      <summary>
        不计算毫秒
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Triggers.TimerTrigger.Start">
      <summary>
        启动计时器线程，这个方法不会阻塞当前的线程
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.LinkNode`1.node">
      <summary>
        Current node in the chain list
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.LinkNode`1.Next">
      <summary>
        The next element in the chain after this element
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.LinkNode`1.Previous">
      <summary>
        The previous element in the chain before this element
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.HashHandle`1.__allocate">
      <summary>
        Allocate memory
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.BufferedStream">
      <summary>
        Buffered large text dataset reader
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.BufferedStream.FileName">
      <summary>
        The File location of this text file.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.BufferedStream.#ctor(System.String,System.Text.Encoding,System.Int32)">
      <summary>

      </summary>
      <param name="path"></param>
      <param name="encoding">
        <see cref="P:System.Text.Encoding.Default"/>, if null
      </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.BufferedStream.EndRead">
      <summary>
        End of buffer read?
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.BufferedStream.Reset">
      <summary>
        Reset the stream buffer reader to its initial state.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.BufferedStream.BufferProvider">
      <summary>
        当<see cref="P:Microsoft.VisualBasic.ComponentModel.BufferedStream.EndRead"/>之后，这个函数将不会返回任何值
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Ranges.OrderSelector`1.Desc">
      <summary>
        是否为降序排序?
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.OrderSelector`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
      <summary>

      </summary>
      <param name="source"></param>
      <param name="asc">
        当这个参数为真的时候为升序排序
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.OrderSelector`1.SelectUntilGreaterThan(`0)">
      <summary>
        直到当前元素大于指定值
      </summary>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.OrderSelector`1.SelectUntilLessThan(`0)">
      <summary>
        直到当前元素小于指定值
      </summary>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.OrderSelector`1.FirstGreaterThan(`0)">
      <summary>
        遍历整个列表直到找到第一个大于<paramref name="o"/>的元素，然后函数会返回这第一个元素的index
      </summary>
      <param name="o"></param>
      <returns>
        返回-1表示这个列表之中没有任何元素是大于输入的参数<paramref name="o"/>的
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.Extensions.SymmetricalRange(System.Double)">
      <summary>
        对称的的范围，假若X为正数，那么其为max，而-x为min。假若x为负数，那么-x为max
      </summary>
      <param name="x#"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.Extensions.Parser(System.String,System.Double@,System.Double@)">
      <summary>
        + ``min -> max``
        + ``min—max``
        + ``[min,max]``
        + ``{min,max}``
        + ``(min,max)``
        + ``min,max``
      </summary>
      <param name="exp$"></param>
      <param name="min#"></param>
      <param name="max#"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.Extensions.GetScaler(Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange)">
      <summary>
        返回一个实数区间的范围百分比的生成函数：``[0-1]``之间
      </summary>
      <param name="range"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.Extensions.RangeTransform(System.Collections.Generic.IEnumerable{System.Double},Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange)">
      <summary>
        将目标区间内的任意实数全部转换为<paramref name="to"/>区间内的实数
      </summary>
      <param name="from"></param>
      <param name="[to]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.Extensions.RangeTransform(System.Collections.Generic.IEnumerable{System.Int32},Microsoft.VisualBasic.ComponentModel.Ranges.IntRange)">
      <summary>
        将目标区间内的任意实数全部转换为<paramref name="to"/>区间内的实数
      </summary>
      <param name="from"></param>
      <param name="[to]"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Ranges.IRange`1.Min">
      <summary>
        Minimum value
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Ranges.IRange`1.Max">
      <summary>
        Maximum value
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Ranges.IRanges`1">
      <summary>
        Represents a generic range with minimum and maximum values
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IRanges`1.IsInside(`0)">
      <summary>
        Check if the specified value is inside this range
      </summary>
      <param name="x">Value to check</param>
      <returns>
        <b>True</b> if the specified value is inside this range or
        <b>false</b> otherwise.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IRanges`1.IsInside(Microsoft.VisualBasic.ComponentModel.Ranges.IRanges{`0})">
      <summary>
        Check if the specified range is inside this range
      </summary>
      <param name="range">Range to check</param>
      <returns>
        <b>True</b> if the specified range is inside this range or
        <b>false</b> otherwise.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IRanges`1.IsOverlapping(Microsoft.VisualBasic.ComponentModel.Ranges.IRanges{`0})">
      <summary>
        Check if the specified range overlaps with this range
      </summary>
      <param name="range">Range to check for overlapping</param>
      <returns>
        <b>True</b> if the specified range overlaps with this range or
        <b>false</b> otherwise.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange">
      <summary>
        Represents a double range with minimum and maximum values
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.Min">
      <summary>
        Minimum value
      </summary>

    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.Max">
      <summary>
        Maximum value
      </summary>

    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.Length">
      <summary>
        Length of the range (deffirence between maximum and minimum values)
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.#ctor(System.Double,System.Double)">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange"/> class
      </summary>

      <param name="min">Minimum value of the range</param>
      <param name="max">Maximum value of the range</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.#ctor(System.Double[])">
      <summary>
        从一个任意的实数数组之中构建出一个实数区间范围
      </summary>
      <param name="data"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.#ctor(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
        从一个任意的实数向量之中构建出一个实数区间范围
      </summary>
      <param name="vector"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.#ctor(Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange)">
      <summary>
        Value copy
      </summary>
      <param name="range"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.ToString">
      <summary>

      </summary>
      <returns></returns>
      <remarks>
        因为进行json序列化的话，因为这个实现了<see cref="T:System.Collections.Generic.IEnumerable`1"/>接口，但是并没有实现Add方法，
        所以会出错，这里取消使用json来生成<see cref="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.ToString"/>函数的结果
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.IsInside(System.Double)">
      <summary>
        Check if the specified value is inside this range
      </summary>

      <param name="x">Value to check</param>

      <returns>
        <b>True</b> if the specified value is inside this range or
        <b>false</b> otherwise.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.IsInside(Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange)">
      <summary>
        Check if the specified <paramref name="range"/> is inside this range.
        (如果函数参数<paramref name="range"/>在当前的这个range之中，则返回真)
      </summary>
      <param name="range">Range to check</param>
      <returns>
        + <b>True</b> if the specified input <paramref name="range"/> parameter is inside this range or
        + <b>false</b> otherwise.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.IsOverlapping(Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange)">
      <summary>
        Check if the specified range overlaps with this range
      </summary>

      <param name="range">Range to check for overlapping</param>

      <returns>
        <b>True</b> if the specified range overlaps with this range or
        <b>false</b> otherwise.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.op_Multiply(Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange,System.Double)">
      <summary>
        Scale numeric range
      </summary>
      <param name="range"></param>
      <param name="factor#"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.Enumerate(System.Int32)">
      <summary>
        这个函数需要通过一个返回结果的元素个数参数来计算出step步长
      </summary>
      <param name="n%">所返回来的数组的元素的个数</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.ScaleMapping(System.Double,Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange)">
      <summary>
        Transform a numeric value in this <see cref="T:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange"/> into
        target numeric range: ``<paramref name="valueRange"/>``.
        (将当前的范围内的一个实数映射到另外的一个范围内的实数区间之中)
      </summary>
      <param name="x#">
        A numeric value in this <see cref="T:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange"/>
      </param>
      <param name="valueRange"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange">
      <summary>
        Represents an <see cref="T:System.Int32"/> range with minimum and maximum values
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.Min">
      <summary>
        Minimum value
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.Max">
      <summary>
        Maximum value
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.Length">
      <summary>
        Length of the range (deffirence between maximum and minimum values)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.#ctor(System.Int32,System.Int32)">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange"/> class
      </summary>

      <param name="min">Minimum value of the range</param>
      <param name="max">Maximum value of the range</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.ToString">
      <summary>

      </summary>
      <returns></returns>
      <remarks>
        <see cref="M:Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange.ToString"/>
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.IsInside(System.Int32)">
      <summary>
        Check if the specified value ``<paramref name="x"/>`` is inside this range
      </summary>
      <param name="x">Value to check</param>
      <returns>
        <b>True</b> if the specified value is inside this range or
        <b>false</b> otherwise.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.IsInside(Microsoft.VisualBasic.ComponentModel.Ranges.IntRange)">
      <summary>
        Check if the specified range is inside this range
      </summary>

      <param name="range">Range to check</param>

      <returns>
        <b>True</b> if the specified range is inside this range or
        <b>false</b> otherwise.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.IsOverlapping(Microsoft.VisualBasic.ComponentModel.Ranges.IntRange)">
      <summary>
        Check if the specified range overlaps with this range
      </summary>

      <param name="range">Range to check for overlapping</param>

      <returns>
        <b>True</b> if the specified range overlaps with this range or
        <b>false</b> otherwise.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.ScaleMapping(System.Int32,Microsoft.VisualBasic.ComponentModel.Ranges.IntRange)">
      <summary>
        Transform a numeric value in this <see cref="T:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange"/> into
        target numeric range: ``<paramref name="valueRange"/>``.
        (将当前的范围内的一个实数映射到另外的一个范围内的实数区间之中)
      </summary>
      <param name="x#"></param>
      <param name="valueRange"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Ranges.IntRange.GetEnumerator">
      <summary>
        枚举出这个数值范围内的所有整数值，步长为1
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IniFile">
      <summary>
        Ini file I/O handler
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IniFile.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
      <summary>
        Write a string value into a specific section in a specifc ini profile.(在初始化文件指定小节内设置一个字串)
      </summary>
      <param name="section">
        <see cref="T:System.String"/>，要在其中写入新字串的小节名称。这个字串不区分大小写
      </param>
      <param name="key">
        <see cref="T:System.String"/>，要设置的项名或条目名。这个字串不区分大小写。
        用<see cref="F:Microsoft.VisualBasic.Constants.vbNullString"/>可删除这个小节的所有设置项
      </param>
      <param name="val">
        <see cref="T:System.String"/>，指定为这个项写入的字串值。用<see cref="F:Microsoft.VisualBasic.Constants.vbNullString"/>表示删除这个项现有的字串
      </param>
      <param name="filePath">
        <see cref="T:System.String"/>，初始化文件的名字。如果没有指定完整路径名，则windows会在windows目录查找文件。
        如果文件没有找到，则函数会创建它
      </param>
      <returns>
        Long，非零表示成功，零表示失败。会设置<see cref="M:Microsoft.VisualBasic.Win32.GetLastErrorAPI.GetLastError"/>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IniFile.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
      <summary>
        为初始化文件中指定的条目取得字串
      </summary>
      <param name="section">
        String，欲在其中查找条目的小节名称。这个字串不区分大小写。如设为vbNullString，就在lpReturnedString
        缓冲区内装载这个ini文件所有小节的列表。
      </param>
      <param name="key">
        String，欲获取的项名或条目名。这个字串不区分大小写。如设为vbNullString，就在lpReturnedString
        缓冲区内装载指定小节所有项的列表
      </param>
      <param name="def">String，指定的条目没有找到时返回的默认值。可设为空（""）</param>
      <param name="retVal">String，指定一个字串缓冲区，长度至少为nSize</param>
      <param name="size">Long，指定装载到lpReturnedString缓冲区的最大字符数量</param>
      <param name="filePath">
        String，初始化文件的名字。如没有指定一个完整路径名，windows就在Windows目录中查找文件
      </param>
      <returns>
        Long，复制到lpReturnedString缓冲区的字节数量，其中不包括那些NULL中止字符。如lpReturnedString
        缓冲区不够大，不能容下全部信息，就返回nSize-1（若lpApplicationName或lpKeyName为NULL，则返回nSize-2）
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IniFile.#ctor(System.String)">
      <summary>
        Open a ini file handle.
      </summary>
      <param name="INIPath"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.Inf.ClassName">
      <summary>
        定义在Ini配置文件之中的Section的名称
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.ClassName.#ctor(System.String)">
      <summary>
        Defines the section name in the ini profile data.(定义在Ini配置文件之中的Section的名称)
      </summary>
      <param name="name"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.Inf.ClassMapper">
      <summary>
        使用这个属性来标记需要进行序列化的对象属性: <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute"/>
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.ClassMapper.MapParser(System.Type)">
      <summary>
        Get mapping data, includes section name and keys
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.ClassMapper.ClassWriter``1(Microsoft.VisualBasic.ComponentModel.Settings.Inf.IniFile)">
      <summary>
        Read data from ini file.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="ini"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.ClassMapper.LoadIni``1(System.String)">
      <summary>
        Load a ini section profile data from a ini file.
      </summary>
      <typeparam name="T">The section mapper</typeparam>
      <param name="path">*.ini file</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.ClassMapper.WriteClass``1(``0,System.String)">
      <summary>
        Write ini section into data file.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x">A section class in the ini profile file.</param>
      <param name="ini"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IniMapIO">
      <summary>
        The path parameter can be shortcut by method <see cref="M:Microsoft.VisualBasic.Language.UnixBash.FileSystem.PathMapper.GetMapPath(System.String)"/>.
        additional, using ``@fileName`` for using <see cref="M:Microsoft.VisualBasic.App.GetFile(System.String)"/> API.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IniMapIO.#ctor(System.String)">
      <summary>
        The path parameter can be shortcut by method <see cref="M:Microsoft.VisualBasic.Language.UnixBash.FileSystem.PathMapper.GetMapPath(System.String)"/>
      </summary>
      <param name="path"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IOProvider">
      <summary>
        在这个模块之中提供了.NET对象与``*.ini``配置文件之间的相互映射的序列化操作
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IOProvider.WriteProfile``1(``0,System.String)">
      <summary>
        将目标对象写为``*.ini``文件
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IOProvider.WriteProfile``1(``0)">
      <summary>
        属性的类型需要定义<see cref="T:Microsoft.VisualBasic.ComponentModel.Settings.Inf.ClassName"/>，Section类型里面的属性还需要
        定义<see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.DataFrameColumnAttribute"/>，否则将不会将对应的属性的值
        写入到ini文件之中。
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.IOProvider.LoadProfile``1(System.String)">
      <summary>
        从指定的``*.ini``文件之中加载配置数据
      </summary>
      <typeparam name="T"></typeparam>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.Section.SetValue(System.String,System.String)">
      <summary>
        不存在则自动添加
      </summary>
      <param name="Name"></param>
      <param name="value"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.Inf.INIProfile">
      <summary>
        Wrapper class for *.ini and *.inf configure file.(可能文件中的注释行会受到影响，所以请尽量使用本类型中的两个静态函数来操作INI文件)
      </summary>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Inf.INIProfile.GetValue(System.String,System.String,System.String)">
      <summary>
        Get the value from a specific section/key in a file of path
      </summary>
      <param name="path"></param>
      <param name="key"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.IniExtensions">
      <summary>
        读写Ini文件的拓展
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.IniExtensions.WriteIni``1(Microsoft.VisualBasic.ComponentModel.Settings.IProfile,System.String)">
      <summary>
        The section name of the profile data is the type name
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <param name="path"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.IniExtensions.LoadIni``1(System.String)">
      <summary>
        The section name of the profile data is the type name
      </summary>
      <typeparam name="T"></typeparam>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.ConfigEngine">
      <summary>
        只包含有对数据映射目标对象的属性读写，并不包含有文件数据的读写操作
      </summary>

    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Settings.ConfigEngine._SettingsData">
      <summary>
        所映射的数据源
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Settings.ConfigEngine.ProfileItemCollection">
      <summary>
        键名都是小写的
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Settings.ConfigEngine.AllItems">
      <summary>
        List all of the available settings nodes in this profile data session.
        (枚举出当前配置会话之中的所有可用的配置节点)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.ConfigEngine.ExistsNode(System.String)">
      <summary>
        大小写不敏感
      </summary>
      <param name="Name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.ConfigEngine.Set(System.String,System.String)">
      <summary>
        请注意，<paramref name="name"/>必须是小写的
      </summary>
      <param name="Name">The name of the configuration entry should be in lower case.</param>
      <param name="Value"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.ConfigEngine.View(System.String)">
      <summary>
        假若函数参数<paramref name="name"/>为空，则函数输出所有的变量的值，请注意，这个函数并不在终端上面显示任何消息
      </summary>
      <param name="name">假若本参数为空，则函数输出所有的变量的值，大小写不敏感的</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.ConfigEngine.GetSettingsNode(System.String)">
      <summary>
        大小写不敏感的
      </summary>
      <param name="Name"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Settings.BindMapping.AsOutString">
      <summary>
        打印在终端窗口上面的字符串
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.BindMapping.IsFsysValid">
      <summary>
        这个方法只是针对<see cref="F:Microsoft.VisualBasic.ComponentModel.Settings.ValueTypes.File"/>和<see cref="F:Microsoft.VisualBasic.ComponentModel.Settings.ValueTypes.Directory"/>这两种类型而言才有效的
        对于其他的类型数据，都是返回False
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.IProfile">
      <summary>
        具备有保存数据功能的可配置数据文件的基本定义
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Settings.IProfile.FilePath">
      <summary>
        本属性不能够被设置为只读属性是因为 Settings.Settings(Of IProfile).LoadFile 函数的需要
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.ValueTypes">
      <summary>
        这个并不是指宿主属性的数据类型，而是指代这一数据类型所代表的具体的实际对象
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Settings.ValueTypes.Directory">
      <summary>
        这个字符串的值是一个文件夹
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Settings.ValueTypes.File">
      <summary>
        这个字符串的值是一个文件的路径
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Settings.ValueTypes.Text">
      <summary>
        普通的文本字符串
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Settings.ValueTypes.Double">
      <summary>
        带有小数的数值
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Settings.ValueTypes.Integer">
      <summary>
        整数
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.ProfileItem">
      <summary>
        The simple configuration mapping node in the current profile data, the data type of this node
        object should be just the simplest data type such as String, Integer, Long, Double, Boolean.
        (当前的配置节点为一个简单节点，即目标属性的属性值类型的字符串，数字或者逻辑值等最基本的数据类型)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Settings.ProfileItem.Type">
      <summary>
        默认的数据类型是字符串类型
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.ProfileItem.#ctor(System.String,System.String)">
      <summary>
        Initialize a node in the settings xml document.
      </summary>
      <param name="NodeName">The name of the node in the document xml file</param>
      <param name="NodeDescription">The brief introduction information about this profile node.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Settings.ProfileNodeItem">
      <summary>
        当前的配置节点为一个复杂数据类型的配置节点，即目标属性的属性类型为一个Class对象
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.SimpleConfig.ToString">
      <summary>
        Display <see cref="P:Microsoft.VisualBasic.ComponentModel.Settings.SimpleConfig.Name"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.SimpleConfig.TryParse``2(System.Boolean,System.Boolean)">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="TConfig"></typeparam>
      <param name="canRead">向文件之中写数据的时候，需要设置为真</param>
      <param name="canWrite">从文件之中读取数据的时候，需要设置为真</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.SimpleConfig.GenerateConfigurations``1(``0)">
      <summary>
        从类型实体生成配置文件数据
      </summary>
      <typeparam name="T"></typeparam>
      <param name="target"></param>
      <returns></returns>
      <remarks>类型实体之中的简单属性，只要具备可读属性即可被解析出来</remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Settings.Settings`1.SettingsData">
      <summary>
        The target object instance that provides the data source for this config engine.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Settings`1.#ctor(`0)">
      <summary>
        从配置数据的实例对象创建配置映射
      </summary>
      <param name="config"></param>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Settings`1.LoadFile(System.String,System.Action{`0,System.String})">
      <summary>

      </summary>
      <param name="XmlFile">目标配置文件的Xml文件的文件名</param>
      <returns>可以调用的配置项的数目，解析失败则返回0</returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Settings`1.Load(`0)">
      <summary>
        使用<see cref="T:Microsoft.VisualBasic.ComponentModel.Settings.ProfileItem"/>来标记想要作为变量的属性
      </summary>
      <param name="Data"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.SingletonHolder`1">
      <summary>
        An Interface for the SingletonHolder Class.(存储单体模式的对象实例)
      </summary>
      <typeparam name="T">泛型T必须是含有一个无参数的构造函数的</typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.SingletonHolder`1.Instance">
      <summary>
        目标类型的唯一单个实例
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.MapsHelper`1">
      <summary>
        其实这个对象就是字典查询的一个简化操作而已
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Map`2.Key">
      <summary>
        The map source
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Map`2.Maps">
      <summary>
        The mapped target value.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Map`2.IMap">
      <summary>
        与<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IKeyValuePairObject`2"/>相比，这个类型更加倾向于特定化的描述两个对象之间的一一对应关系
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.IDMap">
      <summary>
        字符串类型的映射
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.IDMap.Key">
      <summary>

      </summary>
      <returns></returns>
      <remarks>
        虽然说这个对象也实现了<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.INamedValue"/>接口，但是Key也可能是会出现重复的
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.IDMap.TSV">
      <summary>
        将这个映射转换为tsv文件之中的一行数据
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.IDMap.ParseTsvFile(System.String,System.Boolean,Microsoft.VisualBasic.ComponentModel.IDMap@)">
      <summary>
        将TSV文件之中的数据行解析为IDMapping结果
      </summary>
      <param name="path$"></param>
      <param name="haveHeader"></param>
      <param name="header"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.TagData.TagData`2">
      <summary>
        Target value have a specific tag key.
      </summary>
      <typeparam name="T">The type of the tag key</typeparam>
      <typeparam name="V">The type of the value data</typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.TagData.TagData`2.Key">
      <summary>
        ``<see cref="P:Microsoft.VisualBasic.ComponentModel.TagData.TagData`2.Tag"/> -> <see cref="M:Microsoft.VisualBasic.Serialization.JSON.JsonContract.GetJson``1(``0,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Type})"/>``
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.TagData.TagData`2.Tag">
      <summary>
        Target value have this specific tag data.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.TagData.TagData`2.TagStr">
      <summary>
        默认都有一个字符串类型的标签用于保存其他的数据，但是主要还是使用``<see cref="P:Microsoft.VisualBasic.ComponentModel.TagData.TagData`2.Tag"/>``属性来进行标记
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.TagData.TagData`2.op_Explicit(Microsoft.VisualBasic.ComponentModel.TagData.TagData{`0,`1})~System.Tuple{`0,`1}">
      <summary>
        将这个标签数据转换为``元组``类型
      </summary>
      <param name="r"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.TagData.NumericTagged`1">
      <summary>
        Almost equals to <see cref="T:Microsoft.VisualBasic.ComponentModel.TagData.DoubleTagged`1"/>, but this object is a structure type.
        (作用几乎等同于<see cref="T:Microsoft.VisualBasic.ComponentModel.TagData.DoubleTagged`1"/>，只不过这个是Structure类型，开销会小一些)
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.TagData.IntegerTagged`1">
      <summary>
        使用一个整形数作为目标对象值的标签信息
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.TagData.DoubleTagged`1">
      <summary>
        使用一个实数作为目标对象值的标签信息
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.TagData.LongTagged`1">
      <summary>
        使用一个长整形数作为目标对象值的标签信息
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.ISaveHandle">
      <summary>
        This is a file object which have a handle to save its data to the filesystem.(这是一个带有文件数据保存方法的文件模型)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.ISaveHandle.Save(System.String,System.Text.Encoding)">
      <summary>
        Handle for saving the file data.(保存文件的方法)
      </summary>
      <param name="path">The file path that will save data to.(进行文件数据保存的文件路径)</param>
      <param name="encoding">The text encoding value for the text document.(文本文档的编码格式)</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.IFileReference">
      <summary>
        表示一个对文件的引用接口
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.IFileReference.FilePath">
      <summary>
        进行文件引用的路径
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.LazyLoader`2">
      <summary>
        当所需要进行加载的数据的量非常大的时候，则可以使用本方法进行延时按需加载
      </summary>
      <typeparam name="TOutput"></typeparam>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.LazyLoader`2.Value">
      <summary>
        Gets the value from the data source <see cref="P:Microsoft.VisualBasic.ComponentModel.LazyLoader`2.URL"></see>
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.LazyLoader`2.URL">
      <summary>
        The data source.(数据源)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.LazyLoader`2.WriteData(Microsoft.VisualBasic.ComponentModel.LazyLoader{`0,`1}.DataWriteMethod)">
      <summary>
        Write the data back onto the filesystem.(将数据回写进入文件系统之中)
      </summary>
      <param name="WriteMethod"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Lazy`1">
      <summary>
        The layze loader.
      </summary>
      <typeparam name="TOut"></typeparam>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Lazy`1.__factory">
      <summary>
        the data source handler.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.Lazy`1._cache">
      <summary>
        The output result cache data.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Lazy`1.Value">
      <summary>
        Get cache data if it exists, or the data will be loaded first.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Lazy`1.#ctor(System.Func{`0})">
      <summary>
        Init this lazy loader with the data source handler.
      </summary>
      <param name="valueFactory">
        The data source provider handler.
      </param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Binding`2">
      <summary>
        Functioning the same as the <see cref="T:System.Collections.Generic.KeyValuePair`2"/>, but with more specific on the name.
        <see cref="T:System.Collections.Generic.KeyValuePair`2"/> its name is too generic.
        (作用与<see cref="T:System.Collections.Generic.KeyValuePair`2"/>类似，只不过类型的名称更加符合绑定的描述)
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="K"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Binding`2.IsEmpty">
      <summary>
        If the field <see cref="F:Microsoft.VisualBasic.ComponentModel.Binding`2.Bind"/> and <see cref="F:Microsoft.VisualBasic.ComponentModel.Binding`2.Target"/> are both nothing, then this binding is empty.
        (当<see cref="F:Microsoft.VisualBasic.ComponentModel.Binding`2.Bind"/>以及<see cref="F:Microsoft.VisualBasic.ComponentModel.Binding`2.Target"/>都同时为空值的时候这个参数才会为真)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Binding`2.Tuple">
      <summary>
        Convert this binding to tuple
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Binding`2.op_Explicit(Microsoft.VisualBasic.ComponentModel.Binding{`0,`1})~System.Tuple{`0,`1}">
      <summary>
        Implicit convert this binding as the <see cref="T:System.Tuple`2"/>
      </summary>
      <param name="b"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.RelayCommand">
      <summary>
        Taken from http://msdn.microsoft.com/en-us/magazine/dd419663.aspx
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.TimeInterval.ToString">
      <summary>
        (dd hh:mm:ss) 输出可以被MySQL数据库所识别的字符串格式
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.Href">
      <summary>
        Resource link data.
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Href.ResourceId">
      <summary>
        资源的名称
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Href.Value">
      <summary>
        The relative path of the target resource object in the file system.(资源对象在文件系统之中的相对路径)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.Href.Annotations">
      <summary>
        注释数据
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.Href.GetFullPath(System.String)">
      <summary>
        获取<see cref="P:Microsoft.VisualBasic.ComponentModel.Href.Value"></see>所指向的资源文件的完整路径
      </summary>
      <param name="DIR"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.ITextFile">
      <summary>
        Object model of the text file doucment.(文本文件的对象模型，这个文本文件对象在Disposed的时候会自动保存其中的数据)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.ITextFile.FilePath">
      <summary>
        The storage filepath of this text file.
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.ComponentModel.ITextFile.getPath(System.String)">
      <summary>
        Automatically determine the path paramater: If the target path is empty, then return
        the file object path <see cref="P:Microsoft.VisualBasic.ComponentModel.ITextFile.FilePath"></see> property, if not then return the
        <paramref name="path"></paramref> directly.
        (当<paramref name="path"></paramref>的值不为空的时候，本对象之中的路径参数将会被替换，反之返回本对象的路径参数)
      </summary>
      <param name="path">用户所输入的文件路径</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.IAddressOf">
      <summary>
        This object gets a object handle value to indicated that the position this object exists
        in the list collection structure.
        (这个对象具有一个用于指明该对象在列表对象中的位置的对象句柄值)
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.IAddress`1">
      <summary>
        This object gets a object handle value to indicated that the position this object exists
        in the list collection structure.
        (这个对象具有一个用于指明该对象在列表对象中的位置的对象句柄值)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.IAddress`1.Address">
      <summary>
        The ID that this object in a list instance.
        (本对象在一个列表对象中的位置索引号)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ComponentModel.HashList`1">
      <summary>

      </summary>
      <typeparam name="T">
        Class object that can be dispose by the system automatically and the class object that should
        have a handle property to specific its position in this list class.
        (能够被系统所自动销毁的对象类型，并且该类型的对象必须含有一个Handle属性来指明其在本列表中的位置)
      </typeparam>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.ComponentModel.HashList`1.list">
      <summary>
        Object instances data physical storage position, element may be null after
        remove a specify object handle.
        (列表中的元素对象实例的实际存储位置，当对象元素从列表之中被移除了之后，其将会被销毁)
      </summary>
      <remarks>
        即与只读属性'ListData'相比，这个字段的列表中可能含有空引用的元素对象.
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.HashList`1.Count">
      <summary>
        返回所有不为空的元素的数量，因为本列表的存储特性的关系，为空的位置实际上是没有值的，所以不会返回这些为空的值的统计数量
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComponentModel.HashList`1.Item(System.Int32)">
      <summary>
        与迭代器<see cref="M:Microsoft.VisualBasic.ComponentModel.HashList`1.GetEnumerator"/>函数所不同的是，迭代器函数返回的都是非空元素，而这个读写属性则是可以直接接触到内部的
      </summary>
      <param name="index%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SetsExtension.ToArray``1(Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        DirectCast
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.SetsExtension.Except(Microsoft.VisualBasic.ComponentModel.DataStructures.Set,Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        差集，函数会从<paramref name="s1"/>集合之中删除<paramref name="s2"/>中共同的元素
      </summary>
      <param name="s1"></param>
      <param name="s2"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SetsExtension.Union(Microsoft.VisualBasic.ComponentModel.DataStructures.Set,Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        就并集
      </summary>
      <param name="s1"></param>
      <param name="s2"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SetsExtension.Intersection(Microsoft.VisualBasic.ComponentModel.DataStructures.Set,Microsoft.VisualBasic.ComponentModel.DataStructures.Set)">
      <summary>
        求交集
      </summary>
      <param name="s1"></param>
      <param name="s2"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SetsExtension.AsSet(System.Collections.IEnumerable)">
      <summary>
        将任意序列转换为集合类型
      </summary>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SetAPI.Intersection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},Microsoft.VisualBasic.SetAPI.GetUid{``0})">
      <summary>
        Performs an intersection of two sets.(求交集，这个函数总是会挑选出<paramref name="s1"/>集合之中的元素的)
      </summary>
      <param name="s1">Any set.</param>
      <param name="s2">Any set.</param>
      <returns>
        A new <see cref="M:Microsoft.VisualBasic.Extensions.Set``1(``0[]@,System.Int32,``0)">Set</see> object that contains the members
        that were common to both of the input sets.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SetAPI.Intersection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},Microsoft.VisualBasic.SetAPI.IEquals{``0})">
      <summary>
        Performs an intersection of two sets.(求交集)
      </summary>
      <param name="s1">Any set.</param>
      <param name="s2">Any set.</param>
      <returns>
        A new <see cref="M:Microsoft.VisualBasic.Extensions.Set``1(``0[]@,System.Int32,``0)">Set</see> object that contains the members
        that were common to both of the input sets.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.CopyDirectoryAction.Copy(System.String,System.String)">
      <summary>

      </summary>
      <param name="src$"></param>
      <param name="destination$"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.Includes">
      <summary>
        File includes search tools
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.Includes.Add(System.String)">
      <summary>
        Add includes directory into the search path.
      </summary>
      <param name="DIR"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.Includes.GetPath(System.String)">
      <summary>
        Get the absolutely file path from the includes file's relative path.
      </summary>
      <param name="relPath"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.Extensions">
      <summary>

      </summary>
      <remarks>
        <see cref="T:System.Text.Encoding"/>会和<see cref="T:Microsoft.VisualBasic.Text.Encodings"/>产生冲突，
        使用这个单独的拓展模块，但是位于不同的命名空间来解决这个问题。
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.Extensions.FlushAllLines``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Text.Encoding)">
      <summary>
        Write all object into a text file by using its <see cref="T:System.Object"/> method.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="data"></param>
      <param name="saveTo"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.Extensions.OpenWriter(System.String,System.Text.Encoding,System.String,System.Boolean)">
      <summary>
        Open text file writer, this function will auto handle all things.
      </summary>
      <param name="path">假若路径是指向一个已经存在的文件，则原有的文件数据将会被清空</param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SymLinker.HardLink">
      <summary>
        Provides access to NTFS hard links in .Net.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint">
      <summary>
        Provides access to NTFS junction points in .Net.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.ERROR_NOT_A_REPARSE_POINT">
      <summary>
        The file or directory is not a reparse point.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.ERROR_REPARSE_ATTRIBUTE_CONFLICT">
      <summary>
        The reparse point attribute cannot be set because it conflicts with an existing attribute.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.ERROR_INVALID_REPARSE_DATA">
      <summary>
        The data present in the reparse point buffer is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.ERROR_REPARSE_TAG_INVALID">
      <summary>
        The tag present in the reparse point buffer is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.ERROR_REPARSE_TAG_MISMATCH">
      <summary>
        There is a mismatch between the tag specified in the request and the tag present in the reparse point.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.FSCTL_SET_REPARSE_POINT">
      <summary>
        Command to set the reparse point data block.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.FSCTL_GET_REPARSE_POINT">
      <summary>
        Command to get the reparse point data block.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.FSCTL_DELETE_REPARSE_POINT">
      <summary>
        Command to delete the reparse point data base.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.IO_REPARSE_TAG_MOUNT_POINT">
      <summary>
        Reparse point tag used to identify mount points and junction points.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.NonInterpretedPathPrefix">
      <summary>
        This prefix indicates to NTFS that the path is to be treated as a non-interpreted
        path in the virtual file system.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.REPARSE_DATA_BUFFER.ReparseTag">
      <summary>
        Reparse point tag. Must be a Microsoft reparse point tag.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.REPARSE_DATA_BUFFER.ReparseDataLength">
      <summary>
        Size, in bytes, of the data after the Reserved member. This can be calculated by:
        (4 * sizeof(ushort)) + SubstituteNameLength + PrintNameLength +
        (namesAreNullTerminated ? 2 * sizeof(char) : 0);
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.REPARSE_DATA_BUFFER.Reserved">
      <summary>
        Reserved; do not use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.REPARSE_DATA_BUFFER.SubstituteNameOffset">
      <summary>
        Offset, in bytes, of the substitute name string in the PathBuffer array.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.REPARSE_DATA_BUFFER.SubstituteNameLength">
      <summary>
        Length, in bytes, of the substitute name string. If this string is null-terminated,
        SubstituteNameLength does not include space for the null character.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.REPARSE_DATA_BUFFER.PrintNameOffset">
      <summary>
        Offset, in bytes, of the print name string in the PathBuffer array.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.REPARSE_DATA_BUFFER.PrintNameLength">
      <summary>
        Length, in bytes, of the print name string. If this string is null-terminated,
        PrintNameLength does not include space for the null character.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.REPARSE_DATA_BUFFER.PathBuffer">
      <summary>
        A buffer containing the unicode-encoded path string. The path string contains
        the substitute name string and print name string.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.Create(System.String,System.String,System.Boolean)">
      <summary>
        Creates a junction point from the specified directory to the specified target directory.
      </summary>
      <remarks>
        Only works on NTFS.
      </remarks>
      <param name="junctionPoint">The junction point path</param>
      <param name="targetDir">The target directory</param>
      <param name="overwrite">If true overwrites an existing reparse point or empty directory</param>
      <exception cref="T:System.IO.IOException">
        Thrown when the junction point could not be created or when
        an existing directory was found and <paramref name="overwrite" /> if false
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.Delete(System.String)">
      <summary>
        Deletes a junction point at the specified source directory along with the directory itself.
        Does nothing if the junction point does not exist.
      </summary>
      <remarks>
        Only works on NTFS.
      </remarks>
      <param name="junctionPoint">The junction point path</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.Exists(System.String)">
      <summary>
        Determines whether the specified path exists and refers to a junction point.
      </summary>
      <param name="path">The junction point path</param>
      <returns>True if the specified path represents a junction point</returns>
      <exception cref="T:System.IO.IOException">
        Thrown if the specified path is invalid
        or some other error occurs
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SymLinker.JunctionPoint.GetTarget(System.String)">
      <summary>
        Gets the target of the specified junction point.
      </summary>
      <remarks>
        Only works on NTFS.
      </remarks>
      <param name="junctionPoint">The junction point path</param>
      <returns>The target of the junction point</returns>
      <exception cref="T:System.IO.IOException">
        Thrown when the specified path does not
        exist, is invalid, is not a junction point, or some other error occurs
      </exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SymLinker.SymbolicLink">
      <summary>

      </summary>
      <remarks>https://github.com/amd989/Symlinker</remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.SymbolicLink.shareModeAll">
      <summary>
        Read, Write, Delete
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SymLinker.SymbolicLink.symLinkTag">
      <summary>

      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.Directory">
      <summary>
        A wrapper object for the processing of relative file path.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.Directory.#ctor(System.String)">
      <summary>
        Construct a directory object from the specific Dir path value.
      </summary>
      <param name="DIR">Target directory path</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.Directory.GetFullPath(System.String)">
      <summary>
        Gets the full path of the target file based on the path relative to this directory object.
      </summary>
      <param name="file">
        The relative path of the target file, and this parameter is also compatible with absolute file path.
        (相对路径)
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.Directory.IsAbsolutePath(System.String)">
      <summary>
        Determined that the input file path is a absolute path or not?
      </summary>
      <param name="file"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.Directory.CopyTo(System.String,System.Progress{System.String})">
      <summary>

      </summary>
      <param name="target">The directory path of target folder.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.Directory.CreateDirectory(System.String)">
      <summary>
        Creates a directory.
      </summary>
      <param name="junctionPoint">Name and location of the directory.</param>
      <remarks>
        Exceptions:
        T:System.ArgumentException:
        The directory name is malformed. For example, it contains illegal characters
        or is only white space.

        T:System.ArgumentNullException:
        directory is Nothing or an empty string.

        T:System.IO.PathTooLongException:
        The directory name is too long.

        T:System.NotSupportedException:
        The directory name is only a colon (:).

        T:System.IO.IOException:
        The parent directory of the directory to be created is read-only

        T:System.UnauthorizedAccessException:
        The user does not have permission to create the directory.
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.NetFile.MapNetFile(System.String)">
      <summary>
        将网络文件映射为本地文件，这个可以同时兼容http或者本地文件路径
      </summary>
      <param name="url"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.NetFile.GetMapPath(System.String)">
      <summary>
        网络文件转换为本地文件路径
      </summary>
      <param name="url"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Math.Statistics.DataSample`1">
      <summary>
        Numeric value statics property.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.Math.Statistics.DataSample`1.Mean">
      <summary>
        The sample average
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Math.Statistics.DataSample`1.SampleSize">
      <summary>
        The sample size
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.Statistics.Linq.CPOLLicense">
      <summary>
        http://www.codeproject.com/Articles/42492/Using-LINQ-to-Calculate-Basic-Statistics
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Statistics.Linq.EnumerableStatsCovariance.Covariance(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}},System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>
        Computes the Covariance of a sequence of nullable System.Decimal values.
      </summary>
      <param name="source">A sequence of nullable System.Decimal values to calculate the Covariance of.</param>
      <param name="other"></param>
      <returns>
        The Covariance of the sequence of values, or null if the source sequence is
        empty or contains only values that are null.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.Correlations.Ranking">
      <summary>
        A **ranking** is a relationship between a set of items such that, for any two items,
        the first is either 'ranked higher than', 'ranked lower than' or 'ranked equal to'
        the second. In mathematics, this is known as a weak order or total preorder of objects.
        It is not necessarily a total order of objects because two different objects can have
        the same ranking. The rankings themselves are totally ordered. For example, materials
        are totally preordered by hardness, while degrees of hardness are totally ordered.

        > https://en.wikipedia.org/wiki/Ranking
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.Correlations.Ranking.Strategies">
      <summary>
        ###### Strategies for assigning rankings

        It is not always possible to assign rankings uniquely. For example, in a race
        or competition two (or more) entrants might tie for a place in the ranking.
        When computing an ordinal measurement, two (or more) of the quantities being
        ranked might measure equal. In these cases, one of the strategies shown below
        for assigning the rankings may be adopted. A common shorthand way to distinguish
        these ranking strategies is by the ranking numbers that would be produced for
        four items, with the first item ranked ahead of the second and third (which
        compare equal) which are both ranked ahead of the fourth.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Ranking.ModifiedCompetitionRanking``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <summary>
        ###### Modified competition ranking ("1334" ranking)

        Sometimes, competition ranking is done by leaving the gaps in the ranking numbers before the sets
        of equal-ranking items (rather than after them as in standard competition ranking).[where?] The
        number of ranking numbers that are left out in this gap remains one less than the number of items that
        compared equal. Equivalently, each item's ranking number is equal to the number of items ranked equal
        to it or above it. This ranking ensures that a competitor only comes second if they score higher than
        all but one of their opponents, third if they score higher than all but two of their opponents, etc.

        Thus if A ranks ahead of B and C (which compare equal) which are both ranked head of D, then A gets
        ranking number 1 ("first"), B gets ranking number 3 ("joint third"), C also gets ranking number 3
        ("joint third") and D gets ranking number 4 ("fourth"). In this case, nobody would get ranking number
        2 ("second") and that would be left as a gap.
      </summary>
      <typeparam name="C"></typeparam>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Ranking.StandardCompetitionRanking``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <summary>
        ###### Standard competition ranking ("1224" ranking)

        In competition ranking, items that compare equal receive the same ranking number, and then a gap
        is left in the ranking numbers. The number of ranking numbers that are left out in this gap is
        one less than the number of items that compared equal. Equivalently, each item's ranking number
        is 1 plus the number of items ranked above it. This ranking strategy is frequently adopted for
        competitions, as it means that if two (or more) competitors tie for a position in the ranking,
        the position of all those ranked below them is unaffected (i.e., a competitor only comes second if
        exactly one person scores better than them, third if exactly two people score better than them,
        fourth if exactly three people score better than them, etc.).

        Thus if A ranks ahead of B and C (which compare equal) which are both ranked ahead of D, then A
        gets ranking number 1 ("first"), B gets ranking number 2 ("joint second"), C also gets ranking
        number 2 ("joint second") and D gets ranking number 4 ("fourth").
      </summary>
      <typeparam name="C"></typeparam>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Ranking.DenseRanking``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <summary>
        ###### Dense ranking ("1223" ranking)

        In dense ranking, items that compare equal receive the same ranking number, and the next item(s)
        receive the immediately following ranking number. Equivalently, each item's ranking number is 1
        plus the number of items ranked above it that are distinct with respect to the ranking order.

        Thus if A ranks ahead of B and C (which compare equal) which are both ranked ahead of D, then A
        gets ranking number 1 ("first"), B gets ranking number 2 ("joint second"), C also gets ranking
        number 2 ("joint second") and D gets ranking number 3 ("third").
      </summary>
      <typeparam name="C"></typeparam>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Ranking.OrdinalRanking``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <summary>
        ###### Ordinal ranking ("1234" ranking)

        In ordinal ranking, all items receive distinct ordinal numbers, including items that compare equal.
        The assignment of distinct ordinal numbers to items that compare equal can be done at random,
        or arbitrarily, but it is generally preferable to use a system that is arbitrary but consistent,
        as this gives stable results if the ranking is done multiple times. An example of an arbitrary but
        consistent system would be to incorporate other attributes into the ranking order (such as
        alphabetical ordering of the competitor's name) to ensure that no two items exactly match.

        With this strategy, if A ranks ahead of B and C (which compare equal) which are both ranked ahead of D,
        then A gets ranking number 1 ("first") and D gets ranking number 4 ("fourth"), and either B gets
        ranking number 2 ("second") and C gets ranking number 3 ("third") or C gets ranking number 2 ("second")
        and B gets ranking number 3 ("third").

        In computer data processing, ordinal ranking is also referred to as "row numbering".
      </summary>
      <typeparam name="C"></typeparam>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Ranking.FractionalRanking``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <summary>
        ###### Fractional ranking ("1 2.5 2.5 4" ranking)

        Items that compare equal receive the same ranking number, which is the mean
        of what they would have under ordinal rankings. Equivalently, the ranking
        number of 1 plus the number of items ranked above it plus half the number
        of items equal to it. This strategy has the property that the sum of the
        ranking numbers is the same as under ordinal ranking. For this reason, it
        is used in computing Borda counts and in statistical tests (see below).

        Thus if A ranks ahead of B and C (which compare equal) which are both ranked
        ahead of D, then A gets ranking number 1 ("first"), B and C each get ranking
        number 2.5 (average of "joint second/third") and D gets ranking number 4
        ("fourth").

        Here is an example: Suppose you have the data set 1.0, 1.0, 2.0, 3.0, 3.0, 4.0, 5.0, 5.0, 5.0.
        The ordinal ranks are 1, 2, 3, 4, 5, 6, 7, 8, 9.
        For v = 1.0, the fractional rank is the average of the ordinal ranks: (1 + 2) / 2 = 1.5.
        In a similar manner, for v = 5.0, the fractional rank is (7 + 8 + 9) / 3 = 8.0.
        Thus the fractional ranks are: 1.5, 1.5, 3.0, 4.5, 4.5, 6.0, 8.0, 8.0, 8.0
      </summary>
      <typeparam name="C"></typeparam>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.Correlations.Correlations">
      <summary>
        计算两个数据向量之间的相关度的大小
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Correlations.JaccardIndex``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{System.Object,System.Object,System.Boolean})">
      <summary>
        The Jaccard index, also known as Intersection over Union and the Jaccard similarity coefficient
        (originally coined coefficient de communauté by Paul Jaccard), is a statistic used for comparing
        the similarity and diversity of sample sets. The Jaccard coefficient measures similarity between
        finite sample sets, and is defined as the size of the intersection divided by the size of the
        union of the sample sets.

        https://en.wikipedia.org/wiki/Jaccard_index
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a"></param>
      <param name="b"></param>
      <param name="equal"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Correlations.SW(System.Double[],System.Double[])">
      <summary>
        Sandelin-Wasserman similarity function.(假若所有的元素都是0-1之间的话，结果除以2可以得到相似度)
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Correlations.KLD(System.Double[],System.Double[])">
      <summary>
        Kullback-Leibler divergence
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Correlations.rankKendallTauBeta(System.Double[],System.Double[])">
      <summary>
        Provides rank correlation coefficient metrics Kendall tau
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
      <remarks>
        https://github.com/felipebravom/RankCorrelation
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Correlations.kendallTauBeta(System.Double[],System.Double[])">
      <summary>
        Provides rank correlation coefficient metrics Kendall tau
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
      <remarks>
        https://github.com/felipebravom/RankCorrelation
      </remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Math.Correlations.Correlations.TINY">
      <summary>
        will regularize the unusual case of complete correlation
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Correlations.GetPearson(System.Double[],System.Double[],System.Double@,System.Double@,System.Double@)">
      <summary>

      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="prob"></param>
      <param name="prob2"></param>
      <param name="z">fisher's z trasnformation</param>
      <returns></returns>
      <remarks>
        checked by Excel
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Correlations.GetPearson(System.Double[],System.Double[])">
      <summary>
        Pearson correlations
      </summary>
      <param name="x#"></param>
      <param name="y#"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.Correlations.Correlations.ICorrelation">
      <summary>
        相关性的计算分析函数
      </summary>
      <param name="X"></param>
      <param name="Y"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Correlations.Spearman(System.Double[],System.Double[])">
      <summary>
        This method should not be used in cases where the data set is truncated; that is,
        when the Spearman correlation coefficient is desired for the top X records
        (whether by pre-change rank or post-change rank, or both), the user should use the
        Pearson correlation coefficient formula given above.
        (斯皮尔曼相关性)
      </summary>
      <param name="X"></param>
      <param name="Y"></param>
      <returns></returns>
      <remarks>
        https://en.wikipedia.org/wiki/Spearman%27s_rank_correlation_coefficient
        checked!
      </remarks>

    </member>
    <member name="T:Microsoft.VisualBasic.Math.Correlations.Correlations.spcc">
      <summary>
        计算所需要的临时变量类型
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Math.Correlations.Correlations.spcc.rank">
      <summary>
        排序之后得到的位置
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Math.Correlations.Correlations.spcc.data">
      <summary>
        原始数据
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Math.Correlations.Correlations.spcc.__spccInner.i">
      <summary>
        在序列之中原有的位置
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Correlations.Correlations.CorrelationMatrix(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.Double[]}},Microsoft.VisualBasic.Math.Correlations.Correlations.ICorrelation)">
      <summary>
        输入的数据为一个对象属性的集合，默认的<paramref name="compute"/>计算方法为<see cref="M:Microsoft.VisualBasic.Math.Correlations.Correlations.GetPearson(System.Double[],System.Double[])"/>
      </summary>
      <param name="data">``[ID, properties]``</param>
      <param name="compute">
        Using pearson method as default if this parameter is nothing.
        (默认的计算形式为<see cref="M:Microsoft.VisualBasic.Math.Correlations.Correlations.GetPearson(System.Double[],System.Double[])"/>)
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.NumeralSystem.TranslateDecimal(System.Int32,System.Char[])">
      <summary>
        将十进制数转换到另外的一个数进制
      </summary>
      <param name="d%"></param>
      <param name="alphas"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.MatrixExtensions">
      <summary>
        This class contains methods that perform mathematical operations on matrices.
        Operations currently supported are matrix multiplication and scalar multiplication.

        @author Jean-Francois Larcher-Pelland
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.MatrixExtensions.MatrixMult(System.Double[][],System.Double[][])">
      <summary>
        Multiplies matrices <i>a</i> and <i>b</i> using the brute-force algorithm.
      </summary>
      <param name="a"> The matrix on the left. </param>
      <param name="b"> The matrix on the right. </param>
      <returns> The product of the two matrices. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.MatrixExtensions.ScalarMult(System.Double[][],System.Double)">
      <summary>
        Performs a scalar multiplication on matrix <i>a</i> using scalar value <i>b</i>.
      </summary>
      <param name="a"> The matrix to be multiplied. </param>
      <param name="b"> Scalar value used in the multiplication. </param>
      <returns> The result of the scalar multiplication. </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.Percentage">
      <summary>
        分数，百分比
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Math.Percentage.Numerator">
      <summary>
        分子
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Math.Percentage.Denominator">
      <summary>
        分母
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Math.Percentage.Value">
      <summary>
        <see cref="P:Microsoft.VisualBasic.Math.Percentage.Numerator"></see>/<see cref="P:Microsoft.VisualBasic.Math.Percentage.Denominator"></see>
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Percentage.#ctor(System.Double,System.Double)">
      <summary>
        <paramref name="n"/> / <paramref name="d"/>
      </summary>
      <param name="n"></param>
      <param name="d"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Percentage.TryParse(System.String)">
      <summary>

      </summary>
      <param name="Text">``\d+[/]\d+ \(\d+[%]\)``</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.ScientificNotation">
      <summary>
        科学记数法
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.ScientificNotation.PowerLog10(System.Double,System.Int32)">
      <summary>
        返回零表示比较小的常数
      </summary>
      <param name="x"></param>
      <param name="INF">当位数超过这个值之后将会被判定为非常大或者非常小的一个数</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.ScientificNotation.UsingScientificNotation(System.Double,System.Int32)">
      <summary>
        是否需要科学记数法来格式化？
      </summary>
      <param name="x#"></param>
      <param name="INF%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.ScientificNotation.FormatScientificNotation(System.Double,System.Int32)">
      <summary>
        强制格式化为科学记数法
      </summary>
      <param name="decimal%"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.RandomRange">
      <summary>
        针对负数到正数的range随机数，小数位最多精确到1E-4
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomRange.GetRandom(System.Double,System.Double,System.Int32,System.Boolean)">
      <summary>

      </summary>
      <param name="from"></param>
      <param name="[to]"></param>
      <param name="INF"></param>
      <param name="forceInit">
        True的时候会通过牺牲性能来强制重新实例化随机数发生器来获取足够的随机
      </param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.PreciseRandom">
      <summary>
        主要针对的是非常小的小数（仅适用于Positive Number）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Math.PreciseRandom.Epsilon">
      <summary>
        4.94065645841247E-324
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.PreciseRandom.#ctor(System.Single,System.Single,Microsoft.VisualBasic.Math.IRandomSeeds)">
      <summary>
        最小的精度为``<see cref="F:System.Double.Epsilon"/>=4.94065645841247E-324``
      </summary>
      <param name="digitMin">``10^?``</param>
      <param name="digitMax">``10^?``</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.PreciseRandom.#ctor(System.Double,System.Double,Microsoft.VisualBasic.Math.IRandomSeeds)">
      <summary>

      </summary>
      <param name="from">
        最小的精度为<see cref="F:System.Double.Epsilon"/>
      </param>
      <param name="[to]"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.PreciseRandom.NextNumber">
      <summary>
        获取一个在给定的小数位范围内的随机的数
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.PreciseRandom.NextDouble(Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange)">
      <summary>
        这个方法可能只适用于很小的数，例如1e-100到1e-10这样子的
      </summary>
      <param name="range"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Math.Trigonometric.AtanPrecise">
      <summary>
        通过这个参数来控制计算精度，这个参数值越大，计算精度越高
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Atn(System.Double)">
      <summary>
        Taylor Atan
      </summary>
      <param name="x"></param>
      <returns></returns>
      <remarks>Atan测试没有问题</remarks>>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Sec(System.Double)">
      <summary>
        Secant（正割） ``Sec(X) = 1 / Cos(X)``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Cosec(System.Double)">
      <summary>
        Cosecant（余割） ``Cosec(X) = 1 / Sin(X)``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Cotan(System.Double)">
      <summary>
        Cotangent（余切） ``Cotan(X) = 1 / Tan(X)``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Arcsin(System.Double)">
      <summary>
        Inverse Sine（反正弦）  ``Arcsin(X) = Atn(X / Sqr(-X * X + 1))``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Arccos(System.Double)">
      <summary>
        Inverse Cosine（反余弦）  ``Arccos(X) = Atn(-X / Sqr(-X * X + 1)) + 2 * Atn(1)``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Arcsec(System.Double)">
      <summary>
        Inverse Secant（反正割）  ``Arcsec(X) = Atn(X / Sqr(X * X - 1)) + Sgn((X) - 1) * (2 * Atn(1))``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Arccosec(System.Double)">
      <summary>
        Inverse Cosecant（反余割）  ``Arccosec(X) = Atn(X / Sqr(X * X - 1)) + (Sgn(X) - 1) * (2 * Atn(1))``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Arccotan(System.Double)">
      <summary>
        Inverse Cotangent（反余切）  ``Arccotan(X) = Atn(X) + 2 * Atn(1)``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HSin(System.Double)">
      <summary>
        Hyperbolic Sine（双曲正弦）  ``HSin(X) = (Exp(X) - Exp(-X)) / 2``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HCos(System.Double)">
      <summary>
        Hyperbolic Cosine（双曲余弦）  ``HCos(X) = (Exp(X) + Exp(-X)) / 2``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HTan(System.Double)">
      <summary>
        Hyperbolic Tangent（双曲正切）  ``HTan(X) = (Exp(X) - Exp(-X)) / (Exp(X) + Exp(-X))``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HSec(System.Double)">
      <summary>
        Hyperbolic Secant（双曲正割）  ``HSec(X) = 2 / (Exp(X) + Exp(-X))``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HCosec(System.Double)">
      <summary>
        Hyperbolic Cosecant（双曲余割） ``HCosec(X) = 2 / (Exp(X) - Exp(-X))``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HCotan(System.Double)">
      <summary>
        Hyperbolic Cotangent（双曲余切） ``HCotan(X) = (Exp(X) + Exp(-X)) / (Exp(X) - Exp(-X))``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HArcsin(System.Double)">
      <summary>
        Inverse Hyperbolic Sine（反双曲正弦） ``HArcsin(X) = Log(X + Sqr(X * X + 1))``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HArccos(System.Double)">
      <summary>
        Inverse Hyperbolic Cosine（反双曲余弦） ``HArccos(X) = Log(X + Sqr(X * X - 1))``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Harctan(System.Double)">
      <summary>
        Inverse Hyperbolic Tangent（反双曲正切） ``HArctan(X) = Log((1 + X) / (1 - X)) / 2``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HArcsec(System.Double)">
      <summary>
        Inverse Hyperbolic Secant（反双曲正割） ``HArcsec(X) = Log((Sqr(-X * X + 1) + 1) / X)``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HArccosec(System.Double)">
      <summary>
        Inverse Hyperbolic Cosecant（反双曲余割） ``HArccosec(X) = Log((Sgn(X) * Sqr(X * X + 1) + 1) / X)``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.HArccotan(System.Double)">
      <summary>
        Inverse Hyperbolic Cotangent（反双曲余切）  ``HArccotan(X) = Log((X + 1) / (X - 1)) / 2``
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.ToPoint(System.Double,System.Single,System.Boolean)">
      <summary>

      </summary>
      <param name="r#"></param>
      <param name="alpha!"></param>
      <param name="fromDegree">
        <paramref name="alpha"/>角度参数是否是度为单位，默认是真，即函数会在这里自动转换为弧度
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.GetAngleVector(System.Single,System.Double)">
      <summary>

      </summary>
      <param name="radian">
        ``0 -> 2*<see cref="F:Microsoft.VisualBasic.Math.VBMath.PI"/>``
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.Angle(System.Drawing.PointF)">
      <summary>
        计算结果为角度
      </summary>
      <param name="p"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.ToRadians(System.Double)">
      <summary>
        Converts an angle measured in degrees to an approximately
        equivalent angle measured in radians.  The conversion from
        degrees to radians is generally inexact.
      </summary>
      <param name="angdeg">   an angle, in degrees </param>
      <returns>
        the measurement of the angle {@code angdeg}
        in radians.
        @since   1.2
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Trigonometric.ToDegrees(System.Double)">
      <summary>
        Converts an angle measured in radians to an approximately
        equivalent angle measured in degrees.  The conversion from
        radians to degrees is generally inexact; users should
        <i>not</i> expect {@code cos(toRadians(90.0))} to exactly
        equal {@code 0.0}.
      </summary>
      <param name="angrad">   an angle, in radians </param>
      <returns>
        the measurement of the angle {@code angrad}
        in degrees.
        @since   1.2
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.NumberGroups">
      <summary>
        Simple number vector grouping
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.NumberGroups.Min``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary>
        计算出<paramref name="target"/>集合之众的与<paramref name="v"/>距离最小的元素
        （或者说是匹配度最高的元素）
      </summary>
      <typeparam name="T"></typeparam>
      <param name="target"></param>
      <param name="v"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.NumberGroups.GroupBy(System.Collections.Generic.IEnumerable{System.Double},System.Double)">
      <summary>
        将一维的数据按照一定的偏移量分组输出
      </summary>
      <param name="source"></param>
      <param name="offsets"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.NumberGroups.Groups``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
        按照相邻的两个数值是否在offset区间内来进行简单的分组操作
      </summary>
      <typeparam name="TagObject"></typeparam>
      <param name="source"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Math.Ranks.Ranking`1.Max">
      <summary>
        The sort direction
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Math.Ranks.Ranking`1.Weight">
      <summary>
        默认不加权重
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.Ranks.Best``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.Math.Ranks.Ranking{``0}})">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="Evaluate"></param>
      <returns>Ranks值最小的是认为最好的</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.IValueProvider">
      <summary>
        Generates a random number.
        (事实上这个函数指针的功能仅仅是返回一个实数，所以这里不仅仅是局限于随机数，也可以是一个固定值的实数)
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.IRandomSeeds">
      <summary>
        Tells the function how to generates a new random seed?
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.RandomExtensions">
      <summary>
        Some extension methods for <see cref="T:System.Random"/> for creating a few more kinds of random stuff.
      </summary>
      <remarks>Imports from https://github.com/rvs76/superbest-random.git </remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomExtensions.Seed">
      <summary>
        A number used to calculate a starting value for the pseudo-random number sequence.
        If a negative number is specified, the absolute value of the number is used.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomExtensions.randf(System.Double,System.Double)">
      <summary>
        返回<paramref name="min"/>到<paramref name="max"/>区间之内的一个和实数
      </summary>
      <param name="min"></param>
      <param name="max"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomExtensions.NextDouble(System.Random,Microsoft.VisualBasic.ComponentModel.Ranges.DoubleRange)">
      <summary>
        Returns a random floating-point number that is greater than or equal to min of the range,
        and less than the max of the range.
      </summary>
      <param name="rnd"></param>
      <param name="range"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomExtensions.NextGaussian(System.Random,System.Double,System.Double)">
      <summary>
        Generates normally distributed numbers. Each operation makes two Gaussians for the price of one, and apparently they can be cached or something for better performance, but who cares.
      </summary>
      <param name="r"></param>
      <param name = "mu">Mean of the distribution</param>
      <param name = "sigma">Standard deviation</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomExtensions.NextTriangular(System.Random,System.Double,System.Double,System.Double)">
      <summary>
        Generates values from a triangular distribution.
      </summary>
      <remarks>
        See http://en.wikipedia.org/wiki/Triangular_distribution for a description of the triangular probability distribution and the algorithm for generating one.
      </remarks>
      <param name="r"></param>
      <param name = "a">Minimum</param>
      <param name = "b">Maximum</param>
      <param name = "c">Mode (most frequent value)</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomExtensions.NextBoolean(System.Random)">
      <summary>
        Equally likely to return true or false. Uses <see cref="M:System.Random.Next(System.Int32)"/>.
      </summary>
      <returns></returns>
      <remarks>
        ```vbnet
        1 > 0 OR 0 > 0
        ```
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomExtensions.Shuffle``1(System.Random,System.Collections.Generic.List{``0}@)">
      <summary>
        Shuffles a list in O(n) time by using the Fisher-Yates/Knuth algorithm.
      </summary>
      <param name="r"></param>
      <param name = "list"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomExtensions.Shuffle(System.Random,System.Collections.IList@)">
      <summary>
        Shuffles a list in O(n) time by using the Fisher-Yates/Knuth algorithm.
      </summary>
      <param name="r"></param>
      <param name = "list"></param>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.RandomExtensions.Permutation(System.Random,System.Int32,System.Int32)">
      <summary>
        Returns n unique random numbers in the range [1, n], inclusive.
        This is equivalent to getting the first n numbers of some random permutation of the sequential numbers from 1 to max.
        Runs in O(k^2) time.
      </summary>
      <param name="rand"></param>
      <param name="n">Maximum number possible.(最大值)</param>
      <param name="k">How many numbers to return.(返回的数据的数目)</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.ScaleMaps.TrimRanges(System.Double[],System.Double,System.Double)">
      <summary>
        Trims the data ranges,
        if n in <paramref name="Dbl"/> vector is less than <paramref name="min"/>, then set n = min;
        else if n is greater than <paramref name="max"/>, then set n value to max,
        else do nothing.
      </summary>
      <param name="Dbl"></param>
      <param name="min"></param>
      <param name="max"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.ScaleMaps.GenerateMapping(System.Collections.Generic.IEnumerable{System.Double},System.Int32,System.Int32)">
      <summary>
        Linear mappings the vector elements in to another scale within specifc range from parameter <paramref name="Level"></paramref>.
        (如果每一个数值之间都是相同的大小，则返回原始数据，因为最大值与最小值的差为0，无法进行映射的创建（会出现除0的错误）)
      </summary>
      <param name="data">Your input numeric vector.</param>
      <param name="Level">The scaler range.</param>
      <returns></returns>
      <remarks>为了要保持顺序，不能够使用并行拓展</remarks>
      <param name="offset">
        The default scaler range output is [1, <paramref name="Level"></paramref>], but you can modify this parameter
        value for moving the range to [<paramref name="offset"></paramref>, <paramref name="Level"></paramref> + <paramref name="offset"></paramref>].
        (默认是 [1, <paramref name="Level"></paramref>]，
        当offset的值为0的时候，则为[0, <paramref name="Level"></paramref>-1]，
        当然这个参数也可以使其他的值)
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.ScaleMaps.GenerateMapping(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Int32)">
      <summary>
        如果每一个数值之间都是相同的大小，则返回原始数据，因为最大值与最小值的差为0，无法进行映射的创建（会出现除0的错误）
      </summary>
      <param name="data"></param>
      <returns></returns>
      <remarks>为了要保持顺序，不能够使用并行拓展</remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.ScaleMaps.Scale(System.Collections.Generic.IEnumerable{System.Double},System.Boolean,System.Boolean)">
      <summary>
        Function centers and/or scales the columns of a numeric matrix.
      </summary>
      <param name="data">numeric matrix</param>
      <param name="center">either a logical value or a numeric vector of length equal to the number of columns of x</param>
      <param name="isScale">either a logical value or a numeric vector of length equal to the number of columns of x</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Math.VBMath">
      <summary>
        Provides constants and static methods for trigonometric, logarithmic, and other
        common mathematical functions.To browse the .NET Framework source code for this
        type, see the Reference Source.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Math.VBMath.PI">
      <summary>
        Represents the ratio of the circumference of a circle to its diameter, specified
        by the constant, π.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Math.VBMath.E">
      <summary>
        Represents the natural logarithmic base, specified by the constant, e.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Min(System.Byte,System.Byte)">
      <summary>
        Returns the smaller of two 8-bit unsigned integers.
      </summary>
      <param name="val1">The first of two 8-bit unsigned integers to compare.</param>
      <param name="val2">The second of two 8-bit unsigned integers to compare.</param>
      <returns>Parameter val1 or val2, whichever is smaller.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Min(System.SByte,System.SByte)">
      <summary>
        Returns the smaller of two 8-bit signed integers.
      </summary>
      <param name="val1">The first of two 8-bit signed integers to compare.</param>
      <param name="val2">The second of two 8-bit signed integers to compare.</param>
      <returns>Parameter val1 or val2, whichever is smaller.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Max(System.Decimal,System.Decimal)">
      <summary>
        Returns the larger of two decimal numbers.
      </summary>
      <param name="val1">The first of two decimal numbers to compare.</param>
      <param name="val2">The second of two decimal numbers to compare.</param>
      <returns>Parameter val1 or val2, whichever is larger.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Max(System.Double,System.Double)">
      <summary>
        Returns the larger of two double-precision floating-point numbers.
      </summary>
      <param name="val1">The first of two double-precision floating-point numbers to compare.</param>
      <param name="val2">The second of two double-precision floating-point numbers to compare.</param>
      <returns>
        Parameter val1 or val2, whichever is larger. If val1, val2, or both val1 and
        val2 are equal to System.Double.NaN, System.Double.NaN is returned.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Max(System.Single,System.Single)">
      <summary>
        Returns the larger of two single-precision floating-point numbers.
      </summary>
      <param name="val1">The first of two single-precision floating-point numbers to compare.</param>
      <param name="val2">The second of two single-precision floating-point numbers to compare.</param>
      <returns>
        Parameter val1 or val2, whichever is larger. If val1, or val2, or both val1 and
        val2 are equal to System.Single.NaN, System.Single.NaN is returned.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Max(System.UInt64,System.UInt64)">
      <summary>
        Returns the larger of two 64-bit unsigned integers.
      </summary>
      <param name="val1">The first of two 64-bit unsigned integers to compare.</param>
      <param name="val2">The second of two 64-bit unsigned integers to compare.</param>
      <returns>Parameter val1 or val2, whichever is larger.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Max(System.Int64,System.Int64)">
      <summary>
        Returns the larger of two 64-bit signed integers.
      </summary>
      <param name="val1">The first of two 64-bit signed integers to compare.</param>
      <param name="val2">The second of two 64-bit signed integers to compare.</param>
      <returns>Parameter val1 or val2, whichever is larger.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Max(System.UInt32,System.UInt32)">
      <summary>
        Returns the larger of two 32-bit unsigned integers.
      </summary>
      <param name="val1">The first of two 32-bit unsigned integers to compare.</param>
      <param name="val2">The second of two 32-bit unsigned integers to compare.</param>
      <returns>Parameter val1 or val2, whichever is larger.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Abs(System.Double)">
      <summary>
        Returns the absolute value of a double-precision floating-point number.
      </summary>
      <param name="value">
        A number that is greater than or equal to System.Double.MinValue, but less than
        or equal to System.Double.MaxValue.
      </param>
      <returns>A double-precision floating-point number, x, such that 0 ≤ x ≤System.Double.MaxValue.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Min(System.Decimal,System.Decimal)">
      <summary>
        Returns the smaller of two decimal numbers.
      </summary>
      <param name="val1">The first of two decimal numbers to compare.</param>
      <param name="val2">The second of two decimal numbers to compare.</param>
      <returns>Parameter val1 or val2, whichever is smaller.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Abs(System.Single)">
      <summary>
        Returns the absolute value of a single-precision floating-point number.
      </summary>
      <param name="value">
        A number that is greater than or equal to System.Single.MinValue, but less than
        or equal to System.Single.MaxValue.
      </param>
      <returns>
        A single-precision floating-point number, x, such that 0 ≤ x ≤System.Single.MaxValue.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Abs(System.Int64)">
      <summary>
        Returns the absolute value of a 64-bit signed integer.
      </summary>
      <param name="value">
        A number that is greater than System.Int64.MinValue, but less than or equal to
        System.Int64.MaxValue.
      </param>
      <returns>A 64-bit signed integer, x, such that 0 ≤ x ≤System.Int64.MaxValue.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Abs(System.Int32)">
      <summary>
        Returns the absolute value of a 32-bit signed integer.
      </summary>
      <param name="value">
        A number that is greater than System.Int32.MinValue, but less than or equal to
        System.Int32.MaxValue.
      </param>
      <returns>A 32-bit signed integer, x, such that 0 ≤ x ≤System.Int32.MaxValue.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Round(System.Double,System.Int32)">
      <summary>
        Rounds a double-precision floating-point value to a specified number of fractional
        digits.
      </summary>
      <param name="value">A double-precision floating-point number to be rounded.</param>
      <param name="digits">The number of fractional digits in the return value.</param>
      <returns>
        The number nearest to value that contains a number of fractional digits equal
        to digits.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Pow(System.Double,System.Double)">
      <summary>
        Returns a specified number raised to the specified power.
      </summary>
      <param name="x">A double-precision floating-point number to be raised to a power.</param>
      <param name="y">A double-precision floating-point number that specifies a power.</param>
      <returns>The number x raised to the power y.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Exp(System.Double)">
      <summary>
        Returns e raised to the specified power.
      </summary>
      <param name="d">A number specifying a power.</param>
      <returns>
        The number e raised to the power d. If d equals System.Double.NaN or System.Double.PositiveInfinity,
        that value is returned. If d equals System.Double.NegativeInfinity, 0 is returned.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Truncate(System.Double)">
      <summary>
        Calculates the integral part of a specified double-precision floating-point number.
      </summary>
      <param name="d">A number to truncate.</param>
      <returns>
        The integral part of d; that is, the number that remains after any fractional
        digits have been discarded, or one of the values listed in the following table.
        |<paramref name="d"/>          |Return value                  |
        |------------------------------|------------------------------|
        |System.Double.NaN             |System.Double.NaN             |
        |System.Double.NegativeInfinity|System.Double.NegativeInfinity|
        |System.Double.PositiveInfinity|System.Double.PositiveInfinity|
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Sqrt(System.Double)">
      <summary>
        Returns the square root of a specified number.
      </summary>
      <param name="d">The number whose square root is to be found.</param>
      <returns>
        One of the values in the following table. d parameter Return value Zero or positive
        The positive square root of d. Negative System.Double.NaNEquals System.Double.NaNSystem.Double.NaNEquals
        System.Double.PositiveInfinitySystem.Double.PositiveInfinity
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Covariance(System.Double[],System.Double[])">
      <summary>
        Returns the covariance of two data vectors.
      </summary>
      <param name="a">	double[] of data </param>
      <param name="b">
        double[] of data
        @return	the covariance of a and b, cov(a,b)
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.WeighedAverage(System.Collections.Generic.IEnumerable{System.Double},System.Double[])">
      <summary>
        请注意,<paramref name="data"/>的元素数量必须要和<paramref name="weights"/>的长度相等
      </summary>
      <param name="data"></param>
      <param name="weights">这个数组里面的值的和必须要等于1</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.seq(Microsoft.VisualBasic.Language.Value{System.Double},System.Double,System.Double)">
      <summary>
        [Sequence Generation] Generate regular sequences. seq is a standard generic with a default method.
      </summary>
      <param name="From">
        the starting and (maximal) end values of the sequence. Of length 1 unless just from is supplied as an unnamed argument.
      </param>
      <param name="To">
        the starting and (maximal) end values of the sequence. Of length 1 unless just from is supplied as an unnamed argument.
      </param>
      <param name="By">number: increment of the sequence</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.LogN(System.Double,System.Double)">
      <summary>
        以 N 为底的对数 ``LogN(X) = Log(X) / Log(N)``
      </summary>
      <param name="x"></param>
      <param name="N"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Max(System.Int32,System.Int32,System.Int32)">
      <summary>
        return the maximum of a, b and c
      </summary>
      <param name="a"> </param>
      <param name="b"> </param>
      <param name="c">
        @return
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Hypot(System.Double,System.Double)">
      <summary>
        sqrt(a^2 + b^2) without under/overflow.
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Pow2(System.Int32)">
      <summary>
        Calculates power of 2.
      </summary>

      <param name="power">Power to raise in.</param>

      <returns>
        Returns specified power of 2 in the case if power is in the range of
        [0, 30]. Otherwise returns 0.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Log2(System.Int32)">
      <summary>
        Get base of binary logarithm.
      </summary>

      <param name="x">Source integer number.</param>

      <returns>Power of the number (base of binary logarithm).</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.IsPowerOf2(System.Int32)">
      <summary>
        Checks if the specified integer is power of 2.
      </summary>

      <param name="x">Integer number to check.</param>

      <returns>
        Returns <b>true</b> if the specified number is power of 2.
        Otherwise returns <b>false</b>.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.Sum(System.Collections.Generic.IEnumerable{System.Boolean})">
      <summary>
        Logical true values are regarded as one, false values as zero. For historical reasons, NULL is accepted and treated as if it were integer(0).
      </summary>
      <param name="bc"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.ProductALL(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
        计算出所有的数的乘积
      </summary>
      <param name="[in]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.SD(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
        ## Standard Deviation

        In statistics, the standard deviation (SD, also represented by the Greek letter sigma σ or the Latin letter s)
        is a measure that is used to quantify the amount of variation or dispersion of a set of data values. A low
        standard deviation indicates that the data points tend to be close to the mean (also called the expected value)
        of the set, while a high standard deviation indicates that the data points are spread out over a wider range of
        values.

        > https://en.wikipedia.org/wiki/Standard_deviation
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.SD(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
        Standard Deviation
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.SD(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
        Standard Deviation
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.SD(System.Collections.Generic.IEnumerable{System.Single})">
      <summary>
        Standard Deviation
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.EuclideanDistance(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
        多位坐标的欧几里得距离，与坐标点0进行比较
      </summary>
      <param name="vector"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.EuclideanDistance(System.Byte[],System.Byte[])">
      <summary>

      </summary>
      <param name="a">Point A</param>
      <param name="b">Point B</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.EuclideanDistance(System.Double[],System.Double[])">
      <summary>
        计算两个向量之间的欧氏距离，请注意，这两个向量的长度必须要相等
      </summary>
      <param name="a">Point A</param>
      <param name="b">Point B</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.RMS(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
        Root mean square.(均方根)
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.RSD(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
        ``相对标准偏差（RSD）= 标准偏差（SD）/ 计算结果的算术平均值（X）* 100%``
      </summary>
      <param name="data"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Math.VBMath.PoissonPDF(System.Int32,System.Double)">
      <summary>
        Returns the PDF value at x for the specified Poisson distribution.
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeHelper.EnumCodeHelper(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Boolean)">
      <summary>

      </summary>
      <param name="items"></param>
      <param name="enumName$"></param>
      <param name="type$"></param>
      <param name="pascalStyle"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Emit.CodeDOM_VBC.ReferenceSolver">
      <summary>
        Assembly references solver
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.CodeDOM_VBC.ReferenceSolver.ExecutingReferences">
      <summary>
        获取当前所执行的应用程序的所有引用dll模块的文件路径列表
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.ReferenceSolver.GetReferences(System.Type)">
      <summary>
        递归的获取该类型所处的模块的所有的依赖关系，返回来的是全路径
      </summary>
      <param name="Type"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.ReferenceSolver.__getReferences(System.Reflection.Assembly,System.Int32,Microsoft.VisualBasic.Language.List{System.String}@,Microsoft.VisualBasic.Language.List{System.String})">
      <summary>
        有一些会出现循环引用的情况？？？？？
      </summary>
      <param name="assembly"></param>
      <param name="i"></param>
      <param name="refList"></param>
      <param name="fullNames">防止重复加载</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.ReferenceSolver.GetReferences(System.Reflection.Assembly,System.Boolean,System.Boolean)">
      <summary>

      </summary>
      <param name="assembly"></param>
      <param name="removeSystem">是否移除系统引用</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.ReferenceSolver.IsSystemAssembly(System.String,System.Boolean)">
      <summary>
        放在C:\WINDOWS\Microsoft.Net\这个文件夹下面的所有的引用都是本地编译的，哈希值已经不对了
      </summary>
      <param name="url"></param>
      <param name="strict"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.ReferenceSolver.GetReferences(System.String,System.Int32,Microsoft.VisualBasic.Language.List{System.String}@,Microsoft.VisualBasic.Language.List{System.String})">
      <summary>

      </summary>
      <param name="url">+特殊符号存在于这个字符串之中的话，函数会出错</param>
      <param name="i"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.net46Default">
      <summary>
        ```
        C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6\
        ```
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.Icon(System.String)">
      <summary>
        设置所编译的应用程序的图标
      </summary>
      <param name="iconPath"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.GenerateCode(System.CodeDom.CodeNamespace,System.String)">
      <summary>
        Generate the source code from the CodeDOM object model.(根据对象模型生成源代码以方便调试程序)
      </summary>
      <param name="NameSpace"></param>
      <param name="CodeStyle">VisualBasic, C#</param>
      <returns></returns>
      <remarks>
        You can easily convert the source code between VisualBasic and C# using this function just by makes change in statement:
        CodeDomProvider.GetCompilerInfo("VisualBasic").CreateProvider().GenerateCodeFromNamespace([NameSpace], sWriter, Options)
        Modify the VisualBasic in to C#
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.Compile(System.CodeDom.CodeNamespace,System.String[],System.String,System.String)">
      <summary>
        Compile the codedom object model into a binary assembly module file.(将CodeDOM对象模型编译为二进制应用程序文件)
      </summary>
      <param name="ObjectModel">CodeDom dynamic code object model.(目标动态代码的对象模型)</param>
      <param name="Reference">Reference assemby file path collection.(用户代码的引用DLL文件列表)</param>
      <param name="DotNETReferenceAssembliesDir">.NET Framework SDK</param>
      <param name="CodeStyle">VisualBasic, C#</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.Compile(System.CodeDom.CodeNamespace,System.String[],System.String,System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>
        Compile the codedom object model into a binary assembly module file.(将CodeDOM对象模型编译为二进制应用程序文件)
      </summary>
      <param name="ObjectModel">CodeDom dynamic code object model.(目标动态代码的对象模型)</param>
      <param name="Reference">Reference assemby file path collection.(用户代码的引用DLL文件列表)</param>
      <param name="DotNETReferenceAssembliesDir">.NET Framework SDK</param>
      <param name="CodeStyle">VisualBasic, C#</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.Compile(System.CodeDom.CodeCompileUnit,System.String[],System.String,System.String)">
      <summary>
        Compile the codedom object model into a binary assembly module file.(将CodeDOM对象模型编译为二进制应用程序文件)
      </summary>
      <param name="ObjectModel">CodeDom dynamic code object model.(目标动态代码的对象模型)</param>
      <param name="Reference">Reference assemby file path collection.(用户代码的引用DLL文件列表)</param>
      <param name="DotNETReferenceAssembliesDir">.NET Framework SDK</param>
      <param name="CodeStyle">VisualBasic, C#</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.ExecutableProfile">
      <summary>
        .exe的编译配置文件
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.DllProfile">
      <summary>
        .Dll的编译配置文件
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.Compile(System.CodeDom.CodeCompileUnit,System.String[],System.String,System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>
        Compile the codedom object model into a binary assembly module file.(将CodeDOM对象模型编译为二进制应用程序文件)
      </summary>
      <param name="ObjectModel">CodeDom dynamic code object model.(目标动态代码的对象模型)</param>
      <param name="Reference">Reference assemby file path collection.(用户代码的引用DLL文件列表)</param>
      <param name="DotNETReferenceAssembliesDir">.NET Framework SDK</param>
      <param name="CodeStyle">VisualBasic, C#</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.DotNETFramework">
      <summary>
        基本的引用集合
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExtension.GetDebugInformation(System.CodeDom.Compiler.CompilerResults,System.CodeDom.CodeCompileUnit)">
      <summary>
        Output logs
      </summary>
      <param name="CompiledResult"></param>
      <param name="Assembly"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.EntryPoint">
      <summary>
        Public Shared Function Main(Argvs As String()) As Integer
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.PublicShared">
      <summary>
        ```
        Public Shared Function xxx() As T
        Public Shared Property XXX As T
        ```

        Or declare a method in a standard Module type.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.DeclareFunc(System.String,System.Collections.Generic.Dictionary{System.String,System.Type},System.Type,System.CodeDom.MemberAttributes)">
      <summary>
        声明一个函数
      </summary>
      <param name="name"></param>
      <param name="args"></param>
      <param name="returns"></param>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.Field(System.String,System.Type)">
      <summary>
        ```
        Dim Name As &lt;Type>
        ```

        Declare a field in the type
      </summary>
      <param name="Name"></param>
      <param name="Type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.FieldRef(System.String)">
      <summary>
        Reference of ``Me.Field``
      </summary>
      <param name="Name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.New(System.Type,System.CodeDom.CodeExpression[])">
      <summary>
        Class object instance constructor
      </summary>
      <param name="Type"></param>
      <param name="parameters"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.New``1(System.Object[])">
      <summary>
        Class object instance constructor.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="parameters"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.New(System.String,System.CodeDom.CodeExpression[])">
      <summary>
        New object
      </summary>
      <param name="typeRef"></param>
      <param name="parameters"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.LocalsInit(System.String,System.Type,System.CodeDom.CodeExpression)">
      <summary>
        声明一个局部变量
      </summary>
      <param name="Name"></param>
      <param name="Type"></param>
      <param name="initExpression"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.LocalsInit(System.String,System.Type,System.Object)">
      <summary>
        Declare a local variable.
      </summary>
      <param name="Name"></param>
      <param name="Type"></param>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.CType(System.CodeDom.CodeExpression,System.Type)">
      <summary>
        Ctype
      </summary>
      <param name="obj"></param>
      <param name="type"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.Call(System.Reflection.MethodInfo,System.CodeDom.CodeExpression[],System.CodeDom.CodeExpression)">
      <summary>
        Call method
      </summary>
      <param name="Method"></param>
      <param name="Parameters"></param>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.Call(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression[])">
      <summary>
        Call object by method name
      </summary>
      <param name="obj"></param>
      <param name="Name"></param>
      <param name="Parameters"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.Call(System.Type,System.String,System.Object[])">
      <summary>
        Call a statics function from a specific type with a known function name
      </summary>
      <param name="type"></param>
      <param name="Name"></param>
      <param name="parametersValue"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.Return(System.String)">
      <summary>
        Function returns
      </summary>
      <param name="variable"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.Return(System.CodeDom.CodeExpression)">
      <summary>
        Returns value in a function body
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.Reference(System.Type,System.String)">
      <summary>
        Reference to a statics field in the specific target type
      </summary>
      <param name="obj"></param>
      <param name="Name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.Reference(System.CodeDom.CodeExpression,System.String)">
      <summary>
        Reference to a instance field in the specific object instance.
      </summary>
      <param name="obj"></param>
      <param name="Name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.ValueAssign(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
      <summary>
        ``left = value``
      </summary>
      <param name="LeftAssigned"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.Value(System.Object)">
      <summary>
        Variable value initializer
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.LocalVariable(System.String)">
      <summary>
        Reference to a local variable in a function body.(引用局部变量)
      </summary>
      <param name="Name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.GetValue(System.CodeDom.CodeExpression,System.Int32)">
      <summary>
        Gets the element value in a array object.
      </summary>
      <param name="Array"></param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.CodeDOMExpressions.GetType(System.Type)">
      <summary>
        System.Type.GetType(TypeName)
      </summary>
      <param name="Type"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Emit.CodeDOM_VBC.VBC">
      <summary>
        Extension wrappers for VisualBasic compiler
      </summary>
      <remarks>
        https://www.codeproject.com/articles/113169/c-as-a-scripting-language-in-your-net-applications
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.VBC.CreateParameters(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
      <summary>
        Construct of the ``vbc.exe`` compiler parameters <see cref="T:System.CodeDom.Compiler.CompilerParameters"/>.
      </summary>
      <param name="ref"></param>
      <param name="SDK"></param>
      <param name="dll"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.VBC.CreateParameters(System.String[],System.String,System.Boolean)">
      <summary>
        <see cref="P:Microsoft.VisualBasic.App.References"/>
      </summary>
      <param name="SDK$"></param>
      <param name="dll"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.VBC.CompileCode(System.String,System.String,System.String@)">
      <summary>

      </summary>
      <param name="code">VisualBasic源代码</param>
      <param name="output">The output ``*.exe`` file.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.CodeDOM_VBC.VBC.CompileCode(System.String,System.CodeDom.Compiler.CompilerParameters,System.String@)">
      <summary>
        If the code compile failure, then this function will returns nothing.
      </summary>
      <param name="code">VisualBasic源代码</param>
      <returns>
        <see cref="T:System.Reflection.Assembly"/> from the source <paramref name="code"/>
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Emit.Delegates.DataValue`1">
      <summary>
        .NET object collection data property value ``get/set`` helper.
        (将属性的<see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)"/>编译为方法调用)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Emit.Delegates.DataValue`1.properties">
      <summary>
        Using for expression tree compile to delegate by using <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps.BindProperty`1"/>,
        to makes the get/set invoke faster
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.Delegates.DataValue`1.Evaluate(System.String)">
      <summary>

      </summary>
      <param name="name$">The property name, using the ``nameof`` operator to get the property name!</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Delegates.DelegateFactory.PropertySet``1(System.Type,System.String)">
      <summary>
        为指定类型的对象实例设置属性值，返回空值表名目标属性为一个只读属性或者写过程为私有访问类型
      </summary>
      <typeparam name="TProperty"></typeparam>
      <param name="source"></param>
      <param name="propertyName"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Delegates.TypeExtensions.CanBeAssignedFrom(System.Type,System.Type)">
      <summary>
        <paramref name="source"/>能否转换至<paramref name="destination"/>类型？
      </summary>
      <param name="destination"></param>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Delegates.TypeExtensions.ImplementInterface(System.Type,System.Type)">
      <summary>
        目标类型<paramref name="source"/>是否实现了制定的接口类型？
      </summary>
      <param name="source"></param>
      <param name="interfaceType">接口类型信息</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Emit.Parameters.ParamLogUtility">
      <summary>
        Exception is a common issue in projects. To track this exception, we use error loggers
        which only log the exception detail and some other information if you want to.
        But hardly do we get any idea for which input set(parameters and its values) a
        particular method is throwing the error.
      </summary>
      <remarks>
        https://www.codeproject.com/tips/795865/log-all-parameters-that-were-passed-to-some-method
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Parameters.ParamLogUtility.AcquireOrder(System.Object[])">
      <summary>
        这个方法要求传递进来的参数的顺序要和原函数的参数的顺序一致，故而不太推荐使用这个方法
      </summary>
      <param name="parameters"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Emit.Marshal.Pointer`1">
      <summary>
        <see cref="T:System.Array"/> index helper.(在数组的索引基础上封装了数组本身)
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.Current">
      <summary>
        <see cref="P:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.Position"/> -> its current value
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.Length">
      <summary>
        Memory block size
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.UBound">
      <summary>
        返回指定维度的一个数组，最高可用的下标。
      </summary>
      <returns>
        <see cref="T:System.Int32"/>。 指定维度的下标可以包含的最大值。 如果 Array 只有一个元素， UBound ，则返回 0。 如果 Array 不包含任何元素，例如，如果它是零长度字符串，
        UBound 返回-1。
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.Value(System.Int32)">
      <summary>
        相对于当前的指针的位置而言的
      </summary>
      <param name="p">相对于当前的位置的offset偏移量</param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.RawBuffer">
      <summary>
        Raw memory of this pointer
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.EndRead">
      <summary>
        Is read to end?
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.Position">
      <summary>
        Current read position
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
        Create a collection wrapper from a <paramref name="source"/> buffer.
      </summary>
      <param name="source">The collection source buffer</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.op_LeftShift(Microsoft.VisualBasic.Emit.Marshal.Pointer{`0},System.Int32)">
      <summary>
        前移<paramref name="offset"/>个单位，然后返回值，这个和Peek的作用一样，不会改变指针位置
      </summary>
      <param name="p"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.op_RightShift(Microsoft.VisualBasic.Emit.Marshal.Pointer{`0},System.Int32)">
      <summary>
        后移<paramref name="offset"/>个单位，然后返回值，这个和Peek的作用一样，不会改变指针位置
      </summary>
      <param name="p"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.op_Addition(Microsoft.VisualBasic.Emit.Marshal.Pointer{`0},System.Int32)">
      <summary>
        Move steps and returns this pointer
      </summary>
      <param name="ptr"></param>
      <param name="d"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.MoveNext">
      <summary>
        Pointer move to next and then returns is <see cref="P:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.EndRead"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.op_UnaryPlus(Microsoft.VisualBasic.Emit.Marshal.Pointer{`0})">
      <summary>
        Pointer move to next and then returns the previous value
      </summary>
      <param name="ptr"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.Pointer`1.op_UnaryNegation(Microsoft.VisualBasic.Emit.Marshal.Pointer{`0})">
      <summary>
        指针的位置往回移动一个单位，然后返回原来的位置的元素的值
      </summary>
      <param name="ptr"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Emit.Marshal.UnsafeCopys`1">
      <summary>
        读取原始的内存数据的操作
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="destination"></param>
      <param name="startIndex"></param>
      <param name="length"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Emit.Marshal.UnsafeWrite`1">
      <summary>
        向原始的内存数据执行写入操作的函数指针
      </summary>
      <typeparam name="T"></typeparam>
      <param name="destination"></param>
      <param name="startIndex"></param>
      <param name="source"></param>
      <param name="length"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1">
      <summary>
        Unmanaged Memory pointer in VisualBasic language.(内存指针)
      </summary>
      <typeparam name="T"></typeparam>
      <remarks>只不过这个对象是封装了写内存操作的</remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1.Scan0">
      <summary>
        The position in the memory region of the first byte for read.(第一个位置)
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1.__writeMemory">
      <summary>
        ```vbnet
        Public Delegate Sub UnsafeWrite(Of T)(destination As T(), startIndex As Integer, source As System.IntPtr, length As Integer)
        ```
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1.#ctor(System.IntPtr,System.Int32,Microsoft.VisualBasic.Emit.Marshal.UnsafeCopys{`0},Microsoft.VisualBasic.Emit.Marshal.UnsafeWrite{`0})">
      <summary>

      </summary>
      <param name="p"></param>
      <param name="chunkSize"></param>
      <param name="unsafeCopys">
        ```vbnet
        Public Sub UnsafeCopys(Of <typeparamref name="T"/>)(source As <see cref="T:System.IntPtr"/>, destination As <typeparamref name="T"/>(), startIndex As <see cref="T:System.Int32"/>, length As <see cref="T:System.Int32"/>)
        ```
      </param>
      <param name="unsafeWrite">
        ```vbnet
        Public Sub UnsafeWrite(Of <typeparamref name="T"/>)(destination As <typeparamref name="T"/>(), startIndex As <see cref="T:System.Int32"/>, source As <see cref="T:System.IntPtr"/>, length As <see cref="T:System.Int32"/>)
        ```
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1.#ctor(`0[]@,System.IntPtr)">
      <summary>
        方便进行数组操作的
      </summary>
      <param name="raw"></param>
      <param name="p"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1.Write">
      <summary>
        Unsafe write memory
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1.Write(System.IntPtr)">
      <summary>
        Please be carefull by using this method, if the memory region size of <see cref="P:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1.Scan0"/>
        in this memory pointer is larger than <paramref name="des"/>, this method will caused
        exception.
      </summary>
      <param name="des"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1.op_Addition(Microsoft.VisualBasic.Emit.Marshal.IntPtr{`0},System.Int32)">
      <summary>
        Move forward the current position of this memory pointer <paramref name="ptr"/> by a specific step <paramref name="d"/>
      </summary>
      <param name="ptr"></param>
      <param name="d"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.IntPtr`1.op_Subtraction(Microsoft.VisualBasic.Emit.Marshal.IntPtr{`0},System.Int32)">
      <summary>
        Move backward the current position of this memory pointer <paramref name="ptr"/> by a specific step <paramref name="d"/>
      </summary>
      <param name="ptr"></param>
      <param name="d"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Emit.Marshal.Byte">
      <summary>
        Represents a pointer to an 8-bit unsigned integer array.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Emit.Marshal.Byte.#ctor(System.IntPtr,System.Int32)">
      <summary>
        Represents a pointer to an 8-bit unsigned integer array.
      </summary>
      <param name="p">The start address location of the array in the memory</param>
      <param name="chunkSize">array length</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.VectorAssertExtensions.LengthEquals``1(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{``0}[])">
      <summary>
        Determine that is all of the collection <paramref name="array"/> have the same size?
      </summary>
      <typeparam name="T"></typeparam>
      <param name="n%">collection size Length</param>
      <param name="any">Is required all of the sequence must be the length equals</param>
      <param name="array"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.VectorAssertExtensions.TestPairData``1(``0[],``0[])">
      <summary>
        + False: 测试失败，不会满足<see cref="M:Microsoft.VisualBasic.VectorExtensions.MappingData``1(``0[],``0[])"/>的条件
        + True: 可以使用<see cref="M:Microsoft.VisualBasic.VectorExtensions.MappingData``1(``0[],``0[])"/>来生成Mapping匹配
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.VectorAssertExtensions.InsideAny(Microsoft.VisualBasic.ComponentModel.Ranges.IntRange,System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
        Any of the element in source <paramref name="sites"/> is in a specific <paramref name="range"/>??
      </summary>
      <param name="range"></param>
      <param name="sites"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.VectorAssertor`1.op_Equality(System.Collections.Generic.IEnumerable{`0},Microsoft.VisualBasic.Linq.VectorAssertor{`0})">
      <summary>
        ALL elements in target <paramref name="list"/> equals to <paramref name="assert"/> value
      </summary>
      <param name="list"></param>
      <param name="assert"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.NumericSequence.Range(System.DateTime,System.DateTime,System.Double)">
      <summary>

      </summary>
      <param name="from"></param>
      <param name="[to]"></param>
      <param name="step%">Milliseconds</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Linq.Which">
      <summary>
        Where is the Min() or Max() or first TRUE or FALSE ?
        (这个模块之中的函数返回来的都是集合之中的符合条件的对象元素的index坐标)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Which.Index``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
        Returns the collection element its index where the test expression <paramref name="predicate"/> result is TRUE
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="predicate"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Which.#ctor">
      <summary>
        在这里不适用Module类型，要不然会和其他的Max拓展函数产生冲突的。。
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Which.Max``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Determines the location, i.e., index of the (first) minimum or maximum of a numeric (or logical) vector.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x">
        numeric (logical, integer or double) vector or an R object for which the internal coercion to
        double works whose min or max is searched for.
      </param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Which.Min``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Determines the location, i.e., index of the (first) minimum or maximum of a numeric (or logical) vector.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x">
        numeric (logical, integer or double) vector or an R object for which the internal coercion to
        double works whose min or max is searched for.
      </param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Which.IsTrue(System.Collections.Generic.IEnumerable{System.Boolean})">
      <summary>
        Return all of the indices which is True
      </summary>
      <param name="v"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Which.IsTrue(System.Object)">
      <summary>
        Syntax helper for <see cref="M:Microsoft.VisualBasic.VectorExtensions.VectorShadows``1(System.Collections.Generic.IEnumerable{``0})"/>
      </summary>
      <param name="list"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Which.IsFalse(System.Collections.Generic.IEnumerable{System.Boolean})">
      <summary>
        Returns all of the indices which is False
      </summary>
      <param name="v"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Which.True``1(System.Collections.Generic.IEnumerable{``0},Microsoft.VisualBasic.Language.Default.Assert{``0})">
      <summary>
        查找出列表之中符合条件的所有的索引编号
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="condi"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Which.IsGreaterThan``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary>
        枚举出所有大于目标的顶点编号
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="compareTo"></param>
      <returns></returns>
      <remarks>因为这个返回的是一个迭代器，所以可以和First结合产生FirstGreaterThan表达式</remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.SetValuExtension`1.InvokeSet(System.String,System.Object)">
      <summary>

      </summary>
      <param name="name">Using NameOf</param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Linq.SetValue`1">
      <summary>
        Set value linq expression helper
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.SetValue`1.GetSet(System.String)">
      <summary>
        Public Delegate Function IInvokeSetValue(x As T, value As Object) As T
      </summary>
      <param name="name">Using NameOf</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.SetValue`1.op_LessThanOrEqual(Microsoft.VisualBasic.Linq.SetValue{`0},System.String)">
      <summary>
        <see cref="M:Microsoft.VisualBasic.Linq.SetValue`1.GetSet(System.String)"/>
      </summary>
      <param name="setValue"></param>
      <param name="name">Using NameOf</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.SetValue`1.InvokeSetValue(`0,System.String,System.Object)">
      <summary>
        Assigning the value to the specific named property to the target object.
        (将<paramref name="value"/>参数之中的值赋值给目标对象<paramref name="x"/>之中的指定的<paramref name="name"/>属性名称的属性，
        如果发生错误，则原有的对象<paramref name="x"/>不会被修改)
      </summary>
      <param name="x"></param>
      <param name="name">Using NameOf.(可以使用NameOf得到需要进行修改的属性名称)</param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.SetValue`1.InvokeSet``1(`0@,System.String,``0)">
      <summary>
        Assigning the value to the specific named property to the target object.
        (将<paramref name="value"/>参数之中的值赋值给目标对象<paramref name="obj"/>之中的指定的<paramref name="name"/>属性名称的属性，
        如果发生错误，则原有的对象<paramref name="obj"/>不会被修改)
      </summary>
      <typeparam name="Tvalue"></typeparam>
      <param name="obj"></param>
      <param name="Name">可以使用NameOf得到需要进行修改的属性名称</param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.IteratorExtensions.SeqIterator``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
        Iterates all of the objects in the source sequence with collection index position.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source">the source sequence</param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.IteratorExtensions.Next``1(System.Collections.Generic.IEnumerator{``0})">
      <summary>
        Move the enumerator pointer to next and get next value, if the pointer is reach the end, then will returns nothing
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.IteratorExtensions.ValueArray``1(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.Language.Value{``0}.IValueOf})">
      <summary>
        Creates an array from property <see cref="P:Microsoft.VisualBasic.Language.Value`1.IValueOf.Value"/>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Linq.SeqValue`1">
      <summary>
        Value <typeparamref name="T"/> with sequence index <see cref="P:Microsoft.VisualBasic.Linq.SeqValue`1.i"/>.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.Linq.SeqValue`1.i">
      <summary>
        The position of this object value in the original sequence.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Linq.SeqValue`1.value">
      <summary>
        The Object data
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.SeqValue`1.op_UnaryPlus(Microsoft.VisualBasic.Linq.SeqValue{`0})">
      <summary>
        Get value from <see cref="P:Microsoft.VisualBasic.Linq.SeqValue`1.value"/> property.
      </summary>
      <param name="x"></param>
      <returns></returns>
      <remarks>
        Syntax helper for the <see cref="T:Microsoft.VisualBasic.Emit.Marshal.Pointer`1"/>:

        ```vbnet
        Dim p As Pointer(Of T) = T()
        Dim x As T = ++p
        ```
      </remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.SeqValue`1.CompareTo(System.Int32)">
      <summary>
        Compares the index value <see cref="P:Microsoft.VisualBasic.Linq.SeqValue`1.i"/>.
      </summary>
      <param name="other"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Linq.IIterator`1">
      <summary>
        Exposes the enumerator, which supports a simple iteration over a collection of
        a specified type.To browse the .NET Framework source code for this type, see
        the Reference Source.
        (使用这个的原因是系统自带的<see cref="T:System.Collections.Generic.IEnumerable`1"/>在Xml序列化之中的支持不太好)
      </summary>
      <typeparam name="T">
        The type of objects to enumerate.This type parameter is covariant. That is, you
        can use either the type you specified or any type that is more derived. For more
        information about covariance and contravariance, see Covariance and Contravariance
        in Generics.
      </typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.IIterator`1.GetEnumerator">
      <summary>
        Returns an enumerator that iterates through the collection.
      </summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.IIterator`1.IGetEnumerator">
      <summary>
        Returns an enumerator that iterates through a collection.
      </summary>
      <returns>
        An System.Collections.IEnumerator object that can be used to iterate through
        the collection.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Linq.Extensions">
      <summary>
        Linq Helpers.(为了方便编写Linq代码而构建的一个拓展模块)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.SafeQuery``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        A query proxy function makes your linq not so easily crashed due to the unexpected null reference collection as linq source.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.MaxInd``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Gets the max element its index in the collection
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.Removes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="match">符合这个条件的所有的元素都将会被移除</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.IteratesALL``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
      <summary>
        Iterates all of the elements in a two dimension collection as the data source
        for the linq expression or ForEach statement.
        (适用于二维的集合做为linq的数据源，不像<see cref="M:Microsoft.VisualBasic.Extensions.Unlist``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})"/>是进行转换，
        这个是返回迭代器的，推荐使用这个函数)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.JoinIterates``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
        First, iterate populates the elements in collection <paramref name="a"/>,
        and then populate out all of the elements on collection <paramref name="b"/>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a">Object collection</param>
      <param name="b">Another object collection.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.RemoveLeft``2(System.Collections.Generic.Dictionary{``0,``1}@,``0)">
      <summary>
        Removes the specific key in the dicitonary and returns the last content.
        (删除指定的键之后返回剩下的数据)
      </summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
      <param name="source"></param>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.Repeats``1(``0,System.Int32)">
      <summary>
        Copy <paramref name="source"/> <paramref name="n"/> times to construct a new vector.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="n"></param>
      <returns>An array consist of source with n elements.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.CopyVector``1(System.Int32,System.Func{``0})">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <param name="n"></param>
      <param name="source">The object factory</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.Read``1(``0[],System.Int32@)">
      <summary>
        Read source at element position <paramref name="i"/> and returns its value,
        and then this function makes position <paramref name="i"/> offset +1
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="i"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.Sequence(System.Int32)">
      <summary>
        产生指定数目的一个递增序列(所生成序列的数值就是生成的数组的元素的个数)
      </summary>
      <param name="n">大于或者等于0的一个数，当小于0的时候会出错</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.SeqIterator(System.Int32,System.Int32)">
      <summary>
        ``0,1,2,3,...<paramref name="n"/>``
      </summary>
      <param name="n"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.SeqIterator(System.Int64,System.Int32)">
      <summary>
        假若数量已经超过了数组的容量，则需要使用这个函数来产生序列
      </summary>
      <param name="n"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.Sequence(System.Int64)">
      <summary>
        产生指定数目的一个递增序列(所生成序列的数值就是生成的数组的元素的个数)
      </summary>
      <param name="n"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.Sequence(System.UInt32)">
      <summary>
        产生指定数目的一个递增序列(所生成序列的数值就是生成的数组的元素的个数)
      </summary>
      <param name="n"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.ToArray``1(System.Int32,System.Func{System.Int32,``0})">
      <summary>
        (所生成序列的数值就是生成的数组的元素的个数)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="len"></param>
      <param name="elementAt"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary>
        Returns the first element of a sequence, or a default value if the sequence contains no elements.
      </summary>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <param name="source">The System.Collections.Generic.IEnumerable`1 to return the first element of.</param>
      <param name="[default]">
        If the sequence is nothing or contains no elements, then this default value will be returned.
      </param>
      <returns>default(TSource) if source is empty; otherwise, the first element in source.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.DefaultFirst``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary>
        Returns the first element of a sequence, or a default value if the sequence contains no elements.
      </summary>
      <typeparam name="T">The type of the elements of source.</typeparam>
      <param name="source">The System.Collections.Generic.IEnumerable`1 to return the first element of.</param>
      <param name="[default]">
        If the sequence is nothing or contains no elements, then this default value will be returned.
      </param>
      <returns>default(TSource) if source is empty; otherwise, the first element in source.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.ToVector(System.Collections.IEnumerable)">
      <summary>
        Convert the iterator source <see cref="T:System.Collections.IEnumerable"/> to an object array.
      </summary>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Linq.Extensions.ToArray``1(System.Collections.IEnumerable)">
      <summary>
        Convert the iterator source <see cref="T:System.Collections.IEnumerable"/> to a specific type array.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.AnonymousTypeHelper.CopyTypeDef``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        You can using this method to create a empty list for the specific type of anonymous type object.
        (使用这个方法获取得到匿名类型的列表数据集合对象)
      </summary>
      <typeparam name="TAnonymousType"></typeparam>
      <param name="typedef">
        The temp object which was created anonymous.
        (匿名对象的集合，这个是用来复制匿名类型的，虽然没有引用这个参数，但是却可以直接通过拓展来得到匿名类型生成列表对象)
      </param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.AnonymousTypeHelper.CopyTypeDef``2(System.Collections.Generic.Dictionary{``0,``1})">
      <summary>

      </summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
      <param name="source">仅仅是起到类型复制的作用</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.Effects.Vignette(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
        羽化
      </summary>
      <param name="Image"></param>
      <param name="y1"></param>
      <param name="y2"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.Effects.RotateImage(System.Drawing.Image,System.Single)">
      <summary>
        Creates a new Image containing the same image only rotated
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image"/> to rotate
      </param>
      <param name="angle">The amount to rotate the image, clockwise, in degrees</param>
      <returns>
        A new <see cref="T:System.Drawing.Bitmap"/> that is just large enough
        to contain the rotated image without cutting any corners off.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        Thrown if <see cref="T:System.Drawing.Image"/> is null.
      </exception>
      <remarks>

        Explaination of the calculations

        The trig involved in calculating the new width and height
        is fairly simple; the hard part was remembering that when
        PI/2 &lt;= theta &lt;= PI and 3PI/2 &lt;= theta &lt; 2PI the width and
        height are switched.

        When you rotate a rectangle, r, the bounding box surrounding r
        contains for right-triangles of empty space.  Each of the
        triangles hypotenuse's are a known length, either the width or
        the height of r.  Because we know the length of the hypotenuse
        and we have a known angle of rotation, we can use the trig
        function identities to find the length of the other two sides.

        sine = opposite/hypotenuse
        cosine = adjacent/hypotenuse

        solving for the unknown we get

        opposite = sine * hypotenuse
        adjacent = cosine * hypotenuse

        Another interesting point about these triangles is that there
        are only two different triangles. The proof for which is easy
        to see, but its been too long since I've written a proof that
        I can't explain it well enough to want to publish it.

        Just trust me when I say the triangles formed by the lengths
        width are always the same (for a given theta) and the same
        goes for the height of r.

        Rather than associate the opposite/adjacent sides with the
        width and height of the original bitmap, I'll associate them
        based on their position.

        adjacent/oppositeTop will refer to the triangles making up the
        upper right and lower left corners

        adjacent/oppositeBottom will refer to the triangles making up
        the upper left and lower right corners

        The names are based on the right side corners, because thats
        where I did my work on paper (the right side).

        Now if you draw this out, you will see that the width of the
        bounding box is calculated by adding together adjacentTop and
        oppositeBottom while the height is calculate by adding
        together adjacentBottom and oppositeTop.

      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.BitmapImage.Utils">
      <summary>
        Tools function for processing on <see cref="T:System.Drawing.Image"/>/<see cref="T:System.Drawing.Bitmap"/>
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.Utils.ImageCrop(System.Drawing.Image,System.Drawing.Point,System.Drawing.Size)">
      <summary>
        图片剪裁小方块区域
      </summary>
      <param name="pos">左上角的坐标位置</param>
      <param name="size">剪裁的区域的大小</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.Utils.TrimRoundAvatar(System.Drawing.Image,System.Int32)">
      <summary>
        图片剪裁为圆形的头像
      </summary>
      <param name="resAvatar">要求为正方形或者近似正方形</param>
      <param name="OutSize"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.Utils.CorpBlank(System.Drawing.Image,System.Int32,System.Drawing.Color,System.String)">
      <summary>
        将图像的多余的空白处给剪裁掉，确定边界，然后进行剪裁，使用这个函数需要注意下设置空白色，默认使用的空白色为<see cref="P:System.Drawing.Color.White"/>
      </summary>
      <param name="res"></param>
      <param name="margin"></param>
      <param name="blankColor">默认白色为空白色</param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.BitmapImage.Utils.PixelSize">
      <summary>
        A, R, G, B
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.Utils.ColorReplace(System.Drawing.Bitmap,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        Color replace using memory pointer
      </summary>
      <param name="image"></param>
      <param name="subject"></param>
      <param name="replaceAs"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapBuffer">
      <summary>
        Unsafe memory pointer of the <see cref="T:System.Drawing.Bitmap"/> data buffer.(线程不安全的图片数据对象)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapBuffer.GetImage">
      <summary>
        Gets a copy of the original raw image value that which constructed this bitmap object class
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapBuffer.GetIndex(System.Int32,System.Int32)">
      <summary>
        返回第一个元素的位置
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns>B, G, R</returns>
      <remarks>
        ###### 2017-11-29
        经过测试，对第一行的数据的计算没有问题
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapBuffer.GetPixel(System.Int32,System.Int32)">
      <summary>
        Gets the color of the specified pixel in this <see cref="T:System.Drawing.Bitmap"/>.
        (<paramref name="x"/>和<paramref name="y"/>都是以零为底的)
      </summary>
      <param name="x">The x-coordinate of the pixel to retrieve.</param>
      <param name="y">The y-coordinate of the pixel to retrieve.</param>
      <returns>
        A <see cref="T:System.Drawing.Color"/> structure that represents the color of the specified pixel.
      </returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapBuffer.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
        Sets the color of the specified pixel in this System.Drawing.Bitmap.(这个函数线程不安全)
      </summary>
      <param name="x">The x-coordinate of the pixel to set.</param>
      <param name="y">The y-coordinate of the pixel to set.</param>
      <param name="color">
        A System.Drawing.Color structure that represents the color to assign to the specified
        pixel.
      </param>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapBuffer.FromImage(System.Drawing.Image)">
      <summary>
        这个函数会自动复制原始图片数据里面的东西的
      </summary>
      <param name="res"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapBuffer.op_Addition(Microsoft.VisualBasic.Imaging.BitmapImage.BitmapBuffer,System.Int32)">
      <summary>
        Current pointer location offset to next position
      </summary>
      <param name="bmp"></param>
      <param name="offset%"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale">
      <summary>
        Grayscale and binarization extensions
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.PixelScanPointer">
      <summary>

      </summary>
      <param name="byts">Unmanaged memory pointer that point to the bitmap data buffer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.BitmapPixelScans(System.Drawing.Bitmap@,Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.PixelScanPointer)">
      <summary>
        A generic bitmap pixel scan framework that using memory pointer
      </summary>
      <param name="curBitmap"></param>
      <param name="scan"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.Binarization(System.Drawing.Bitmap@,Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.BinarizationStyles)">
      <summary>

      </summary>
      <param name="curBitmap"></param>
      <remarks>
        http://www.codeproject.com/Articles/1094534/Image-Binarization-Using-Program-Languages

        The .net Bitmap object keeps a reference to HBITMAP handle, Not to the underlying bitmap itself.
        So, single pixel access call to <see cref="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)"/>/<see cref="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)"/> Or
        even retrieve Width/Height properties does something Like:
        lock handle In place-Get/Set value/unlock handle. It Is the most inefficient way To manipulate bitmaps In .NET.
        The author should read about <see cref="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)"/> first.
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.AdjustContrast(System.Drawing.Bitmap@,System.Double)">
      <summary>
        调整图像的对比度
      </summary>
      <param name="bmp"></param>
      <param name="contrast#"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.Grayscale(System.Drawing.Image)">
      <summary>
        convert color bitmaps to grayscale.(灰度图)
      </summary>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.Grayscale(System.Drawing.Color)">
      <summary>
        Color gray scale
      </summary>
      <param name="c"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.ByteLength(System.Drawing.Rectangle)">
      <summary>
        How many bytes does this bitmap contains?
      </summary>
      <param name="rect">The bitmap size or a specific region on the bitmap.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.BitmapImage.BitmapScale.Colors(System.Byte[])">
      <summary>
        Convert the bitmap memory bytes into pixels
      </summary>
      <param name="buffer"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.HexColor">
      <summary>
        Convert hex color string to RGB color
      </summary>
      <remarks>http://stackoverflow.com/questions/13356486/convert-hex-color-string-to-rgb-color</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.HexColor.ToHtmlColor(System.Drawing.Color)">
      <summary>
        To HTML color
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.HexColor.OLE(System.String)">
      <summary>

      </summary>
      <param name="c">Example: ``#ffffff``</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.HSLColor">
      <summary>
        Describes a RGB color in Hue, Saturation, and Luminance values.
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.HSLColor.H">
      <summary>
        The color hue.
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.HSLColor.S">
      <summary>
        The color saturation.
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.HSLColor.L">
      <summary>
        The color luminance.
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.HSLColor.Lighten(System.Double,System.Drawing.Color)">
      <summary>
        Lighten target color composition.
      </summary>
      <param name="percentage"></param>
      <param name="lightColor"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.HSLColor.GetHSL(System.Drawing.Color)">
      <summary>
        Converts a RGB color into its Hue, Saturation, and Luminance (HSL) values.
      </summary>
      <param name="rgb">The color to convert.</param>
      <returns>The HSL representation of the color.</returns>
      <remarks>
        Source algorithm found using web search at:
        http://geekymonkey.com/Programming/CSharp/RGB2HSL_HSL2RGB.htm This link is external to TechNet Wiki. It will open in a new window.
        (Adapted to VB)
      </remarks>

    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.Graphics">
      <summary>
        GDI+ device handle.(GDI+绘图设备句柄)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.Stroke">
      <summary>
        Default pen for drawing
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.Font">
      <summary>
        Default font value for text drawing
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.Clip">
      <summary>
        Gets or sets a System.Drawing.Region that limits the drawing region of this System.Drawing.Graphics.
      </summary>
      <returns>
        A System.Drawing.Region that limits the portion of this System.Drawing.Graphics
        that is currently available for drawing.
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.CompositingMode">
      <summary>
        Gets a value that specifies how composited images are drawn to this System.Drawing.Graphics.
      </summary>
      <returns>
        This property specifies a member of the System.Drawing.Drawing2D.CompositingMode enumeration.
        The default is System.Drawing.Drawing2D.CompositingMode.SourceOver.
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.CompositingQuality">
      <summary>
        Gets or sets the rendering quality of composited images drawn to this System.Drawing.Graphics.
      </summary>
      <returns>
        This property specifies a member of the System.Drawing.Drawing2D.CompositingQuality enumeration.
        The default is System.Drawing.Drawing2D.CompositingQuality.Default.
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.DpiX">
      <summary>
        Gets the horizontal resolution of this System.Drawing.Graphics.
      </summary>
      <returns>
        The value, in dots per inch, for the horizontal resolution supported by this System.Drawing.Graphics.
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.DpiY">
      <summary>
        Gets the vertical resolution of this System.Drawing.Graphics.
      </summary>
      <returns>The value, in dots per inch, for the vertical resolution supported by this System.Drawing.Graphics.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.InterpolationMode">
      <summary>
        Gets or sets the interpolation mode associated with this System.Drawing.Graphics.
      </summary>
      <returns>One of the System.Drawing.Drawing2D.InterpolationMode values.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.PageScale">
      <summary>
        Gets or sets the scaling between world units and page units for this System.Drawing.Graphics.
      </summary>
      <returns>
        This property specifies a value for the scaling between world units and page
        units for this System.Drawing.Graphics.
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.PixelOffsetMode">
      <summary>
        Gets or set a value specifying how pixels are offset during rendering of this
        System.Drawing.Graphics.
      </summary>
      <returns>
        This property specifies a member of the System.Drawing.Drawing2D.PixelOffsetMode
        enumeration
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.SmoothingMode">
      <summary>
        Gets or sets the rendering quality for this System.Drawing.Graphics.
      </summary>
      <returns>One of the System.Drawing.Drawing2D.SmoothingMode values.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDICanvas.TextRenderingHint">
      <summary>
        Gets or sets the rendering mode for text associated with this System.Drawing.Graphics.
      </summary>
      <returns>One of the System.Drawing.Text.TextRenderingHint values.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.Clear(System.Drawing.Color)">
      <summary>
        Clears the entire drawing surface and fills it with the specified background
        color.
      </summary>
      <param name="color">
        System.Drawing.Color structure that represents the background color of the drawing
        surface.
      </param>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawBézier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        Draws a Bézier spline defined by four System.Drawing.Point structures.
      </summary>
      <param name="pen">
        System.Drawing.Pen structure that determines the color, width, and style of the
        curve.
      </param>
      <param name="pt1">System.Drawing.Point structure that represents the starting point of the curve.</param>
      <param name="pt2">
        System.Drawing.Point structure that represents the first control point for the
        curve.
      </param>
      <param name="pt3">
        System.Drawing.Point structure that represents the second control point for the
        curve.
      </param>
      <param name="pt4">System.Drawing.Point structure that represents the ending point of the curve.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>
        Draws the specified System.Drawing.Image, using its original physical size, at
        the specified location.
      </summary>
      <param name="image">System.Drawing.Image to draw.</param>
      <param name="point">
        System.Drawing.Point structure that represents the location of the upper-left
        corner of the drawn image.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        Draws the specified portion of the specified System.Drawing.Image at the specified
        location and with the specified size.
      </summary>
      <param name="image">System.Drawing.Image to draw.</param>
      <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
      <param name="srcRect">
        System.Drawing.RectangleF structure that specifies the portion of the image object
        to draw.
      </param>
      <param name="srcUnit">
        Member of the System.Drawing.GraphicsUnit enumeration that specifies the units
        of measure used by the srcRect parameter.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        Draws the specified portion of the specified System.Drawing.Image at the specified
        location and with the specified size.
      </summary>
      <param name="image">System.Drawing.Image to draw.</param>
      <param name="destRect">
        System.Drawing.RectangleF structure that specifies the location and size of the
        drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcRect">
        System.Drawing.RectangleF structure that specifies the portion of the image object
        to draw.
      </param>
      <param name="srcUnit">
        Member of the System.Drawing.GraphicsUnit enumeration that specifies the units
        of measure used by the srcRect parameter.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        Draws the specified System.Drawing.Image at the specified location and with the
        specified size.
      </summary>
      <param name="image">System.Drawing.Image to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="width">Width of the drawn image.</param>
      <param name="height">Height of the drawn image.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        Draws a specified image using its original physical size at a specified location.
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image"/> to draw.
      </param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
        Draws the specified image without scaling and clips it, if necessary, to fit
        in the specified rectangle.
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image"/> to draw.
      </param>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle"/> in which to draw the image.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        Draws a line connecting two <see cref="T:System.Drawing.Point"/> structures.
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the line.
      </param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point"/> structure that represents the first point to connect.
      </param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point"/> structure that represents the second point to connect.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        Draws the specified text string in the specified rectangle with the specified
        System.Drawing.Brush and System.Drawing.Font objects.
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">System.Drawing.Font that defines the text format of the string.</param>
      <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
      <param name="layoutRectangle">
        System.Drawing.RectangleF structure that specifies the location of the drawn
        text.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>
        Draws the specified text string at the specified location with the specified
        <see cref="T:System.Drawing.Brush"/> and <see cref="T:System.Drawing.Font"/> objects.
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">System.Drawing.Font that defines the text format of the string.</param>
      <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
      <param name="point">
        System.Drawing.PointF structure that specifies the upper-left corner of the drawn
        text.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        Fills the interior of a pie section defined by an ellipse specified by a pair
        of coordinates, a width, a height, and two radial lines.
      </summary>
      <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines
        the ellipse from which the pie section comes.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the bounding rectangle that defines
        the ellipse from which the pie section comes.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse from which the pie section
        comes.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse from which the pie
        section comes.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the first side of the
        pie section.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the startAngle parameter to the second
        side of the pie section.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        Fills the interior of a rectangle specified by a System.Drawing.Rectangle structure.
      </summary>
      <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
      <param name="rect">System.Drawing.Rectangle structure that represents the rectangle to fill.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.MeasureString(System.String,System.Drawing.Font)">
      <summary>
        Measures the specified string when drawn with the specified <see cref="P:Microsoft.VisualBasic.Imaging.GDICanvas.Font"/>.
      </summary>
      <param name="text">String to measure.</param>
      <param name="font">
        <see cref="P:Microsoft.VisualBasic.Imaging.GDICanvas.Font"/> that defines the text format of the string.
      </param>
      <returns>
        This method returns a System.Drawing.SizeF structure that represents the size,
        in the units specified by the <see cref="P:Microsoft.VisualBasic.Imaging.GDICanvas.PageUnit"/> property, of the
        string specified by the text parameter as drawn with the font parameter.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.MeasureString(System.String)">
      <summary>
        Using <see cref="P:Microsoft.VisualBasic.Imaging.GDICanvas.Font"/>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDICanvas.Dispose">
      <summary>
        Releases all resources used by this <see cref="T:System.Drawing.Graphics"/>.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.LayoutModel.ILayoutedObject`1">
      <summary>
        Any typed object with a location layout value
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint">
      <summary>
        Implements a 2-dimensional point with <see cref="T:System.Double"/> precision coordinates.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.#ctor">
      <summary>
        Constructs a new point at (0, 0).
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.#ctor(System.Drawing.Point)">
      <summary>
        Constructs a new point at the location of the given point.
      </summary>
      <param name="point"> Point that specifies the location. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.#ctor(Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint)">
      <summary>
        Constructs a new point at the location of the given point.
      </summary>
      <param name="point"> Point that specifies the location. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.#ctor(System.Double,System.Double)">
      <summary>
        Constructs a new point at (x, y).
      </summary>
      <param name="x"> X-coordinate of the point to be created. </param>
      <param name="y"> Y-coordinate of the point to be created. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.X">
      <summary>
        Returns the x-coordinate of the point.
      </summary>
      <returns> Returns the x-coordinate. </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.Y">
      <summary>
        Returns the x-coordinate of the point.
      </summary>
      <returns> Returns the x-coordinate. </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.Point">
      <summary>
        Returns the coordinates as a new point.
      </summary>
      <returns> Returns a new point for the location. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.Equals(System.Object)">

      <summary>
        Returns true if the given object equals this rectangle.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.Clone">
      <summary>
        Returns a new instance of the same point.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.mxPoint.ToString">
      <summary>
        Returns a <code>String</code> that represents the value
        of this <code>mxPoint</code>.
      </summary>
      <returns>
        a string representation of this <code>mxPoint</code>.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect">
      <summary>
        Implements a 2-dimensional rectangle with double precision coordinates.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.#ctor">
      <summary>
        Constructs a new rectangle at (0, 0) with the width and height set to 0.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.#ctor(System.Drawing.Rectangle)">
      <summary>
        Constructs a copy of the given rectangle.
      </summary>
      <param name="rect"> Rectangle to construct a copy of. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.#ctor(System.Drawing.RectangleF)">
      <summary>
        Constructs a copy of the given rectangle.
      </summary>
      <param name="rect"> Rectangle to construct a copy of. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.#ctor(Microsoft.VisualBasic.Imaging.LayoutModel.DblRect)">
      <summary>
        Constructs a copy of the given rectangle.
      </summary>
      <param name="rect"> Rectangle to construct a copy of. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Constructs a rectangle using the given parameters.
      </summary>
      <param name="x"> X-coordinate of the new rectangle. </param>
      <param name="y"> Y-coordinate of the new rectangle. </param>
      <param name="width"> Width of the new rectangle. </param>
      <param name="height"> Height of the new rectangle. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.Width">
      <summary>
        Returns the width of the rectangle.
      </summary>
      <returns> Returns the width. </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.Height">
      <summary>
        Returns the height of the rectangle.
      </summary>
      <returns> Returns the height. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.setRect(System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Sets this rectangle to the specified values
      </summary>
      <param name="x"> the new x-axis position </param>
      <param name="y"> the new y-axis position </param>
      <param name="w"> the new width of the rectangle </param>
      <param name="h"> the new height of the rectangle </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.add(Microsoft.VisualBasic.Imaging.LayoutModel.DblRect)">
      <summary>
        Adds the given rectangle to this rectangle.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.CenterX">
      <summary>
        Returns the x-coordinate of the center.
      </summary>
      <returns> Returns the x-coordinate of the center. </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.CenterY">
      <summary>
        Returns the y-coordinate of the center.
      </summary>
      <returns> Returns the y-coordinate of the center. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.grow(System.Double)">
      <summary>
        Grows the rectangle by the given amount, that is, this method subtracts
        the given amount from the x- and y-coordinates and adds twice the amount
        to the width and height.
      </summary>
      <param name="amount"> Amount by which the rectangle should be grown. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.contains(System.Double,System.Double)">
      <summary>
        Returns true if the given point is contained in the rectangle.
      </summary>
      <param name="x"> X-coordinate of the point. </param>
      <param name="y"> Y-coordinate of the point. </param>
      <returns> Returns true if the point is contained in the rectangle. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.intersectLine(System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Returns the point at which the specified point intersects the perimeter
        of this rectangle or null if there is no intersection.
      </summary>
      <param name="x0"> the x co-ordinate of the first point of the line </param>
      <param name="y0"> the y co-ordinate of the first point of the line </param>
      <param name="x1"> the x co-ordinate of the second point of the line </param>
      <param name="y1"> the y co-ordinate of the second point of the line </param>
      <returns>
        the point at which the line intersects this rectangle, or null
        if there is no intersection
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.intersection(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Returns the intersection of two lines as an mxPoint.
      </summary>
      <param name="x0">
        X-coordinate of the first line's startpoint.
      </param>
      <param name="y0">
        Y-coordinate of the first line's startpoint.
      </param>
      <param name="x1">
        X-coordinate of the first line's endpoint.
      </param>
      <param name="y1">
        Y-coordinate of the first line's endpoint.
      </param>
      <param name="x2">
        X-coordinate of the second line's startpoint.
      </param>
      <param name="y2">
        Y-coordinate of the second line's startpoint.
      </param>
      <param name="x3">
        X-coordinate of the second line's endpoint.
      </param>
      <param name="y3">
        Y-coordinate of the second line's endpoint.
      </param>
      <returns> Returns the intersection between the two lines. </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.Rectangle">
      <summary>
        Returns the bounds as a new rectangle.
      </summary>
      <returns> Returns a new rectangle for the bounds. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.Equals(System.Object)">

      <summary>
        Returns true if the given object equals this rectangle.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.Clone">
      <summary>
        Returns a new instance of the same rectangle.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.LayoutModel.DblRect.ToString">
      <summary>
        Returns the <code>String</code> representation of this
        <code>mxRectangle</code>.
      </summary>
      <returns>
        a <code>String</code> representing this
        <code>mxRectangle</code>.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.Math2D.GeometryMath">
      <summary>
        https://stackoverflow.com/questions/30080/how-to-know-if-a-line-intersects-a-plane-in-c-basic-2d-geometry

        与几何相关的辅助类
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeometryMath.IntersectionOf(Microsoft.VisualBasic.Imaging.Math2D.Line,Microsoft.VisualBasic.Imaging.Math2D.Polygon)">
      <summary>
        判断线段与多边形的关系
      </summary>
      <param name="line"></param>
      <param name="polygon"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeometryMath.IntersectionOf(System.Drawing.PointF,Microsoft.VisualBasic.Imaging.Math2D.Polygon)">
      <summary>
        判断点与多边形的关系
      </summary>
      <param name="point"></param>
      <param name="polygon"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeometryMath.IntersectionOf(System.Drawing.PointF,Microsoft.VisualBasic.Imaging.Math2D.Line)">
      <summary>
        判断点与直线的关系
      </summary>
      <param name="point"></param>
      <param name="line"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeometryMath.IntersectionOf(Microsoft.VisualBasic.Imaging.Math2D.Line,Microsoft.VisualBasic.Imaging.Math2D.Line)">
      <summary>
        判断直线与直线的关系
      </summary>
      <param name="line1"></param>
      <param name="line2"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.Math2D.GeometryMath.Intersection">
      <summary>
        几何体之间的关系类型
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.PolygonD.inside(System.Double,System.Double)">
      <summary>
        @deprecated
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.Vector2D.op_UnaryNegation(Microsoft.VisualBasic.Imaging.Math2D.Vector2D)">
      <summary>
        reverse
      </summary>
      <param name="v"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.Vector2D.op_Multiply(System.Double,Microsoft.VisualBasic.Imaging.Math2D.Vector2D)">
      <summary>
        multiple
      </summary>
      <param name="scale#"></param>
      <param name="v"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.Vector2D.op_Multiply(Microsoft.VisualBasic.Imaging.Math2D.Vector2D,System.Double)">
      <summary>
        multiple
      </summary>
      <param name="v"></param>
      <param name="scale#"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.Area(System.Drawing.Rectangle)">
      <summary>
        这个方形区域的面积
      </summary>
      <param name="rect"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.InRegion(System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>
        Is target point in the target region?
      </summary>
      <param name="x"></param>
      <param name="rect"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.InRegion(System.Drawing.PointF,System.Drawing.Rectangle)">
      <summary>
        Is target point in the target region?
      </summary>
      <param name="x"></param>
      <param name="rect"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.GetCenter(System.Drawing.Size)">
      <summary>
        Calculate the center location of the target sized region
      </summary>
      <param name="size"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.OffSet2D(System.Drawing.Point,System.Int32,System.Int32)">
      <summary>
        返回位移的新的点位置值
      </summary>
      <param name="p"></param>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.OffSet2D(System.Drawing.Point,System.Drawing.Point)">
      <summary>
        返回位置的新的点位置值
      </summary>
      <param name="p"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.OffSet2D(System.Drawing.Point,System.Drawing.PointF)">
      <summary>
        返回位置的新的点位置值
      </summary>
      <param name="p"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.MirrorY(System.Drawing.PointF,System.Drawing.RectangleF)">
      <summary>

      </summary>
      <param name="pt">
        假设<paramref name="pt"/>是位于<paramref name="rect"/>内部的
      </param>
      <param name="rect"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.CircleRectangle(System.Drawing.PointF,System.Single)">
      <summary>
        <see cref="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)"/>
      </summary>
      <param name="center"></param>
      <param name="r!"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.GetBounds(System.Collections.Generic.IEnumerable{System.Drawing.Point})">
      <summary>
        获取目标多边形对象的边界结果，包括左上角的位置以及所占的矩形区域的大小
      </summary>
      <param name="points"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.GetBounds(System.Collections.Generic.IEnumerable{System.Drawing.PointF})">
      <summary>
        获取目标多边形对象的边界结果，包括左上角的位置以及所占的矩形区域的大小
      </summary>
      <param name="points"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.Centre(System.Drawing.Rectangle)">
      <summary>
        Gets the center location of the region rectangle.
      </summary>
      <param name="rect"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.Scale(System.Drawing.RectangleF,System.Drawing.SizeF)">
      <summary>
        Resize the rectangle
      </summary>
      <param name="rect"></param>
      <param name="factor"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.Centre(System.Collections.Generic.IEnumerable{System.Drawing.PointF})">
      <summary>
        获取目标多边形对象的中心点的坐标位置
      </summary>
      <param name="shape"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.Centre(System.Drawing.RectangleF)">
      <summary>
        Gets the center location of the region rectangle.
      </summary>
      <param name="rect"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.CentralOffset(System.Collections.Generic.IEnumerable{System.Drawing.Point},System.Drawing.Size)">
      <summary>
        获取将目标多边形置于区域的中央位置的位置偏移量
      </summary>
      <param name="pts"></param>
      <param name="frameSize"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Math2D.GeomTransform.CentralOffset(System.Collections.Generic.IEnumerable{System.Drawing.PointF},System.Drawing.SizeF)">
      <summary>
        获取将目标多边形置于区域的中央位置的位置偏移量
      </summary>
      <param name="pts"></param>
      <param name="frameSize"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.PointF3D">
      <summary>
        这个接口是为了实现Imaging模块的Point3D对象和数学函数模块的3D插值模块的兼容
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.IGraphics">
      <summary>
        Encapsulates a GDI+(bitmap, wmf)/SVG etc drawing surface. This class must be inherited.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        Draws a line connecting two System.Drawing.PointF structures.
      </summary>
      <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
      <param name="pt1">System.Drawing.PointF structure that represents the first point to connect.</param>
      <param name="pt2">System.Drawing.PointF structure that represents the second point to connect.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        Draws a line connecting two System.Drawing.Point structures.
      </summary>
      <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
      <param name="pt1">System.Drawing.Point structure that represents the first point to connect.</param>
      <param name="pt2">System.Drawing.Point structure that represents the second point to connect.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>
        Draws the specified text string at the specified location with the specified
        <see cref="T:System.Drawing.Brush"/> and <see cref="T:System.Drawing.Font"/> objects.
      </summary>
      <param name="s">String to draw.</param>
      <param name="font">System.Drawing.Font that defines the text format of the string.</param>
      <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
      <param name="point">
        System.Drawing.PointF structure that specifies the upper-left corner of the drawn
        text.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        Fills the interior of an ellipse defined by a bounding rectangle specified by
        a System.Drawing.RectangleF structure.
      </summary>
      <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
      <param name="rect">
        System.Drawing.RectangleF structure that represents the bounding rectangle that
        defines the ellipse.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.FillPie(System.Drawing.Brush,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        Fills the interior of a pie section defined by an ellipse specified by a System.Drawing.RectangleF
        structure and two radial lines.
      </summary>
      <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF"/> structure that represents the bounding rectangle that
        defines the ellipse from which the pie section comes.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the first side of the
        pie section.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the startAngle parameter to the second
        side of the pie section.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        Fills the interior of a pie section defined by an ellipse specified by a pair
        of coordinates, a width, a height, and two radial lines.
      </summary>
      <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines
        the ellipse from which the pie section comes.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the bounding rectangle that defines
        the ellipse from which the pie section comes.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse from which the pie section
        comes.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse from which the pie
        section comes.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the first side of the
        pie section.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the startAngle parameter to the second
        side of the pie section.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
      </summary>
      <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
      <param name="rect">System.Drawing.Rectangle structure that represents the rectangle to fill.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Drawing.SizeF)">
      <summary>
        <see cref="M:Microsoft.VisualBasic.Imaging.IGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)"/> extensions
      </summary>
      <param name="brush"></param>
      <param name="x!"></param>
      <param name="y!"></param>
      <param name="size"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        Fills the interior of a rectangle specified by a System.Drawing.RectangleF structure.
      </summary>
      <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
      <param name="rect">System.Drawing.RectangleF structure that represents the rectangle to fill.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.MeasureString(System.String,System.Drawing.Font)">
      <summary>
        Measures the specified string when drawn with the specified System.Drawing.Font.
      </summary>
      <param name="text">String to measure.</param>
      <param name="font">System.Drawing.Font that defines the text format of the string.</param>
      <returns>
        This method returns a System.Drawing.SizeF structure that represents the size,
        in the units specified by the System.Drawing.Graphics.PageUnit property, of the
        string specified by the text parameter as drawn with the font parameter.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.IGraphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
      <summary>
        Measures the specified string when drawn with the specified System.Drawing.Font.
      </summary>
      <param name="text">String to measure.</param>
      <param name="font">System.Drawing.Font that defines the format of the string.</param>
      <param name="width">Maximum width of the string in pixels.</param>
      <returns>
        This method returns a System.Drawing.SizeF structure that represents the size,
        in the units specified by the System.Drawing.Graphics.PageUnit property, of the
        string specified in the text parameter as drawn with the font parameter.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.GDIColors">
      <summary>
        Extensions function for the gdi+ color type.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.Middle(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        ``<paramref name="x"/> -> <paramref name="y"/>``：返回两个颜色之间的中间的颜色，这个函数是某些插值操作所需要的
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.Alpha(System.Collections.Generic.IEnumerable{System.Drawing.Color},System.Int32)">
      <summary>
        调整所输入的这一组颜色的alpha值
      </summary>
      <param name="colors"></param>
      <param name="alphaValue%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.Light(System.Drawing.Color,System.Single)">
      <summary>
        Creates a new light color object for the control from the specified color and
        lightens it by the specified percentage.
      </summary>
      <param name="base">
        The <see cref="T:System.Drawing.Color"/> to be lightened.
      </param>
      <param name="percent!">
        The percentage to lighten the specified <see cref="T:System.Drawing.Color"/>.
      </param>
      <returns>
        A <see cref="T:System.Drawing.Color"/> that represents the light color on the control.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.Dark(System.Drawing.Color,System.Single)">
      <summary>
        Creates a new dark color object for the control from the specified color and
        darkens it by the specified percentage.
      </summary>
      <param name="base">
        The <see cref="T:System.Drawing.Color"/> to be darkened.
      </param>
      <param name="percent!">
        The percentage to darken the specified <see cref="T:System.Drawing.Color"/>.
      </param>
      <returns>
        A <see cref="T:System.Drawing.Color"/> that represent the dark color on the control.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.RGBExpression(System.Drawing.Color)">
      <summary>
        ``rgb(r,g,b)``
      </summary>
      <param name="c"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.ARGBExpression(System.Drawing.Color)">
      <summary>
        ``rgb(a,r,g,b)``
      </summary>
      <param name="c"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.__getDotNetColors">
      <summary>
        Reads all of the color property from <see cref="T:System.Drawing.Color"/> and then creates the color dictionary based on the property name.
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.GDIColors.__allDotNETPrefixColors">
      <summary>
        Key都是小写的
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDIColors.AllDotNetPrefixColors">
      <summary>
        Gets all of the known name color from the Color object its shared property.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.GDIColors.ChartColors">
      <summary>
        经过人工筛选的颜色，不会出现过白或者过黑，过度相似的情况
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.GDIColors.rgbExprValues">
      <summary>
        Regex expression for parsing the rgb(a,r,g,b) expression of the color.(解析颜色表达式里面的RGB的正则表达式)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.ToColor(System.String,System.Drawing.Color,System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Color"/>.Name, rgb(a,r,g,b)
      </summary>
      <param name="str">颜色表达式或者名称</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.TranslateColor(System.String)">
      <summary>
        这个函数会尝试用不同的模式来解析颜色表达式
      </summary>
      <param name="exp$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.IsNullOrEmpty(System.Drawing.Color)">
      <summary>
        Determine that the target color value is a empty variable.(判断目标颜色值是否为空值)
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GDIColors.Equals(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        分别比较A,R,G,B这些属性值来判断这样个颜色对象值是否相等
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.FontFace">
      <summary>
        Font names collection
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.FontFace.MicrosoftYaHei">
      <summary>
        微软雅黑字体的名称
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.FontFace.GetFontName(System.String,System.String)">
      <summary>
        由于字体名称的大小写敏感，所以假若是html css之类的渲染的话，由于可能会是小写的字体名称会导致无法
        正确的加载所需要的字体，所以可以使用这个函数来消除这种由于大小写敏感而带来的bug
      </summary>
      <param name="name$"></param>
      <param name="default">默认使用Windows10的默认字体</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.DefaultFontValues">
      <summary>
        Default font values
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.ColorCube">
      <summary>
        Describes the RGB color space as a 3D cube with the origin at Black.
      </summary>
      <remarks>
        http://social.technet.microsoft.com/wiki/contents/articles/20990.generate-color-sequences-using-rgb-color-cube-in-vb-net.aspx
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorCube.Compare(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        Compares two colors according to their distance from the origin of the cube (black).
      </summary>
      <param name="source"></param>
      <param name="target"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorCube.GetBrightness(System.Drawing.Color)">
      <summary>
        Returns an integer between 0 and 255 indicating the perceived brightness of the color.
      </summary>
      <param name="target">A System.Drawing.Color instance.</param>
      <returns>An integer indicating the brightness with 0 being dark and 255 being bright.</returns>
      <remarks>
        Formula found using web search at:
        http://www.nbdtech.com/Blog/archive/2008/04/27/Calculating-the-Perceived-Brightness-of-a-Color.aspx This link is external to TechNet Wiki. It will open in a new window.
        with reference to : http://alienryderflex.com/hsp.html This link is external to TechNet Wiki. It will open in a new window.
        Effectively the same as measuring a color's distance from black, but constrained to a 0-255 range.
      </remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorCube.GetColorFrom(System.Int32,System.Int32,System.Int32)">
      <summary>
        Gets a color from within the cube starting at the origin and moving a given distance in the specified direction.
      </summary>
      <param name="azimuth">The side-to-side angle in degrees; 0 points toward red and 90 points toward blue.</param>
      <param name="elevation">The top-to-bottom angle in degrees; 0 is no green and 90 points toward full green.</param>
      <param name="distance">The distance to travel within the cube; 500 is max.</param>
      <returns>The color within the cube at the given distance in the specified direction.</returns>
      <remarks></remarks>

    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ColorCube.InvalidRange">
      <summary>
        Value must be between 0 and 90.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorCube.GetColorFrom(System.Drawing.Color,System.Double,System.Double,System.Double,System.Boolean,System.Int32)">
      <summary>
        Gets a color from within the cube starting at the specified location and moving a given distance in the specified direction.
      </summary>
      <param name="source">The source location within the cube from which to start moving.</param>
      <param name="azimuth">The side-to-side angle in degrees; 0 points toward red and 90 points toward blue.</param>
      <param name="elevation">The top-to-bottom angle in degrees; 0 is no green and 90 points toward full green.</param>
      <param name="distance">The distance to travel within the cube; the approximate distance from black to white is 500.</param>
      <returns>The color within the cube at the given distance in the specified direction.</returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorCube.GetColorsAround(System.Drawing.Color,System.Int32,System.Int32)">
      <summary>
        Creates an array of colors from a selection within a sphere around the specified color.
      </summary>
      <param name="target">The color to select around.</param>
      <param name="distance">The radius of the selection sphere.</param>
      <param name="increment">The increment within the sphere at which a selection is taken; larger numbers result in smaller selection sets.</param>
      <returns>An array of colors located around the specified color within the cube.</returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorCube.GetColorSequence(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
      <summary>
        Creates an array of colors in a gradient sequence between two specified colors.
      </summary>
      <param name="source">The starting color in the sequence.</param>
      <param name="target">The end color in the sequence.</param>
      <param name="increment">The increment between colors.</param>
      <returns>A gradient array of colors.</returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorCube.GetColorSpectrum(System.Int32)">
      <summary>
        Creates a rainbow array of colors by selecting from the edges of the cube in ROYGBIV order at the specified increment.
      </summary>
      <param name="increment">The increment along the edges at which a selection is taken; larger numbers result in smaller selection sets.</param>
      <returns>An array of colors in ROYGBIV order at the given increment.</returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorCube.GetDistance(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        Gets the distance between two colors within the cube.
      </summary>
      <param name="source">The source color in the cube.</param>
      <param name="target">The target color in the cube.</param>
      <returns>The distance between the source and target colors.</returns>
      <remarks></remarks>

    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.ColorMapsExtensions">
      <summary>
        Create Custom Color Maps
      </summary>
      <remarks>http://www.codeproject.com/Articles/18150/Create-Custom-Color-Maps-in-C</remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorMapsExtensions.ColorSequence(Microsoft.VisualBasic.Imaging.ColorMap,System.String,System.Int32)">
      <summary>
        <paramref name="mapName"/>大小写不敏感
      </summary>
      <param name="mapName"></param>
      <param name="map">
        <see cref="P:Microsoft.VisualBasic.Imaging.ColorMap.MaxDepth"/>
      </param>
      <param name="min">
        value should smaller than <see cref="P:Microsoft.VisualBasic.Imaging.ColorMap.MaxDepth"/> in parameter <paramref name="map"/>
      </param>
      <returns></returns>

    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.ColorMap.Alpha">
      <summary>
        Alpha value in the RBG color function.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorMap.#ctor(System.Int32,System.Int32)">
      <summary>

      </summary>
      <param name="colorLength%"></param>
      <param name="alpha%">
        <see cref="P:System.Drawing.Color.A"/>: color alpha value
      </param>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ColorMap.PatternSpring">
      <summary>
        Spring
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ColorMap.PatternSummer">
      <summary>
        Summer
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ColorMap.PatternAutumn">
      <summary>
        Autumn
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ColorMap.PatternWinter">
      <summary>
        Winter
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ColorMap.PatternJet">
      <summary>
        Jet
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ColorMap.PatternGray">
      <summary>
        Gray
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ColorMap.PatternHot">
      <summary>
        Hot
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ColorMap.PatternCool">
      <summary>
        Cool
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorMap.GetMaps(System.String,System.Boolean)">
      <summary>
        If failure, then this function will returns <see cref="M:Microsoft.VisualBasic.Imaging.ColorMap.Jet"/> by default,
        or nothing if parameter <paramref name="noDefault"/> is set True.
      </summary>
      <param name="name">大小写不敏感</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ColorMap.Jet">
      <summary>
        *
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.Graphics2D">
      <summary>
        GDI+ device handle for encapsulates a GDI+ drawing surface.
        (GDI+绘图设备句柄，这个对象其实是为了将gdi+绘图与图形模块的SVG绘图操作统一起来的)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.Graphics2D.ImageResource">
      <summary>
        GDI+ device handle memory.(GDI+设备之中的图像数据)
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.Graphics2D.Context">
      <summary>
        Can be serialize as a XML file node.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.Graphics2D.Size">
      <summary>
        Gets the width and height, in pixels, of this <see cref="P:Microsoft.VisualBasic.Imaging.Graphics2D.ImageResource"/>.(图像的大小)
      </summary>
      <returns>
        A <see cref="T:System.Drawing.Size"/> structure that represents the width and height, in pixels,
        of this image.
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.Graphics2D.Center">
      <summary>
        在图象上面的中心的位置点
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Graphics2D.Save(System.String,Microsoft.VisualBasic.Imaging.ImageFormats)">
      <summary>
        将GDI+设备之中的图像数据保存到指定的文件路径之中，默认的图像文件的格式为PNG格式
      </summary>
      <param name="Path"></param>
      <param name="Format">默认为png格式</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Graphics2D.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>
        将GDI+设备之中的图像数据保存到指定的文件路径之中，默认的图像文件的格式为PNG格式
      </summary>
      <param name="Path"></param>
      <param name="Format">默认为png格式</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Graphics2D.CreateDevice(System.Drawing.Size,System.Drawing.Color)">
      <summary>

      </summary>
      <param name="r"></param>
      <param name="filled">所填充的颜色</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Graphics2D.op_Explicit(Microsoft.VisualBasic.Imaging.Graphics2D)~System.Drawing.Image">
      <summary>
        Get the internal <see cref="P:Microsoft.VisualBasic.Imaging.Graphics2D.ImageResource"/>
      </summary>
      <param name="g2D"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Graphics2D.CreateObject(System.Drawing.Graphics,System.Drawing.Image)">
      <summary>
        Internal create gdi device helper.(这个函数不会克隆原来的图像对象<paramref name="res"/>)
      </summary>
      <param name="g"></param>
      <param name="res">绘图的基础图像对象</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Graphics2D.Open(System.Drawing.Image)">
      <summary>
        Creates a new <see cref="T:System.Drawing.Graphics"/> from the specified <see cref="T:System.Drawing.Image"/>.
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image"/> from which to create the new System.Drawing.Graphics.
      </param>
      <returns>
        This method returns a new <see cref="T:System.Drawing.Graphics"/> for the specified <see cref="T:System.Drawing.Image"/>.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.Wmf">
      <summary>
        Windows Metafile (WMF) is an image file format originally designed for Microsoft Windows in the 1990s.
        Windows Metafiles are intended to be portable between applications and may contain both vector graphics
        and bitmap components. It acts in a similar manner to SVG files.

        Essentially, a WMF file stores a list of function calls that have to be issued to the Windows Graphics
        Device Interface (GDI) layer to display an image on screen. Since some GDI functions accept pointers
        to callback functions for error handling, a WMF file may erroneously include executable code.

        WMF Is a 16-bit format introduced in Windows 3.0. It Is the native vector format for Microsoft Office
        applications such as Word, PowerPoint, And Publisher. As of 2015 revision 12 of the Windows Metafile
        Format specification Is available for online reading Or download as PDF.
      </summary>
      <remarks>
        The original 16 bit WMF file format was fully specified in volume 4 of the 1992 Windows 3.1 SDK documentation
        (at least if combined with the descriptions of the individual functions and structures in the other volumes),
        but that specification was vague about a few details. These manuals were published as printed books available
        in bookstores with no click through EULA or other unusual licensing restrictions (just a general warning that
        if purchased as part of a software bundle, the software would be subject to one).

        Over time the existence Of that historic specification was largely forgotten And some alternative implementations
        resorted To reverse engineering To figure out the file format from existing WMF files, which was difficult And
        Error prone. In September 2006, Microsoft again published the WMF file format specification In the context Of
        the Microsoft Open Specification Promise, promising To Not assert patent rights To file format implementors.
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.Wmf.FilePath">
      <summary>
        The file path of the target wmf image file.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.Wmf.#ctor(System.Drawing.Size,System.String,System.String)">
      <summary>
        The WMF format was designed to be executed by the Windows GDI layer in order to restore the image, but as
        the WMF binary files contain the definition of the GDI graphic primitives that constitute this image, it is
        possible to design alternative libraries that render WMF binary files, like the Kyktir application does, or
        convert them into other graphic formats. For example, the Batik library is able to render WMF files and
        convert them to their Scalable Vector Graphics (SVG) equivalent. The Vector Graphics package of the FreeHEP
        Java library allows the saving of Java2D drawings as Enhanced Metafiles (EMF). Inkscape and XnView can export
        to WMF or EMF.
      </summary>
      <param name="size"></param>
      <param name="save$"></param>
      <param name="backgroundColor$"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.TiffWriter.SaveToExistingFile(System.String,System.Drawing.Image[],System.String)">
      <summary>
        This function can save newly scanned images on existing single page or multipage file
      </summary>
      <param name="fileName"></param>
      <param name="bmp"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.ImageFormats">
      <summary>
        Specifies the file format of the image.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Bmp">
      <summary>
        Gets the bitmap (BMP) image format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Emf">
      <summary>
        Gets the enhanced metafile (EMF) image format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Exif">
      <summary>
        Gets the Exchangeable Image File (Exif) format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Gif">
      <summary>
        Gets the Graphics Interchange Format (GIF) image format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Icon">
      <summary>
        Gets the Windows icon image format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Jpeg">
      <summary>
        Gets the Joint Photographic Experts Group (JPEG) image format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.MemoryBmp">
      <summary>
        Gets the format of a bitmap in memory.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Png">
      <summary>
        Gets the W3C Portable Network Graphics (PNG) image format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Tiff">
      <summary>
        Gets the Tagged Image File Format (TIFF) image format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Wmf">
      <summary>
        Gets the Windows metafile (WMF) image format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Imaging.ImageFormats.Base64">
      <summary>
        Base64
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.ImageFormatExtensions">
      <summary>
        Specifies the file format of the image. Not inheritable.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Imaging.ImageFormatExtensions.Png">
      <summary>
        获取 W3C 可移植网络图形 (PNG) 图像格式。
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ImageFormatExtensions.GetSaveImageFormat(System.String)">
      <summary>
        default is <see cref="P:System.Drawing.Imaging.ImageFormat.Png"/>
      </summary>
      <param name="format">大小写不敏感</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ImageFormatExtensions.ParseImageFormat(System.String)">
      <summary>
        不存在的名称会返回<see cref="F:Microsoft.VisualBasic.Imaging.ImageFormats.Png"/>类型
      </summary>
      <param name="format$">大小写不敏感</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.ImageFormatExtensions.SaveAs(System.Drawing.Image,System.String,Microsoft.VisualBasic.Imaging.ImageFormats,System.Boolean)">
      <summary>
        Saves this <see cref="T:System.Drawing.Image"/> to the specified file in the specified format.
        (这个函数可以很容易的将图像对象保存为tiff文件)
      </summary>
      <param name="res">
        The image resource data that will be saved to the disk.
        (因为这个函数可能会被<see cref="P:Microsoft.VisualBasic.Imaging.Graphics2D.ImageResource"/>所调用，
        由于该属性的Set方法是不公开可见的，所以将会不兼容这个方法，如果这个
        参数被设置为ByRef的话)
      </param>
      <param name="path">path string</param>
      <param name="format">Image formats enumeration.</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Imaging.GraphicsExtensions">
      <summary>
        GDI+
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.GetBrush(System.String)">
      <summary>
        同时兼容颜色以及图片纹理画刷的创建
      </summary>
      <param name="res$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.GetBrushes(System.Collections.Generic.IEnumerable{System.Drawing.Color})">
      <summary>
        Converts the colors into solidbrushes in batch.
      </summary>
      <param name="colors"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.DrawCircle(System.Drawing.Graphics@,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
        模仿Java之中的``DrawCircle``方法
      </summary>
      <param name="g"></param>
      <param name="color"></param>
      <param name="x!"></param>
      <param name="y!"></param>
      <param name="r!"></param>
      <param name="fill"></param>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.DrawCircle(Microsoft.VisualBasic.Imaging.IGraphics@,System.Drawing.PointF,System.Single,System.Drawing.Pen,System.Boolean)">
      <summary>
        进行圆的绘制
      </summary>
      <param name="g"></param>
      <param name="centra">
        圆心的坐标，这个函数之中会自动转换为<see cref="T:System.Drawing.Rectangle"/>的左上角位置坐标
      </param>
      <param name="r!">圆的半径</param>
      <param name="color">线条的颜色</param>
      <param name="fill">是否进行填充？</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.EntireImage(System.Drawing.Image)">
      <summary>
        返回整个图像的区域
      </summary>
      <param name="img"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.GetIcon(System.Drawing.Image)">
      <summary>
        Convert image to icon
      </summary>
      <param name="res"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.GetIcon(System.Drawing.Bitmap)">
      <summary>
        Convert image to icon
      </summary>
      <param name="res"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.LoadImage(System.String,System.Boolean)">
      <summary>
        Load image from a file and then close the file handle.
        (使用<see cref="M:System.Drawing.Image.FromFile(System.String)"/>函数在加载完成图像到Dispose这段之间内都不会释放文件句柄，
        则使用这个函数则没有这个问题，在图片加载之后会立即释放掉文件句柄)
      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.GetRawStream(System.Drawing.Image)">
      <summary>
        将图片对象转换为原始的字节流
      </summary>
      <param name="image"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.ImageAddFrame(Microsoft.VisualBasic.Imaging.Graphics2D,System.Drawing.Pen,System.Int32)">
      <summary>
        Adding a frame box to the target image source.(为图像添加边框)
      </summary>
      <param name="canvas"></param>
      <param name="pen">
        Default pen width is 1px and with color <see cref="P:System.Drawing.Color.Black"/>.(默认的绘图笔为黑色的1个像素的边框)
      </param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.CreateGDIDevice(System.Drawing.SizeF,System.Drawing.Color)">
      <summary>
        创建一个GDI+的绘图设备
      </summary>
      <param name="r"></param>
      <param name="filled">默认的背景填充颜色为白色</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.GDIPlusDeviceHandleFromImageFile(System.String)">
      <summary>
        从指定的文件之中加载GDI+设备的句柄
      </summary>
      <param name="path"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.CreateCanvas2D(System.Drawing.Image,System.Boolean,System.String)">
      <summary>
        无需处理图像数据，这个函数默认已经自动克隆了该对象，不会影响到原来的对象，
        除非你将<paramref name="directAccess"/>参数设置为真，函数才不会自动克隆图像对象
      </summary>
      <param name="res"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.CreateGDIDevice(System.Drawing.Size,System.Drawing.Color,System.String,System.String)">
      <summary>
        创建一个GDI+的绘图设备，默认的背景填充色为白色
      </summary>
      <param name="r"></param>
      <param name="filled">默认的背景填充颜色为白色</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.MethodsExtension.TryInvoke``2(System.Func{``0,``1},``0,``1)">
      <summary>
        尝试将目标对象放入到函数指针之中来运行，运行失败的时候回返回<paramref name="default"/>默认值
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="TOut"></typeparam>
      <param name="input"></param>
      <param name="proc"></param>
      <param name="[default]"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.HttpGet">
      <summary>
        Tools for http get
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HttpGet.GET(System.String,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.String,System.String)">
      <summary>
        Get the html page content from a website request or a html file on the local filesystem.
        (同时支持http位置或者本地文件，失败或者错误会返回空字符串)
      </summary>
      <param name="url">web http request url or a file path handle</param>
      <param name="retry">发生错误的时候的重试的次数</param>
      <returns>失败或者错误会返回空字符串</returns>
      <remarks>这个工具只适合于文本数据的传输操作</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.AssertEqualsExtensions.All``1(Microsoft.VisualBasic.Language.Vectorization.Vector{``0})">
      <summary>
        Assert that all of the elements in target vector match the test conditions
      </summary>
      <typeparam name="T"></typeparam>
      <param name="vector"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.AssertEqualsExtensions.Any``1(Microsoft.VisualBasic.Language.Vectorization.Vector{``0})">
      <summary>
        Assert that any of the elements in target vector match the test conditions
      </summary>
      <typeparam name="T"></typeparam>
      <param name="vector"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.AssertAll`1.op_Equality(Microsoft.VisualBasic.Language.AssertAll{`0},`0)">
      <summary>
        Does the elements in this vector all equals to a specific value <paramref name="x"/>?
      </summary>
      <param name="assert"></param>
      <param name="x"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.AssertAny`1.op_Equality(Microsoft.VisualBasic.Language.AssertAny{`0},`0)">
      <summary>
        Does the elements in this vector all equals to a specific value <paramref name="x"/>?
      </summary>
      <param name="assert"></param>
      <param name="x"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Language.Vectorization.BooleanVector">
      <summary>
        <see cref="T:System.Boolean"/> Array
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.BooleanVector.True">
      <summary>
        Only one boolean value ``True`` in the array list
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.BooleanVector.False">
      <summary>
        Only one boolean value ``False`` in the array list
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.BooleanVector.op_Concatenate(System.Boolean,Microsoft.VisualBasic.Language.Vectorization.BooleanVector)">
      <summary>
        And
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.BooleanVector.op_Concatenate(Microsoft.VisualBasic.Language.Vectorization.BooleanVector,Microsoft.VisualBasic.Language.Vectorization.BooleanVector)">
      <summary>
        X AndAlso Y
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.BooleanVector.op_OnesComplement(Microsoft.VisualBasic.Language.Vectorization.BooleanVector)">
      <summary>
        将逻辑向量之中的每一个逻辑值都进行翻转
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.BooleanVector.op_Explicit(Microsoft.VisualBasic.Language.Vectorization.BooleanVector)~System.Boolean">
      <summary>
        x(0)
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.BooleanVector.op_BitwiseOr(Microsoft.VisualBasic.Language.Vectorization.BooleanVector,System.Boolean[])">
      <summary>
        x Or Y
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.BooleanVector.op_BitwiseOr(Microsoft.VisualBasic.Language.Vectorization.BooleanVector,Microsoft.VisualBasic.Language.Vectorization.BooleanVector)">
      <summary>
        x Or Y
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.BooleanVector.op_Explicit(Microsoft.VisualBasic.Language.Vectorization.BooleanVector)~System.Boolean[]">
      <summary>
        <see cref="M:Microsoft.VisualBasic.RegexExtensions.ToArray(System.Text.RegularExpressions.MatchCollection)"/>
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider">
      <summary>
        Schema provider of the <see cref="T:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1"/>
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider.operatorsUnary">
      <summary>
        单目运算符无重名的问题
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider.operatorsBinary">
      <summary>
        双目运算符重载会带来重名运算符的问题
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider.methods">
      <summary>
        The overloads function
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider.GetDynamicMemberNames">
      <summary>
        Returns property names and function names
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider.TryGetMember(System.Dynamic.GetMemberBinder)">
      <summary>
        Property Get
      </summary>
      <param name="binder"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider.TrySetMember(System.Dynamic.SetMemberBinder)">
      <summary>
        Property Set
      </summary>
      <param name="binder"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[])">
      <summary>
        Function invoke
      </summary>
      <param name="binder"></param>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider.Concatenate(System.Type,System.Boolean@)">
      <summary>
        Fix for &amp; operator not defined!
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorSchemaProvider.Like(System.Type,System.Boolean@)">
      <summary>
        Fix for Like operator not defined in Linq.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Vectorization.Vector`1">
      <summary>
        VB.NET object collection
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Vectorization.Vector`1.buffer">
      <summary>
        Array that hold the .NET object in this collection
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Length">
      <summary>
        Gets the element counts in this vector collection
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Last">
      <summary>
        The last elements in the collection <see cref="T:Microsoft.VisualBasic.Language.List`1"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.First">
      <summary>
        The first elements in the collection <see cref="T:Microsoft.VisualBasic.Language.List`1"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Item(System.Object)">
      <summary>

      </summary>
      <param name="args">同时支持boolean和integer</param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Item(Microsoft.VisualBasic.ComponentModel.IAddress{System.Int32})">
      <summary>
        This indexer property is using for the ODEs-system computing.
        (这个是为了ODEs计算模块所准备的一个数据接口)
      </summary>
      <param name="address"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Item(System.Int32)">
      <summary>
        Direct get the element in the array by its index.
      </summary>
      <param name="index%"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Item(System.String)">
      <summary>
        Using a index vector expression to select/update many elements from this list collection.
      </summary>
      <param name="exp$">
        + ``1``, index=1
        + ``1:8``, index=1, count=8
        + ``1->8``, index from 1 to 8
        + ``8->1``, index from 8 to 1
        + ``1,2,3,4``, index=1 or  2 or 3 or 4
      </param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Item(Microsoft.VisualBasic.ComponentModel.Ranges.IntRange)">
      <summary>
        Get subset of the collection by using a continues index
      </summary>
      <param name="range"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Item(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
        Gets subset of the collection by using a discontinues index
      </summary>
      <param name="indices"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Item(System.Predicate{`0})">
      <summary>
        Select all of the elements from this list collection is any of them match the condition expression: <paramref name="where"/>
      </summary>
      <param name="[where]"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Vectorization.Vector`1.Item(System.Collections.Generic.IEnumerable{System.Boolean})">
      <summary>
        Select elements by logical condiction result.
      </summary>
      <param name="booleans"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.Vector`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
        构建一个新的向量对象，这个向量对象只提供基本的数据存储和访问模型，并没有提供高级的动态处理和模式解析的操作
      </summary>
      <param name="data"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.Vector`1.op_Explicit(Microsoft.VisualBasic.Language.Vectorization.Vector{`0})~`0[]">
      <summary>
        没用？？？
      </summary>
      <param name="v"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.Vector`1.op_Concatenate(Microsoft.VisualBasic.Language.Vectorization.Vector{`0},Microsoft.VisualBasic.Language.Vectorization.Vector{`0})">
      <summary>
        Append the elements in vector <paramref name="a"/> with all of the elements in vector <paramref name="b"/> directly.
        Union two collection directly without <see cref="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})"/> operation.
        (请注意，使用<see cref="T:Microsoft.VisualBasic.ComponentModel.DataStructures.Set"/>集合对象的Union功能会去除重复，而这个操作符则是直接进行合并取``并集``而不去重)
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1">
      <summary>
        Vectorization programming language feature for VisualBasic
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1.linq">
      <summary>
        无参数的属性
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1.GetDynamicMemberNames">
      <summary>
        Returns property names and function names
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1.GetJson">
      <summary>
        Vector array json string
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1.CreateVector(System.Collections.IEnumerable,System.Type)">
      <summary>
        Create a generic vector for a specific .NET <paramref name="type"/>
      </summary>
      <param name="data"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>
        Property Get
      </summary>
      <param name="binder"></param>
      <param name="result"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>
        Property Set
      </summary>
      <param name="binder"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>
        Function invoke
      </summary>
      <param name="binder"></param>
      <param name="args"></param>
      <param name="result"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1.op_Concatenate(Microsoft.VisualBasic.Language.Vectorization.VectorShadows{`0},System.Object)">
      <summary>
        Fix for &amp; operator not defined!
      </summary>
      <param name="vector"></param>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Vectorization.VectorShadows`1.op_Like(Microsoft.VisualBasic.Language.Vectorization.VectorShadows{`0},System.Object)">
      <summary>
        Fix for Like operator not defined in Linq.
      </summary>
      <param name="vector"></param>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Default.DefaultString">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CommandLine.CommandLine"/> optional value helper data model
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Default.DefaultString.DefaultValue">
      <summary>
        The optional argument value that read from <see cref="T:Microsoft.VisualBasic.CommandLine.CommandLine"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Default.DefaultString.IsEmpty">
      <summary>
        <see cref="P:Microsoft.VisualBasic.Language.Default.DefaultString.DefaultValue"/> is empty?
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Default.DefaultString.op_BitwiseOr(Microsoft.VisualBasic.Language.Default.DefaultString,System.String)">
      <summary>
        If <paramref name="value"/> is empty then returns <paramref name="default"/>, else returns <paramref name="value"/> itself.
      </summary>
      <param name="value"></param>
      <param name="default$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Default.BinaryAssert`1">
      <summary>
        + Test of A eqauls to B?
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Default.IsEmpty">
      <summary>
        Apply on the structure type that assert the object is null or not.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Default.DefaultValue`1">
      <summary>
        The default value
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Default.DefaultValue`1.Value">
      <summary>
        The default value for <see cref="P:Microsoft.VisualBasic.Language.Default.DefaultValue`1.DefaultValue"/>
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Default.DefaultValue`1.LazyValue">
      <summary>
        假若生成目标值的时间比较久，可以将其申明为Lambda表达式，这样子可以进行惰性加载
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Default.DefaultValue`1.assert">
      <summary>
        asset that if target value is null?
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Default.DefaultValue`1.op_Addition(Microsoft.VisualBasic.Language.Default.DefaultValue{`0},Microsoft.VisualBasic.Language.Default.Assert{System.Object})">
      <summary>
        Add handler
      </summary>
      <param name="[default]"></param>
      <param name="assert"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.Default.DefaultValue`1.op_BitwiseOr(`0,Microsoft.VisualBasic.Language.Default.DefaultValue{`0})">
      <summary>
        if <see cref="F:Microsoft.VisualBasic.Language.Default.DefaultValue`1.assert"/> is true, then will using default <see cref="F:Microsoft.VisualBasic.Language.Default.DefaultValue`1.Value"/>,
        otherwise, return the source <paramref name="obj"/>.
      </summary>
      <param name="obj"></param>
      <param name="[default]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.ArgumentReference.op_Equality(Microsoft.VisualBasic.Language.ArgumentReference,System.Object)">
      <summary>
        Argument variable value assign
      </summary>
      <param name="var">The argument name</param>
      <param name="value">argument value</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Runtime">
      <summary>
        Runtime helper

        ```vbnet
        Imports VB = Microsoft.VisualBasic.Language.Runtime

        With New VB
        ' ...
        End With
        ```
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Runtime.Argument(System.String)">
      <summary>
        Language syntax supports for argument list
      </summary>
      <param name="name$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.C.RandomNumbers">
      <summary>
        This class provides the ability to simulate the behavior of the C/C++ functions for
        generating random numbers, using the .NET Framework <see cref="T:System.Random"/> class.

        + ``rand`` converts to the parameterless overload of NextNumber
        + ``random`` converts to the single-parameter overload of NextNumber
        + ``randomize`` converts to the parameterless overload of Seed
        + ``srand`` converts to the single-parameter overload of Seed
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.RandomNumbers.rand">
      <summary>
        <see cref="M:System.Random.Next"/>.(线程安全的函数)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.RandomNumbers.random(System.Int32)">
      <summary>
        <see cref="M:System.Random.Next(System.Int32)"/>.(线程安全的函数)
      </summary>
      <param name="ceiling"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.C.CString">
      <summary>
        This class provides the ability to simulate various classic C string functions
        which don't have exact equivalents in the .NET Framework.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CString.ChangeCharacter(System.String,System.Int32,System.Char)">
      <summary>
        This method allows replacing a single character in a string, to help convert
        C++ code where a single character in a character array is replaced.
      </summary>
      <param name="sourcestring"></param>
      <param name="charindex"></param>
      <param name="changechar"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CString.IsXDigit(System.Char)">
      <summary>
        This method simulates the classic C string function 'isxdigit' (and 'iswxdigit').
      </summary>
      <param name="character"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CString.StrChr(System.String,System.Char)">
      <summary>
        This method simulates the classic C string function 'strchr' (and 'wcschr').
      </summary>
      <param name="stringtosearch"></param>
      <param name="chartofind"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CString.StrRChr(System.String,System.Char)">
      <summary>
        This method simulates the classic C string function 'strrchr' (and 'wcsrchr').
      </summary>
      <param name="stringtosearch"></param>
      <param name="chartofind"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CString.StrStr(System.String,System.String)">
      <summary>
        This method simulates the classic C string function 'strstr' (and 'wcsstr').
      </summary>
      <param name="stringtosearch"></param>
      <param name="stringtofind"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CString.__tokensHelper.StrTok(System.String,System.String)">
      <summary>
        This method simulates the classic C string function 'strtok' (and 'wcstok').
        Note that the .NET string 'Split' method cannot be used to simulate 'strtok' since
        it doesn't allow changing the delimiters between each token retrieval.
      </summary>
      <param name="stringtotokenize"></param>
      <param name="delimiters"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CString.StrTok(System.String,System.String)">
      <summary>
        This method simulates the classic C string function 'strtok' (and 'wcstok').
        Note that the .NET string 'Split' method cannot be used to simulate 'strtok' since
        it doesn't allow changing the delimiters between each token retrieval.
      </summary>
      <param name="stringtotokenize"></param>
      <param name="delimiters"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.C.File.SEEK_SET">
      <summary>
        Specifies the beginning of a stream.(文件开头)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.C.File.SEEK_CUR">
      <summary>
        Specifies the current position within a stream.(当前位置)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.C.File.SEEK_END">
      <summary>
        Specifies the end of a stream.(文件结束)
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider">
      <summary>
        Provides C like format print
      </summary>
      <remarks>https://github.com/mlnlover11/SharpLua</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.IsPositive(System.Object,System.Boolean)">
      <summary>
        Determines whether the specified value is positive.
      </summary>
      <param name="Value">The value.</param>
      <param name="ZeroIsPositive">if set to true treats 0 as positive.</param>
      <returns>
        true if the specified value is positive; otherwise, false.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.ToUnsigned(System.Object)">
      <summary>
        Converts the specified values boxed type to its correpsonding unsigned
        type.
      </summary>
      <param name="Value">The value.</param>
      <returns>A boxed numeric object whos type is unsigned.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.ToInteger(System.Object,System.Boolean)">
      <summary>
        Converts the specified values boxed type to its correpsonding integer
        type.
      </summary>
      <param name="Value">The value.</param>
      <returns>A boxed numeric object whos type is an integer type.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.ReplaceMetaChars(System.String)">
      <summary>
        Replaces the string representations of meta chars with their corresponding
        character values..(替换掉转义字符)
      </summary>
      <param name="input">The input.</param>
      <returns>A string with all string meta chars are replaced</returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.Formats">
      <summary>
        %[parameter][flags][width][.precision][length]type
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.sprintf(System.String,System.Object[])">
      <summary>
        Format string like C
      </summary>
      <param name="Format"></param>
      <param name="Parameters"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Java.Line2D">
      <summary>
        This <code>Line2D</code> represents a line segment in {@code (x,y)}
        coordinate space.  This [Class], like all of the Java 2D API, uses a
        default coordinate system called <i>user space</i> in which the y-axis
        values increase downward and x-axis values increase to the right.  For
        more information on the user space coordinate system, see the
        <a href="https://docs.oracle.com/javase/1.3/docs/guide/2d/spec/j2d-intro.fm2.html#61857">
          Coordinate Systems
        </a> section of the Java 2D Programmer's Guide.

        This class is only the abstract superclass for all objects that
        store a 2D line segment.
        The actual storage representation of the coordinates is left to
        the subclass.

        @author      Jim Graham
        @since 1.2
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Line2D.relativeCCW(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Returns an indicator of where the specified point
        {@code (px,py)} lies with respect to the line segment from
        {@code (x1,y1)} to {@code (x2,y2)}.

        The return value can be either 1, -1, or 0 and indicates
        in which direction the specified line must pivot around its
        first end point, {@code (x1,y1)}, in order to point at the
        specified point {@code (px,py)}.

        A return value of 1 indicates that the line segment must
        turn in the direction that takes the positive X axis towards
        the negative Y axis.  In the default coordinate system used by
        Java 2D, this direction is counterclockwise.

        A return value of -1 indicates that the line segment must
        turn in the direction that takes the positive X axis towards
        the positive Y axis.  In the default coordinate system, this
        direction is clockwise.

        A return value of 0 indicates that the point lies
        exactly on the line segment.  Note that an indicator value
        of 0 is rare and not useful for determining collinearity
        because of floating point rounding issues.

        If the point is colinear with the line segment, but
        not between the end points, then the value will be -1 if the point
        lies "beyond {@code (x1,y1)}" or 1 if the point lies
        "beyond {@code (x2,y2)}".
      </summary>
      <param name="x1">
        the X coordinate of the start point of the
        specified line segment
      </param>
      <param name="y1">
        the Y coordinate of the start point of the
        specified line segment
      </param>
      <param name="x2">
        the X coordinate of the end point of the
        specified line segment
      </param>
      <param name="y2">
        the Y coordinate of the end point of the
        specified line segment
      </param>
      <param name="px">
        the X coordinate of the specified point to be
        compared with the specified line segment
      </param>
      <param name="py">
        the Y coordinate of the specified point to be
        compared with the specified line segment
      </param>
      <returns>
        an integer that indicates the position of the third specified
        coordinates with respect to the line segment formed
        by the first two specified coordinates.
        @since 1.2
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Line2D.linesIntersect(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Tests if the line segment from {@code (x1,y1)} to
        {@code (x2,y2)} intersects the line segment from {@code (x3,y3)}
        to {@code (x4,y4)}.
      </summary>
      <param name="x1">
        the X coordinate of the start point of the first
        specified line segment
      </param>
      <param name="y1">
        the Y coordinate of the start point of the first
        specified line segment
      </param>
      <param name="x2">
        the X coordinate of the end point of the first
        specified line segment
      </param>
      <param name="y2">
        the Y coordinate of the end point of the first
        specified line segment
      </param>
      <param name="x3">
        the X coordinate of the start point of the second
        specified line segment
      </param>
      <param name="y3">
        the Y coordinate of the start point of the second
        specified line segment
      </param>
      <param name="x4">
        the X coordinate of the end point of the second
        specified line segment
      </param>
      <param name="y4">
        the Y coordinate of the end point of the second
        specified line segment
      </param>
      <returns>
        <code>true</code> if the first specified line segment
        and the second specified line segment intersect
        each other; <code>false</code> otherwise.
        @since 1.2
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Line2D.ptSegDistSq(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Returns the square of the distance from a point to a line segment.
        The distance measured is the distance between the specified
        point and the closest point between the specified end points.
        If the specified point intersects the line segment in between the
        end points, this method returns 0.0.
      </summary>
      <param name="x1">
        the X coordinate of the start point of the
        specified line segment
      </param>
      <param name="y1">
        the Y coordinate of the start point of the
        specified line segment
      </param>
      <param name="x2">
        the X coordinate of the end point of the
        specified line segment
      </param>
      <param name="y2">
        the Y coordinate of the end point of the
        specified line segment
      </param>
      <param name="px">
        the X coordinate of the specified point being
        measured against the specified line segment
      </param>
      <param name="py">
        the Y coordinate of the specified point being
        measured against the specified line segment
      </param>
      <returns>
        a double value that is the square of the distance from the
        specified point to the specified line segment.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Line2D.ptSegDist(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Returns the distance from a point to a line segment.
        The distance measured is the distance between the specified
        point and the closest point between the specified end points.
        If the specified point intersects the line segment in between the
        end points, this method returns 0.0.
      </summary>
      <param name="x1">
        the X coordinate of the start point of the
        specified line segment
      </param>
      <param name="y1">
        the Y coordinate of the start point of the
        specified line segment
      </param>
      <param name="x2">
        the X coordinate of the end point of the
        specified line segment
      </param>
      <param name="y2">
        the Y coordinate of the end point of the
        specified line segment
      </param>
      <param name="px">
        the X coordinate of the specified point being
        measured against the specified line segment
      </param>
      <param name="py">
        the Y coordinate of the specified point being
        measured against the specified line segment
      </param>
      <returns>
        a double value that is the distance from the specified point
        to the specified line segment.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Line2D.ptLineDistSq(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Returns the square of the distance from a point to a line.
        The distance measured is the distance between the specified
        point and the closest point on the infinitely-extended line
        defined by the specified coordinates.  If the specified point
        intersects the line, this method returns 0.0.
      </summary>
      <param name="x1"> the X coordinate of the start point of the specified line </param>
      <param name="y1"> the Y coordinate of the start point of the specified line </param>
      <param name="x2"> the X coordinate of the end point of the specified line </param>
      <param name="y2"> the Y coordinate of the end point of the specified line </param>
      <param name="px">
        the X coordinate of the specified point being
        measured against the specified line
      </param>
      <param name="py">
        the Y coordinate of the specified point being
        measured against the specified line
      </param>
      <returns>
        a double value that is the square of the distance from the
        specified point to the specified line.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Line2D.ptLineDist(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        Returns the distance from a point to a line.
        The distance measured is the distance between the specified
        point and the closest point on the infinitely-extended line
        defined by the specified coordinates.  If the specified point
        intersects the line, this method returns 0.0.
      </summary>
      <param name="x1"> the X coordinate of the start point of the specified line </param>
      <param name="y1"> the Y coordinate of the start point of the specified line </param>
      <param name="x2"> the X coordinate of the end point of the specified line </param>
      <param name="y2"> the Y coordinate of the end point of the specified line </param>
      <param name="px">
        the X coordinate of the specified point being
        measured against the specified line
      </param>
      <param name="py">
        the Y coordinate of the specified point being
        measured against the specified line
      </param>
      <returns>
        a double value that is the distance from the specified
        point to the specified line.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Java.Collections">
      <summary>
        This class consists exclusively of static methods that operate on or return
        collections.  It contains polymorphic algorithms that operate on
        collections, "wrappers", which return a new collection backed by a
        specified collection, and a few other odds and ends.

        &lt;p>The methods of this class all throw a <tt>NullPointerException</tt>
        if the collections or class objects provided to them are null.

        &lt;p>The documentation for the polymorphic algorithms contained in this class
        generally includes a brief description of the <i>implementation</i>.  Such
        descriptions should be regarded as <i>implementation notes</i>, rather than
        parts of the <i>specification</i>.  Implementors should feel free to
        substitute other algorithms, so long as the specification itself is adhered
        to.  (For example, the algorithm used by <tt>sort</tt> does not have to be
        a mergesort, but it does have to be <i>stable</i>.)

        &lt;p>The "destructive" algorithms contained in this [Class], that is, the
        algorithms that modify the collection on which they operate, are specified
        to throw <tt>UnsupportedOperationException</tt> if the collection does not
        support the appropriate mutation primitive(s), such as the <tt>set</tt>
        method.  These algorithms may, but are not required to, throw this
        exception if an invocation would have no effect on the collection.  For
        example, invoking the <tt>sort</tt> method on an unmodifiable list that is
        already sorted may or may not throw <tt>UnsupportedOperationException</tt>.

        &lt;p>This class is a member of the
        <a href="{@docRoot}/../technotes/guides/collections/index.html">
          Java Collections Framework
        </a>.

        @author  Josh Bloch
        @author  Neal Gafter
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Collections.binarySearch``1(Microsoft.VisualBasic.Language.List{``0},``0)">
      <summary>
        Searches the specified list for the specified object using the binary
        search algorithm.  The list must be sorted into ascending order
        according to the Comparable natural ordering of its
        elements (as by the #sort(List) method) prior to making this
        call.  If it is not sorted, the results are undefined.  If the list
        contains multiple elements equal to the specified object, there is no
        guarantee which one will be found.

        &lt;p>This method runs in log(n) time for a "random access" list (which
        provides near-constant-time positional access).  If the specified list
        does not implement the RandomAccess interface and is large,
        this method will do an iterator-based binary search that performs
        O(n) link traversals and O(log n) element comparisons.
      </summary>
      <typeparam name="T">the class of the objects in the list</typeparam>
      <param name="list"> the list to be searched. </param>
      <param name="key"> the key to be searched for. </param>
      <returns>
        the index of the search key, if it is contained in the list;
        otherwise, &lt;tt>(-(&lt;i>insertion point&lt;/i>) - 1)&lt;/tt>.  The
        &lt;i>insertion point&lt;/i> is defined as the point at which the
        key would be inserted into the list: the index of the first
        element greater than the key, or &lt;tt>list.size()&lt;/tt> if all
        elements in the list are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Collections.get``1(System.Collections.Generic.IEnumerator{``0},System.Int32)">
      <summary>
        Gets the ith element from the given list by repositioning the specified
        list listIterator.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Collections.binarySearch``1(Microsoft.VisualBasic.Language.List{``0},``0,System.Collections.Generic.IComparer{``0})">
      <summary>
        Searches the specified list for the specified object using the binary
        search algorithm.  The list must be sorted into ascending order
        according to the specified comparator (as by the
        #sort(List, Comparator) sort(List, Comparator)
        method), prior to making this call.  If it is
        not sorted, the results are undefined.  If the list contains multiple
        elements equal to the specified object, there is no guarantee which one
        will be found.

        &lt;p>This method runs in log(n) time for a "random access" list (which
        provides near-constant-time positional access).  If the specified list
        does not implement the RandomAccess interface and is large,
        this method will do an iterator-based binary search that performs
        O(n) link traversals and O(log n) element comparisons.
      </summary>
      <typeparam name="T">the class of the objects in the list</typeparam>
      <param name="list"> the list to be searched. </param>
      <param name="key"> the key to be searched for. </param>
      <param name="c">
        the comparator by which the list is ordered.
        A <tt>null</tt> value indicates that the elements'
        Comparable natural ordering should be used.
      </param>
      <returns>
        the index of the search key, if it is contained in the list;
        otherwise, <tt>
          (-(<i>insertion point</i>) - 1)
        </tt>.  The
        <i>insertion point</i> is defined as the point at which the
        key would be inserted into the list: the index of the first
        element greater than the key, or <tt>list.size()</tt> if all
        elements in the list are less than the specified key.  Note
        that this guarantees that the return value will be &gt;= 0 if
        and only if the key is found.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Reflection.GetConstructor(System.Type)">
      <summary>
        Gets the default class constructor

        ```vbnet
        Dim o As New &lt;<paramref name="type"/>>()
        ```
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.Arrays.sublist``1(Microsoft.VisualBasic.Language.List{``0},System.Int32,System.Int32)">
      <summary>
        Returns a view of the portion of this list between the specified fromIndex, inclusive,
        and toIndex, exclusive. (If fromIndex and toIndex are equal, the returned list is empty.)
        The returned list is backed by this list, so non-structural changes in the returned
        list are reflected in this list, and vice-versa. The returned list supports all of the
        optional list operations supported by this list.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="list"></param>
      <param name="fromIndex%">low endpoint (inclusive) of the subList</param>
      <param name="toIndex%">high endpoint (exclusive) of the subList</param>
      <returns>a view of the specified range within this list</returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Language.Java.JavaMath">
      <summary>
        The class {@code Math} contains methods for performing basic
        numeric operations such as the elementary exponential, logarithm,
        square root, and trigonometric functions.

        Unlike some of the numeric methods of class
        {@code StrictMath}, all implementations of the equivalent
        functions of class {@code Math} are not defined to return the
        bit-for-bit same results.  This relaxation permits
        better-performing implementations where strict reproducibility is
        not required.

        By default many of the {@code Math} methods simply call
        the equivalent method in {@code StrictMath} for their
        implementation.  Code generators are encouraged to use
        platform-specific native libraries or microprocessor instructions,
        where available, to provide higher-performance implementations of
        {@code Math} methods.  Such higher-performance
        implementations still must conform to the specification for
        {@code Math}.

        The quality of implementation specifications concern two
        properties, accuracy of the returned result and monotonicity of the
        method.  Accuracy of the floating-point {@code Math} methods is
        measured in terms of _ulps_, units in the last place.  For a
        given floating-point format, an #ulp(double) ulp of a
        specific real number value is the distance between the two
        floating-point values bracketing that numerical value.  When
        discussing the accuracy of a method as a whole rather than at a
        specific argument, the number of ulps cited is for the worst-case
        error at any argument.  If a method always has an error less than
        0.5 ulps, the method always returns the floating-point number
        nearest the exact result; such a method is _correctly
        rounded_.  A correctly rounded method is generally the best a
        floating-point approximation can be; however, it is impractical for
        many floating-point methods to be correctly rounded.  Instead, for
        the {@code Math} [Class], a larger error bound of 1 or 2 ulps is
        allowed for certain methods.  Informally, with a 1 ulp error bound,
        when the exact result is a representable number, the exact result
        should be returned as the computed result; otherwise, either of the
        two floating-point values which bracket the exact result may be
        returned.  For exact results large in magnitude, one of the
        endpoints of the bracket may be infinite.  Besides accuracy at
        individual arguments, maintaining proper relations between the
        method at different arguments is also important.  Therefore, most
        methods with more than 0.5 ulp errors are required to be
        _semi-monotonic_: whenever the mathematical function is
        non-decreasing, so is the floating-point approximation, likewise,
        whenever the mathematical function is non-increasing, so is the
        floating-point approximation.  Not all approximations that have 1
        ulp accuracy will automatically meet the monotonicity requirements.


        The platform uses signed two's complement integer arithmetic with
        int and long primitive types.  The developer should choose
        the primitive type to ensure that arithmetic operations consistently
        produce correct results, which in some cases means the operations
        will not overflow the range of values of the computation.
        The best practice is to choose the primitive type and algorithm to avoid
        overflow. In cases where the size is {@code int} or {@code long} and
        overflow errors need to be detected, the methods {@code addExact},
        {@code subtractExact}, {@code multiplyExact}, and {@code toIntExact}
        throw an {@code ArithmeticException} when the results overflow.
        For other arithmetic operations such as divide, absolute value,
        increment, decrement, and negation overflow occurs only with
        a specific minimum or maximum value and should be checked against
        the minimum or maximum as appropriate.

        @author  unascribed
        @author  Joseph D. Darcy
        @since   JDK1.0
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Java.JavaMath.E">
      <summary>
        The {@code double} value that is closer than any other to
        _e_, the base of the natural logarithms.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Java.JavaMath.PI">
      <summary>
        The {@code double} value that is closer than any other to
        _pi_, the ratio of the circumference of a circle to its
        diameter.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.sin(System.Double)">
      <summary>
        Returns the trigonometric sine of an angle.  Special cases:
        + If the argument is NaN or an infinity, then the
        result is NaN.
        + If the argument is zero, then the result is a zero with the
        same sign as the argument.

        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   an angle, in radians. </param>
      <returns>  the sine of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.cos(System.Double)">
      <summary>
        Returns the trigonometric cosine of an angle. Special cases:
        + If the argument is NaN or an infinity, then the
        result is NaN.

        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   an angle, in radians. </param>
      <returns>  the cosine of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.tan(System.Double)">
      <summary>
        Returns the trigonometric tangent of an angle.  Special cases:
        + If the argument is NaN or an infinity, then the result
        is NaN.
        + If the argument is zero, then the result is a zero with the
        same sign as the argument.

        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   an angle, in radians. </param>
      <returns>  the tangent of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.asin(System.Double)">
      <summary>
        Returns the arc sine of a value; the returned angle is in the
        range -_pi_/2 through _pi_/2.  Special cases:
        + If the argument is NaN or its absolute value is greater
        than 1, then the result is NaN.
        + If the argument is zero, then the result is a zero with the
        same sign as the argument.

        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   the value whose arc sine is to be returned. </param>
      <returns>  the arc sine of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.acos(System.Double)">
      <summary>
        Returns the arc cosine of a value; the returned angle is in the
        range 0.0 through _pi_.  Special case:
        + If the argument is NaN or its absolute value is greater
        than 1, then the result is NaN.

        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   the value whose arc cosine is to be returned. </param>
      <returns>  the arc cosine of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.atan(System.Double)">
      <summary>
        Returns the arc tangent of a value; the returned angle is in the
        range -_pi_/2 through _pi_/2.  Special cases:
        + If the argument is NaN, then the result is NaN.
        + If the argument is zero, then the result is a zero with the
        same sign as the argument.

        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   the value whose arc tangent is to be returned. </param>
      <returns>  the arc tangent of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.toRadians(System.Double)">
      <summary>
        Converts an angle measured in degrees to an approximately
        equivalent angle measured in radians.  The conversion from
        degrees to radians is generally inexact.
      </summary>
      <param name="angdeg">   an angle, in degrees </param>
      <returns>
        the measurement of the angle {@code angdeg}
        in radians.
        @since   1.2
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.toDegrees(System.Double)">
      <summary>
        Converts an angle measured in radians to an approximately
        equivalent angle measured in degrees.  The conversion from
        radians to degrees is generally inexact; users should
        _not_ expect {@code cos(toRadians(90.0))} to exactly
        equal {@code 0.0}.
      </summary>
      <param name="angrad">   an angle, in radians </param>
      <returns>
        the measurement of the angle {@code angrad}
        in degrees.
        @since   1.2
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.exp(System.Double)">
      <summary>
        Returns Euler's number _e_ raised to the power of a
        {@code double} value.  Special cases:
        + If the argument is NaN, the result is NaN.
        + If the argument is positive infinity, then the result is
        positive infinity.
        + If the argument is negative infinity, then the result is
        positive zero.

        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   the exponent to raise _e_ to. </param>
      <returns>
        the value _e_{@code a},
        where _e_ is the base of the natural logarithms.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.log(System.Double)">
      <summary>
        Returns the natural logarithm (base _e_) of a {@code double}
        value.  Special cases:
        + If the argument is NaN or less than zero, then the result
        is NaN.
        + If the argument is positive infinity, then the result is
        positive infinity.
        + If the argument is positive zero or negative zero, then the
        result is negative infinity.

        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   a value </param>
      <returns>
        the value ln {@code a}, the natural logarithm of
        {@code a}.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.log10(System.Double)">
      <summary>
        Returns the base 10 logarithm of a {@code double} value.
        Special cases:

        + If the argument is NaN or less than zero, then the result
        is NaN.
        + If the argument is positive infinity, then the result is
        positive infinity.
        + If the argument is positive zero or negative zero, then the
        result is negative infinity.
        +  If the argument is equal to 10<sup>_n_</sup> for
        integer _n_, then the result is _n_.


        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   a value </param>
      <returns>
        the base 10 logarithm of  {@code a}.
        @since 1.5
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.sqrt(System.Double)">
      <summary>
        Returns the correctly rounded positive square root of a
        {@code double} value.
        Special cases:
        + If the argument is NaN or less than zero, then the result
        is NaN.
        + If the argument is positive infinity, then the result is positive
        infinity.
        + If the argument is positive zero or negative zero, then the
        result is the same as the argument.
        Otherwise, the result is the {@code double} value closest to
        the true mathematical square root of the argument value.
      </summary>
      <param name="a">   a value. </param>
      <returns>
        the positive square root of {@code a}.
        If the argument is NaN or less than zero, the result is NaN.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.IEEEremainder(System.Double,System.Double)">
      <summary>
        Computes the remainder operation on two arguments as prescribed
        by the IEEE 754 standard.
        The remainder value is mathematically equal to
        ``f1 - f2`` x _n_,
        where _n_ is the mathematical integer closest to the exact
        mathematical value of the quotient {@code f1/f2}, and if two
        mathematical integers are equally close to {@code f1/f2},
        then _n_ is the integer that is even. If the remainder is
        zero, its sign is the same as the sign of the first argument.
        Special cases:
        + If either argument is NaN, or the first argument is infinite,
        or the second argument is positive zero or negative zero, then the
        result is NaN.
        + If the first argument is finite and the second argument is
        infinite, then the result is the same as the first argument.
      </summary>
      <param name="f1">   the dividend. </param>
      <param name="f2">   the divisor. </param>
      <returns>
        the remainder when {@code f1} is divided by
        {@code f2}.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.ceil(System.Double)">
      <summary>
        Returns the smallest (closest to negative infinity)
        {@code double} value that is greater than or equal to the
        argument and is equal to a mathematical  java.lang.[Integer]. Special cases:
        + If the argument value is already equal to a
        mathematical integer, then the result is the same as the
        argument.  + If the argument is NaN or an infinity or
        positive zero or negative zero, then the result is the same as
        the argument.  + If the argument value is less than zero but
        greater than -1.0, then the result is negative zero. Note
        that the value of {@code sys.ceil(x)} is exactly the
        value of {@code -Math.floor(-x)}.

      </summary>
      <param name="a">   a value. </param>
      <returns>
        the smallest (closest to negative infinity)
        floating-point value that is greater than or equal to
        the argument and is equal to a mathematical  java.lang.[Integer].
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.floor(System.Double)">
      <summary>
        Returns the largest (closest to positive infinity)
        {@code double} value that is less than or equal to the
        argument and is equal to a mathematical  java.lang.[Integer]. Special cases:
        + If the argument value is already equal to a
        mathematical integer, then the result is the same as the
        argument.  + If the argument is NaN or an infinity or
        positive zero or negative zero, then the result is the same as
        the argument.
      </summary>
      <param name="a">   a value. </param>
      <returns>
        the largest (closest to positive infinity)
        floating-point value that less than or equal to the argument
        and is equal to a mathematical  java.lang.[Integer].
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.atan2(System.Double,System.Double)">
      <summary>
        Returns the angle _theta_ from the conversion of rectangular
        coordinates ({@code x}, {@code y}) to polar
        coordinates (r, _theta_).
        This method computes the phase _theta_ by computing an arc tangent
        of {@code y/x} in the range of -_pi_ to _pi_. Special
        cases:
        + If either argument is NaN, then the result is NaN.
        + If the first argument is positive zero and the second argument
        is positive, or the first argument is positive and finite and the
        second argument is positive infinity, then the result is positive
        zero.
        + If the first argument is negative zero and the second argument
        is positive, or the first argument is negative and finite and the
        second argument is positive infinity, then the result is negative zero.
        + If the first argument is positive zero and the second argument
        is negative, or the first argument is positive and finite and the
        second argument is negative infinity, then the result is the
        {@code double} value closest to _pi_.
        + If the first argument is negative zero and the second argument
        is negative, or the first argument is negative and finite and the
        second argument is negative infinity, then the result is the
        {@code double} value closest to -_pi_.
        + If the first argument is positive and the second argument is
        positive zero or negative zero, or the first argument is positive
        infinity and the second argument is finite, then the result is the
        {@code double} value closest to _pi_/2.
        + If the first argument is negative and the second argument is
        positive zero or negative zero, or the first argument is negative
        infinity and the second argument is finite, then the result is the
        {@code double} value closest to -_pi_/2.
        + If both arguments are positive infinity, then the result is the
        {@code double} value closest to _pi_/4.
        + If the first argument is positive infinity and the second argument
        is negative infinity, then the result is the {@code double}
        value closest to 3*_pi_/4.
        + If the first argument is negative infinity and the second argument
        is positive infinity, then the result is the {@code double} value
        closest to -_pi_/4.
        + If both arguments are negative infinity, then the result is the
        {@code double} value closest to -3*_pi_/4.

        The computed result must be within 2 ulps of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="y">   the ordinate coordinate </param>
      <param name="x">   the abscissa coordinate </param>
      <returns>
        the _theta_ component of the point
        (_r_, _theta_)
        in polar coordinates that corresponds to the point
        (_x_, _y_) in Cartesian coordinates.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.pow(System.Double,System.Double)">
      <summary>
        Returns the value of the first argument raised to the power of the
        second argument. Special cases:

        + If the second argument is positive or negative zero, then the
        result is 1.0.
        + If the second argument is 1.0, then the result is the same as the
        first argument.
        + If the second argument is NaN, then the result is NaN.
        + If the first argument is NaN and the second argument is nonzero,
        then the result is NaN.

        + If

        + the absolute value of the first argument is greater than 1
        and the second argument is positive infinity, or
        + the absolute value of the first argument is less than 1 and
        the second argument is negative infinity,

        then the result is positive infinity.

        + If

        + the absolute value of the first argument is greater than 1 and
        the second argument is negative infinity, or
        + the absolute value of the
        first argument is less than 1 and the second argument is positive
        infinity,

        then the result is positive zero.

        + If the absolute value of the first argument equals 1 and the
        second argument is infinite, then the result is NaN.

        + If

        + the first argument is positive zero and the second argument
        is greater than zero, or
        + the first argument is positive infinity and the second
        argument is less than zero,

        then the result is positive zero.

        + If

        + the first argument is positive zero and the second argument
        is less than zero, or
        + the first argument is positive infinity and the second
        argument is greater than zero,

        then the result is positive infinity.

        + If

        + the first argument is negative zero and the second argument
        is greater than zero but not a finite odd integer, or
        + the first argument is negative infinity and the second
        argument is less than zero but not a finite odd integer,

        then the result is positive zero.

        + If

        + the first argument is negative zero and the second argument
        is a positive finite odd integer, or
        + the first argument is negative infinity and the second
        argument is a negative finite odd integer,

        then the result is negative zero.

        + If

        + the first argument is negative zero and the second argument
        is less than zero but not a finite odd integer, or
        + the first argument is negative infinity and the second
        argument is greater than zero but not a finite odd integer,

        then the result is positive infinity.

        + If

        + the first argument is negative zero and the second argument
        is a negative finite odd integer, or
        + the first argument is negative infinity and the second
        argument is a positive finite odd integer,

        then the result is negative infinity.

        + If the first argument is finite and less than zero

        +  if the second argument is a finite even integer, the
        result is equal to the result of raising the absolute value of
        the first argument to the power of the second argument

        + if the second argument is a finite odd integer, the result
        is equal to the negative of the result of raising the absolute
        value of the first argument to the power of the second
        argument

        + if the second argument is finite and not an integer, then
        the result is NaN.


        + If both arguments are integers, then the result is exactly equal
        to the mathematical result of raising the first argument to the power
        of the second argument if that result can in fact be represented
        exactly as a {@code double} value.

        (In the foregoing descriptions, a floating-point value is
        considered to be an integer if and only if it is finite and a
        fixed point of the method #ceil ceil or,
        equivalently, a fixed point of the method {@link #floor
        floor}. A value is a fixed point of a one-argument
        method if and only if the result of applying the method to the
        value is equal to the value.)

        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="a">   the base. </param>
      <param name="b">   the exponent. </param>
      <returns>
        the value {@code a}<sup>{@code b}</sup>.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.random">
      <summary>
        Returns a {@code double} value with a positive sign, greater
        than or equal to {@code 0.0} and less than {@code 1.0}.
        Returned values are chosen pseudorandomly with (approximately)
        uniform distribution from that range.

        When this method is first called, it creates a single new
        pseudorandom-number generator, exactly as if by the expression

        <blockquote>{@code new java.util.Random()}</blockquote>

        This new pseudorandom-number generator is used thereafter for
        all calls to this method and is used nowhere else.

        This method is properly synchronized to allow correct use by
        more than one thread. However, if many threads need to generate
        pseudorandom numbers at a great rate, it may reduce contention
        for each thread to have its own pseudorandom-number generator.
      </summary>
      <returns>
        a pseudorandom {@code double} greater than or equal
        to {@code 0.0} and less than {@code 1.0}.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.addExact(System.Int32,System.Int32)">
      <summary>
        Returns the sum of its arguments,
        throwing an exception if the result overflows an {@code int}.
      </summary>
      <param name="x"> the first value </param>
      <param name="y"> the second value </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows an int
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.addExact(System.Int64,System.Int64)">
      <summary>
        Returns the sum of its arguments,
        throwing an exception if the result overflows a {@code long}.
      </summary>
      <param name="x"> the first value </param>
      <param name="y"> the second value </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows a long
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.subtractExact(System.Int32,System.Int32)">
      <summary>
        Returns the difference of the arguments,
        throwing an exception if the result overflows an {@code int}.
      </summary>
      <param name="x"> the first value </param>
      <param name="y"> the second value to subtract from the first </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows an int
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.subtractExact(System.Int64,System.Int64)">
      <summary>
        Returns the difference of the arguments,
        throwing an exception if the result overflows a {@code long}.
      </summary>
      <param name="x"> the first value </param>
      <param name="y"> the second value to subtract from the first </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows a long
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.multiplyExact(System.Int32,System.Int32)">
      <summary>
        Returns the product of the arguments,
        throwing an exception if the result overflows an {@code int}.
      </summary>
      <param name="x"> the first value </param>
      <param name="y"> the second value </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows an int
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.multiplyExact(System.Int64,System.Int64)">
      <summary>
        Returns the product of the arguments,
        throwing an exception if the result overflows a {@code long}.
      </summary>
      <param name="x"> the first value </param>
      <param name="y"> the second value </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows a long
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.incrementExact(System.Int32)">
      <summary>
        Returns the argument incremented by one, throwing an exception if the
        result overflows an {@code int}.
      </summary>
      <param name="a"> the value to increment </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows an int
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.incrementExact(System.Int64)">
      <summary>
        Returns the argument incremented by one, throwing an exception if the
        result overflows a {@code long}.
      </summary>
      <param name="a"> the value to increment </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows a long
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.decrementExact(System.Int32)">
      <summary>
        Returns the argument decremented by one, throwing an exception if the
        result overflows an {@code int}.
      </summary>
      <param name="a"> the value to decrement </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows an int
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.decrementExact(System.Int64)">
      <summary>
        Returns the argument decremented by one, throwing an exception if the
        result overflows a {@code long}.
      </summary>
      <param name="a"> the value to decrement </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows a long
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.negateExact(System.Int32)">
      <summary>
        Returns the negation of the argument, throwing an exception if the
        result overflows an {@code int}.
      </summary>
      <param name="a"> the value to negate </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows an int
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.negateExact(System.Int64)">
      <summary>
        Returns the negation of the argument, throwing an exception if the
        result overflows a {@code long}.
      </summary>
      <param name="a"> the value to negate </param>
      <returns> the result </returns>
      <exception cref="T:System.ArithmeticException">
        if the result overflows a long
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.toIntExact(System.Int64)">
      <summary>
        Returns the value of the {@code long} argument;
        throwing an exception if the value overflows an {@code int}.
      </summary>
      <param name="value"> the long value </param>
      <returns> the argument as an int </returns>
      <exception cref="T:System.ArithmeticException">
        if the {@code argument} overflows an int
        @since 1.8
      </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.floorDiv(System.Int32,System.Int32)">
      <summary>
        Returns the largest (closest to positive infinity)
        {@code int} value that is less than or equal to the algebraic quotient.
        There is one special case, if the dividend is the
        Integer#MIN_VALUE  java.lang.[Integer].MIN_VALUE"/> and the divisor is {@code -1},
        then integer overflow occurs and
        the result is equal to the {@code  java.lang.[Integer].MIN_VALUE}.

        Normal integer division operates under the round to zero rounding mode
        (truncation).  This operation instead acts under the round toward
        negative infinity (floor) rounding mode.
        The floor rounding mode gives different results than truncation
        when the exact result is negative.

        + If the signs of the arguments are the same, the results of
        {@code floorDiv} and the {@code /} operator are the same.
        For example, {@code floorDiv(4, 3) == 1} and {@code (4 / 3) == 1}.
        + If the signs of the arguments are different,  the quotient is negative and
        {@code floorDiv} returns the integer less than or equal to the quotient
        and the {@code /} operator returns the integer closest to zero.
        For example, {@code floorDiv(-4, 3) == -2},
        whereas {@code (-4 / 3) == -1}.
      </summary>
      <param name="x"> the dividend </param>
      <param name="y"> the divisor </param>
      <returns>
        the largest (closest to positive infinity)
        {@code int} value that is less than or equal to the algebraic quotient.
      </returns>
      <exception cref="T:System.ArithmeticException"> if the divisor {@code y} is zero </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.floorDiv(System.Int64,System.Int64)">
      <summary>
        Returns the largest (closest to positive infinity)
        {@code long} value that is less than or equal to the algebraic quotient.
        There is one special case, if the dividend is the
        Long#MIN_VALUE java.lang.[Long].MIN_VALUE"/> and the divisor is {@code -1},
        then integer overflow occurs and
        the result is equal to the {@code java.lang.[Long].MIN_VALUE}.

        Normal integer division operates under the round to zero rounding mode
        (truncation).  This operation instead acts under the round toward
        negative infinity (floor) rounding mode.
        The floor rounding mode gives different results than truncation
        when the exact result is negative.

        For examples, see  #floorDiv(int, int)"/>.
      </summary>
      <param name="x"> the dividend </param>
      <param name="y"> the divisor </param>
      <returns>
        the largest (closest to positive infinity)
        {@code long} value that is less than or equal to the algebraic quotient.
      </returns>
      <exception cref="T:System.ArithmeticException"> if the divisor {@code y} is zero </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.floorMod(System.Int32,System.Int32)">
      <summary>
        Returns the floor modulus of the {@code int} arguments.

        The floor modulus is {@code x - (floorDiv(x, y) * y)},
        has the same sign as the divisor {@code y}, and
        is in the range of {@code -abs(y) &lt; r &lt; +abs(y)}.


        The relationship between {@code floorDiv} and {@code floorMod} is such that:

        + {@code floorDiv(x, y) * y + floorMod(x, y) == x}


        The difference in values between {@code floorMod} and
        the {@code %} operator is due to the difference between
        {@code floorDiv} that returns the integer less than or equal to the quotient
        and the {@code /} operator that returns the integer closest to zero.

        Examples:

        + If the signs of the arguments are the same, the results
        of {@code floorMod} and the {@code %} operator are the same.

        + {@code floorMod(4, 3) == 1};   and {@code (4 % 3) == 1}

        + If the signs of the arguments are different, the results differ from the {@code %} operator.

        + {@code floorMod(+4, -3) == -2};   and {@code (+4 % -3) == +1}
        + {@code floorMod(-4, +3) == +2};   and {@code (-4 % +3) == -1}
        + {@code floorMod(-4, -3) == -1};   and {@code (-4 % -3) == -1 }




        If the signs of arguments are unknown and a positive modulus
        is needed it can be computed as {@code (floorMod(x, y) + abs(y)) % abs(y)}.
      </summary>
      <param name="x"> the dividend </param>
      <param name="y"> the divisor </param>
      <returns> the floor modulus {@code x - (floorDiv(x, y) * y)} </returns>
      <exception cref="T:System.ArithmeticException"> if the divisor {@code y} is zero </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.floorMod(System.Int64,System.Int64)">
      <summary>
        Returns the floor modulus of the {@code long} arguments.

        The floor modulus is {@code x - (floorDiv(x, y) * y)},
        has the same sign as the divisor {@code y}, and
        is in the range of {@code -abs(y) &lt; r &lt; +abs(y)}.


        The relationship between {@code floorDiv} and {@code floorMod} is such that:

        + {@code floorDiv(x, y) * y + floorMod(x, y) == x}


        For examples, see  #floorMod(int, int)"/>.
      </summary>
      <param name="x"> the dividend </param>
      <param name="y"> the divisor </param>
      <returns> the floor modulus {@code x - (floorDiv(x, y) * y)} </returns>
      <exception cref="T:System.ArithmeticException"> if the divisor {@code y} is zero </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.abs(System.Int32)">
      <summary>
        Returns the absolute value of an {@code int} value.
        If the argument is not negative, the argument is returned.
        If the argument is negative, the negation of the argument is returned.

        Note that if the argument is equal to the value of
        Integer#MIN_VALUE"/>, the most negative representable
        {@code int} value, the result is that same value, which is
        negative.
      </summary>
      <param name="a">   the argument whose absolute value is to be determined </param>
      <returns>  the absolute value of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.abs(System.Int64)">
      <summary>
        Returns the absolute value of a {@code long} value.
        If the argument is not negative, the argument is returned.
        If the argument is negative, the negation of the argument is returned.

        Note that if the argument is equal to the value of
        Long#MIN_VALUE"/>, the most negative representable
        {@code long} value, the result is that same value, which
        is negative.
      </summary>
      <param name="a">   the argument whose absolute value is to be determined </param>
      <returns>  the absolute value of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.abs(System.Single)">
      <summary>
        Returns the absolute value of a {@code float} value.
        If the argument is not negative, the argument is returned.
        If the argument is negative, the negation of the argument is returned.
        Special cases:
        + If the argument is positive zero or negative zero, the
        result is positive zero.
        + If the argument is infinite, the result is positive infinity.
        + If the argument is NaN, the result is NaN.
        In other words, the result is the same as the value of the expression:
        {@code Float.intBitsToFloat(0x7fffffff &amp; Float.floatToIntBits(a))}
      </summary>
      <param name="a">   the argument whose absolute value is to be determined </param>
      <returns>  the absolute value of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.abs(System.Double)">
      <summary>
        Returns the absolute value of a {@code double} value.
        If the argument is not negative, the argument is returned.
        If the argument is negative, the negation of the argument is returned.
        Special cases:
        + If the argument is positive zero or negative zero, the result
        is positive zero.
        + If the argument is infinite, the result is positive infinity.
        + If the argument is NaN, the result is NaN.
        In other words, the result is the same as the value of the expression:
        {@code java.lang.[Double].longBitsToDouble((Double.doubleToLongBits(a)&lt;&lt;1)>>>1)}
      </summary>
      <param name="a">   the argument whose absolute value is to be determined </param>
      <returns>  the absolute value of the argument. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.max(System.Int32,System.Int32)">
      <summary>
        Returns the greater of two {@code int} values. That is, the
        result is the argument closer to the value of
        Integer#MAX_VALUE"/>. If the arguments have the same value,
        the result is that same value.
      </summary>
      <param name="a">   an argument. </param>
      <param name="b">   another argument. </param>
      <returns>  the larger of {@code a} and {@code b}. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.max(System.Int64,System.Int64)">
      <summary>
        Returns the greater of two {@code long} values. That is, the
        result is the argument closer to the value of
        Long#MAX_VALUE"/>. If the arguments have the same value,
        the result is that same value.
      </summary>
      <param name="a">   an argument. </param>
      <param name="b">   another argument. </param>
      <returns>  the larger of {@code a} and {@code b}. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.min(System.Int32,System.Int32)">
      <summary>
        Returns the smaller of two {@code int} values. That is,
        the result the argument closer to the value of
        Integer#MIN_VALUE"/>.  If the arguments have the same
        value, the result is that same value.
      </summary>
      <param name="a">   an argument. </param>
      <param name="b">   another argument. </param>
      <returns>  the smaller of {@code a} and {@code b}. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.min(System.Int64,System.Int64)">
      <summary>
        Returns the smaller of two {@code long} values. That is,
        the result is the argument closer to the value of
        Long#MIN_VALUE"/>. If the arguments have the same
        value, the result is that same value.
      </summary>
      <param name="a">   an argument. </param>
      <param name="b">   another argument. </param>
      <returns>  the smaller of {@code a} and {@code b}. </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.sinh(System.Double)">
      <summary>
        Returns the hyperbolic sine of a {@code double} value.
        The hyperbolic sine of _x_ is defined to be
        (_e<sup>x</sup> - e<sup>-x</sup>_)/2
        where _e_ is  Math#E Euler's number"/>.

        Special cases:


        + If the argument is NaN, then the result is NaN.

        + If the argument is infinite, then the result is an infinity
        with the same sign as the argument.

        + If the argument is zero, then the result is a zero with the
        same sign as the argument.



        The computed result must be within 2.5 ulps of the exact result.
      </summary>
      <param name="x"> The number whose hyperbolic sine is to be returned. </param>
      <returns>
        The hyperbolic sine of {@code x}.
        @since 1.5
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.cosh(System.Double)">
      <summary>
        Returns the hyperbolic cosine of a {@code double} value.
        The hyperbolic cosine of _x_ is defined to be
        (_e<sup>x</sup> + e<sup>-x</sup>_)/2
        where _e_ is  Math#E Euler's number"/>.

        Special cases:


        + If the argument is NaN, then the result is NaN.

        + If the argument is infinite, then the result is positive
        infinity.

        + If the argument is zero, then the result is {@code 1.0}.



        The computed result must be within 2.5 ulps of the exact result.
      </summary>
      <param name="x"> The number whose hyperbolic cosine is to be returned. </param>
      <returns>
        The hyperbolic cosine of {@code x}.
        @since 1.5
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.tanh(System.Double)">
      <summary>
        Returns the hyperbolic tangent of a {@code double} value.
        The hyperbolic tangent of _x_ is defined to be
        (_e<sup>x</sup> - e<sup>-x</sup>_)/(_e<sup>x</sup> + e<sup>-x</sup>_),
        in other words, {@link Math#sinh
        sinh(_x_)}/ Math#cosh cosh(_x_)"/>.  Note
        that the absolute value of the exact tanh is always less than
        1.

        Special cases:


        + If the argument is NaN, then the result is NaN.

        + If the argument is zero, then the result is a zero with the
        same sign as the argument.

        + If the argument is positive infinity, then the result is
        {@code +1.0}.

        + If the argument is negative infinity, then the result is
        {@code -1.0}.



        The computed result must be within 2.5 ulps of the exact result.
        The result of {@code tanh} for any finite input must have
        an absolute value less than or equal to 1.  Note that once the
        exact result of tanh is within 1/2 of an ulp of the limit value
        of 1, correctly signed {@code 1.0} should be returned.
      </summary>
      <param name="x"> The number whose hyperbolic tangent is to be returned. </param>
      <returns>
        The hyperbolic tangent of {@code x}.
        @since 1.5
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.log1p(System.Double)">
      <summary>
        Returns the natural logarithm of the sum of the argument and 1.
        Note that for small values {@code x}, the result of
        {@code log1p(x)} is much closer to the true result of ln(1
        + {@code x}) than the floating-point evaluation of
        {@code log(1.0+x)}.

        Special cases:



        + If the argument is NaN or less than -1, then the result is
        NaN.

        + If the argument is positive infinity, then the result is
        positive infinity.

        + If the argument is negative one, then the result is
        negative infinity.

        + If the argument is zero, then the result is a zero with the
        same sign as the argument.



        The computed result must be within 1 ulp of the exact result.
        Results must be semi-monotonic.
      </summary>
      <param name="x">   a value </param>
      <returns>
        the value ln({@code x} + 1), the natural
        log of {@code x} + 1
        @since 1.5
      </returns>
      <remarks>http://www.johndcook.com/csharp_log_one_plus_x.html</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.JavaMath.Log1m(System.Double)">
      <summary>
        Computes log(1-x) without losing precision for small values of x.
      </summary>

    </member>
    <member name="T:Microsoft.VisualBasic.Language.Java.LogTricks">
      <summary>
        @author Marc Suchard
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Java.MathUtils">
      <summary>
        Handy utility functions which have some Mathematical relavance.

        @author Matthew Goode
        @author Alexei Drummond
        @author Gerton Lunter
        @version $Id: MathUtils.java,v 1.13 2006/08/31 14:57:24 rambaut Exp $
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Java.MathUtils.random">
      <summary>
        A random number generator that is initialized with the clock when this
        class is loaded into the JVM. Use this for all random numbers. Note: This
        method or getting random numbers in not thread-safe. Since
        MersenneTwisterFast is currently (as of 9/01) not synchronized using this
        function may cause concurrency issues. Use the static get methods of the
        MersenneTwisterFast class for access to a single instance of the class,
        that has synchronization.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.randomChoice(System.Double[])">
      <summary>
        Chooses one category if a cumulative probability distribution is given
      </summary>
      <param name="cf"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.randomChoicePDF(System.Double[])">
      <param name="pdf">
        array of unnormalized probabilities
      </param>
      <returns> a sample according to an unnormalized probability distribution </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.getNormalized(System.Double[])">
      <param name="array">
        to normalize
      </param>
      <returns>
        a new double array where all the values sum to 1. Relative ratios
        are preserved.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.getTotal(System.Double[],System.Int32,System.Int32)">
      <param name="array">
        entries to be summed
      </param>
      <param name="start">
        start position
      </param>
      <param name="end">
        the index of the element after the last one to be included
      </param>
      <returns> the total of a the values in a range of an array </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.getTotal(System.Double[])">
      <param name="array">
        to sum over
      </param>
      <returns> the total of the values in an array </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Java.MathUtils.Seed">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextByte">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextBoolean">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextBytes(System.SByte[])">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextChar">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextGaussian">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextDouble">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
      <returns> a pseudo random double precision floating point number in [01) </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.randomLogDouble">
      <returns> log of random variable in [0,1] </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextExponential(System.Double)">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextInverseGaussian(System.Double,System.Double)">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextFloat">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextLong">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextShort">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextInt">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.nextInt(System.Int32)">
      <summary>
        Access a default instance of this class, access is synchronized
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.uniform(System.Double,System.Double)">

      <param name="low"> </param>
      <param name="high"> </param>
      <returns> uniform between low and high </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.shuffle(System.Int32[])">
      <summary>
        Shuffles an array.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.shuffle(System.Int32[],System.Int32)">
      <summary>
        Shuffles an array. Shuffles numberOfShuffles times
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.shuffled(System.Int32)">
      <summary>
        Returns an array of shuffled indices of length l.
      </summary>
      <param name="l">
        length of the array required.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.permute(System.Int32[])">
      <summary>
        Permutes an array.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.permuted(System.Int32)">
      <summary>
        Returns a uniform random permutation of 0,...,l-1
      </summary>
      <param name="l">
        length of the array required.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MathUtils.hypot(System.Double,System.Double)">
      <summary>
        Returns sqrt(a^2 + b^2) without under/overflow.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast">
      <summary>
        MersenneTwisterFast:

        A simulation quality fast random number generator (MT19937) with the same
        public methods as java.util.Random.


        About the Mersenne Twister. This is a Java version of the C-program for
        MT19937: Integer version. next(32) generates one pseudorandom unsigned
        integer (32bit) which is uniformly distributed among 0 to 2^32-1 for each
        call. next(int bits) >>>'s by (32-bits) to get a value ranging between 0 and
        2^bits-1 long inclusive; hope that's correct. setSeed(seed) set initial
        values to the working area of 624 words. For setSeed(seed), seed is any
        32-bit integer except for 0.

        Reference. M. Matsumoto and T. Nishimura, "Mersenne Twister: A
        623-Dimensionally Equidistributed Uniform Pseudo-Random Number Generator",
        <i>ACM Transactions on Modeling and Computer Simulation,</i> Vol. 8, No. 1,
        January 1998, pp 3--30.


        Bug Fixes. This implementation implements the bug fixes made in Java 1.2's
        version of Random, which means it can be used with earlier versions of Java.
        See <a href=
 "http://www.javasoft.com/products/jdk/1.2/docs/api/java/util/Random.html">
          the JDK 1.2 java.util.Random documentation
        </a> for further documentation on
        the random-number generation contracts made. Additionally, there's an
        undocumented bug in the JDK java.util.Random.nextBytes() method, which this
        code fixes.


        Important Note. Just like java.util.Random, this generator accepts a long
        seed but doesn't use all of it. java.util.Random uses 48 bits. The Mersenne
        Twister instead uses 32 bits (int size). So it's best if your seed does not
        exceed the int range.


        <a href="http://www.cs.umd.edu/users/seanl/">Sean Luke's web page</a>


        - added shuffling method (Alexei Drummond)

        - added gamma RV method (Marc Suchard)

        This is now package private - it should be accessed using the instance in
        Random
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.serialVersionUID">

    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.#ctor">
      <summary>
        Constructor using the time of day as default seed.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.#ctor(System.Int64)">
      <summary>
        Constructor using a given seed. Though you pass this seed in as a long,
        it's best to make sure it's actually an integer.
      </summary>
      <param name="seed">
        generator starting number, often the time of day.
      </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.Seed">
      <summary>
        Initalize the pseudo random number generator. The Mersenne Twister only
        uses an integer for its seed; It's best that you don't pass in a long
        that's bigger than an int.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.nextInt(System.Int32)">
      <summary>
        Returns an integer drawn uniformly from 0 to n-1. Suffice it to say, n
        must be > 0, or an IllegalArgumentException is raised.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.permute(System.Int32[])">
      <summary>
        Returns a uniform random permutation of int objects in array
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.shuffle(System.Int32[])">
      <summary>
        Shuffles an array.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.shuffle(System.Int32[],System.Int32)">
      <summary>
        Shuffles an array. Shuffles numberOfShuffles times
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.shuffled(System.Int32)">
      <summary>
        Returns an array of shuffled indices of length l.
      </summary>
      <param name="l">
        length of the array required.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.permuted(System.Int32)">
      <summary>
        Returns a uniform random permutation of ints 0,...,l-1
      </summary>
      <param name="l">
        length of the array required.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Java.MersenneTwisterFast.nextGamma(System.Double,System.Double)">
      <summary>
        ****************************************************************
        * Gamma Distribution - Acceptance Rejection combined with *
        Acceptance Complement * *
        ******************************************************************
        * FUNCTION: - gds samples a random number from the standard * gamma
        distribution with parameter a > 0. * Acceptance Rejection gs for a &lt;
        1 , * Acceptance Complement gd for a >= 1 . * REFERENCES: - J.H.
        Ahrens, U. Dieter (1974): Computer methods * for sampling from gamma,
        beta, Poisson and * binomial distributions, Computing 12, 223-246. *
        - J.H. Ahrens, U. Dieter (1982): Generating gamma * variates by a
        modified rejection technique, * Communications of the ACM 25, 47-54.
        * SUBPROGRAMS: - drand(seed) ... (0,1)-Uniform generator with *
        unsigned long integer *seed * - NORMAL(seed) ... Normal generator
        N(0,1). * *
        *****************************************************************
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Indexer.Indexing(System.Object)">
      <summary>
        Generates the vector elements index collection.
      </summary>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.List`1">
      <summary>
        Represents a strongly typed list of objects that can be accessed by index. Provides
        methods to search, sort, and manipulate lists.To browse the .NET Framework source
        code for this type, see the Reference Source.
        (加强版的<see cref="T:System.Collections.Generic.List`1"/>)
      </summary>
      <typeparam name="T">The type of elements in the list.</typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.List`1.Last">
      <summary>
        The last elements in the collection <see cref="T:Microsoft.VisualBasic.Language.List`1"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.List`1.First">
      <summary>
        The first elements in the collection <see cref="T:Microsoft.VisualBasic.Language.List`1"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.List`1.Item(System.Object)">
      <summary>

      </summary>
      <param name="args">同时支持boolean和integer</param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.List`1.Item(Microsoft.VisualBasic.ComponentModel.IAddress{System.Int32})">
      <summary>
        This indexer property is using for the ODEs-system computing.
        (这个是为了ODEs计算模块所准备的一个数据接口)
      </summary>
      <param name="address"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.List`1.Item(System.Int32)">
      <summary>
        Can accept negative number as the index value, negative value means ``<see cref="P:System.Collections.Generic.List`1.Count"/> - n``,
        example as ``list(-1)``: means the last element in this list: ``list(list.Count -1)``
      </summary>
      <param name="index%"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.List`1.Item(System.String)">
      <summary>
        Using a index vector expression to select/update many elements from this list collection.
      </summary>
      <param name="exp$">
        + ``1``, index=1
        + ``1:8``, index=1, count=8
        + ``1->8``, index from 1 to 8
        + ``8->1``, index from 8 to 1
        + ``1,2,3,4``, index=1 or  2 or 3 or 4
      </param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.List`1.Item(System.Predicate{`0})">
      <summary>
        Select all of the elements from this list collection is any of them match the condition expression: <paramref name="where"/>
      </summary>
      <param name="[where]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/> class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
        (这是一个安全的构造函数，假若输入的参数为空值，则只会创建一个空的列表，而不会抛出错误)
      </summary>
      <param name="source">The collection whose elements are copied to the new list.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.#ctor(`0[])">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/> class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
      </summary>
      <param name="x">The collection whose elements are copied to the new list.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.#ctor">
      <summary>
        Initializes a new instance of the Microsoft VisualBasic language <see cref="T:Microsoft.VisualBasic.Language.List`1"/> class
        that is empty and has the default initial capacity.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.#ctor(System.Int32)">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/> class that
        is empty and has the specified initial capacity.
      </summary>
      <param name="capacity">The number of elements that the new list can initially store.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.PopAll">
      <summary>
        Pop all of the elements value in to array from the list object
        and then clear all of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/> data.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Addition(Microsoft.VisualBasic.Language.List{`0},`0)">
      <summary>
        Adds an object to the end of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>.
      </summary>
      <param name="list"></param>
      <param name="x">
        The object to be added to the end of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>.
        The value can be null for reference types.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Addition(`0,Microsoft.VisualBasic.Language.List{`0})">
      <summary>
        Adds an object to the begin of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>.
      </summary>
      <param name="list"></param>
      <param name="x">
        The object to be added to the end of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>. The
        value can be null for reference types.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Subtraction(Microsoft.VisualBasic.Language.List{`0},`0)">
      <summary>
        Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>.
      </summary>
      <param name="list"></param>
      <param name="x">
        The object to remove from the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>. The value can
        be null for reference types.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Addition(Microsoft.VisualBasic.Language.List{`0},System.Collections.Generic.IEnumerable{`0})">
      <summary>
        Adds the elements of the specified collection to the end of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>.
      </summary>
      <param name="list"></param>
      <param name="vals"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Addition(Microsoft.VisualBasic.Language.List{`0},Microsoft.VisualBasic.Language.List{`0})">
      <summary>
        Append <paramref name="list2"/> to the end of <paramref name="list1"/>
      </summary>
      <param name="list1"></param>
      <param name="list2"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Addition(Microsoft.VisualBasic.Language.List{`0},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{`0}})">
      <summary>
        Adds the elements of the specified collection to the end of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>.
      </summary>
      <param name="list"></param>
      <param name="vals"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Addition(System.Collections.Generic.IEnumerable{`0},Microsoft.VisualBasic.Language.List{`0})">
      <summary>
        Adds the elements of the specified collection to the end of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>.
      </summary>
      <param name="vals"></param>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Subtraction(Microsoft.VisualBasic.Language.List{`0},System.Collections.Generic.IEnumerable{`0})">
      <summary>
        批量的从目标列表之中移除<paramref name="removes"/>集合之中的对象
      </summary>
      <param name="list"></param>
      <param name="removes"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Subtraction(Microsoft.VisualBasic.Language.List{`0},System.Int32)">
      <summary>
        <see cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)"/>
      </summary>
      <param name="list"></param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Subtraction(`0[],Microsoft.VisualBasic.Language.List{`0})">
      <summary>
        从输入的向量数组之中移除掉列表之中的指定元素，然后返回<paramref name="vector"/>的剩余元素
      </summary>
      <param name="vector"></param>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Explicit(Microsoft.VisualBasic.Language.List{`0})~`0[]">
      <summary>
        将这个列表对象隐式转换为向量数组
      </summary>
      <param name="list"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Exponent(Microsoft.VisualBasic.Language.List{`0},System.Func{`0,System.Boolean})">
      <summary>
        Find a item in the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>
      </summary>
      <param name="list"></param>
      <param name="find"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Inequality(Microsoft.VisualBasic.Language.List{`0},System.Int32)">
      <summary>
        Elements count not equals to a specific number?
      </summary>
      <param name="list"></param>
      <param name="count%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Equality(Microsoft.VisualBasic.Language.List{`0},System.Int32)">
      <summary>
        Assert that the element counts of this list object is equals to a specifc number?
      </summary>
      <param name="list"></param>
      <param name="count%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_Equality(Microsoft.VisualBasic.Language.List{`0},System.Collections.Generic.IEnumerable{`0})">
      <summary>
        <see cref="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})"/>
      </summary>
      <param name="list"></param>
      <param name="collection"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_GreaterThan(Microsoft.VisualBasic.Language.List{`0},System.String)">
      <summary>
        Dump this collection data to the file system.
      </summary>
      <param name="source"></param>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.op_GreaterThan(Microsoft.VisualBasic.Language.List{`0},System.Int32)">
      <summary>
        <see cref="P:System.Collections.Generic.List`1.Count"/> of <paramref name="list"/> &gt; <paramref name="n"/>
      </summary>
      <param name="list"></param>
      <param name="n%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.List`1.ValuesEnumerator">
      <summary>
        Enums all of the elements in this collection list object by return a value reference type
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.ExceptionHandler.Default(System.Object)">
      <summary>
        Returns True means test failure
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.ExceptionHandler.op_BitwiseOr(System.Object,Microsoft.VisualBasic.Language.Perl.ExceptionHandler)">
      <summary>
        Perl like exception handler syntax for testing the result is failure or not?
      </summary>
      <param name="result"></param>
      <param name="h"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Perl.Functions">
      <summary>

      </summary>
      <remarks>
        ##### last

        The ``last`` command Is Like the ``break`` statement In C (As used In loops); **it immediately exits the Loop In question**.
        If the ``LABEL`` Is omitted, the command refers To the innermost enclosing Loop. The last EXPR form, available starting
        In Perl 5.18.0, allows a label name To be computed at run time, And Is otherwise identical To last ``LABEL``.

        **The Continue block, If any, Is Not executed**
        (Perl里面的``last``关键词相当于vb里面的``Exit Do``或者``Exit For``)

        匹配：``m/&lt;regexp>/`` (还可以简写为 /&lt;regexp>/, 略去 m)
        替换：``s/&lt;pattern>/&lt;replacement>/``
        转化：``tr/&lt;pattern>/&lt;replacemnt>/``
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.Functions.Push``1(``0[]@,``0)">
      <summary>
        Treats ARRAY as a stack by appending the values of LIST to the end of ARRAY. The length of ARRAY
        increases by the length of LIST. Has the same effect as

        ```perl
        for my $value (LIST) {
        $ARRAY[++$#ARRAY] = $value;
        }
        ```

        but Is more efficient. Returns the number of elements in the array following the completed push.
        Starting with Perl 5.14, an experimental feature allowed push to take a scalar expression.
        This experiment has been deemed unsuccessful, And was removed as of Perl 5.24.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="x"></param>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.Functions.Push``1(``0[]@,System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Treats ARRAY as a stack by appending the values of LIST to the end of ARRAY. The length of ARRAY
        increases by the length of LIST. Has the same effect as

        ```perl
        for my $value (LIST) {
        $ARRAY[++$#ARRAY] = $value;
        }
        ```

        but Is more efficient. Returns the number of elements in the array following the completed push.
        Starting with Perl 5.14, an experimental feature allowed push to take a scalar expression.
        This experiment has been deemed unsuccessful, And was removed as of Perl 5.24.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="LIST"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.Functions.Pop``1(``0[]@)">
      <summary>
        ##### pop ARRAY

        **pop**
        Pops And returns the last value of the array, shortening the array by one element.

        Returns the undefined value If the array Is empty, although this may also happen at
        other times. If ARRAY Is omitted, pops the @ARGV array In the main program, but the
        @_ array In subroutines, just Like shift.

        Starting with Perl 5.14, an experimental feature allowed pop to take a scalar expression.
        This experiment has been deemed unsuccessful, And was removed as of Perl 5.24.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.Functions.system(System.String)">
      <summary>
        Does exactly the same thing as exec, except that a fork is done first and the parent process waits for the
        child process to exit. Note that argument processing varies depending on the number of arguments. If there
        is more than one argument in LIST, or if LIST is an array with more than one value, starts the program
        given by the first element of the list with arguments given by the rest of the list. If there is only one
        scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument
        is passed to the system's command shell for parsing (this is /bin/sh -c on Unix platforms, but varies on
        other platforms). If there are no shell metacharacters in the argument, it is split into words and passed
        directly to execvp , which is more efficient. On Windows, only the system PROGRAM LIST syntax will reliably
        avoid using the shell; system LIST , even with more than one element, will fall back to the shell if the
        first spawn fails.
        Perl will attempt To flush all files opened For output before any operation that may Do a fork, but this
        may Not be supported On some platforms (see perlport). To be safe, you may need To Set $ ($AUTOFLUSH In
        English) Or Call the autoflush method Of IO:Handle on any open handles.
        The return value Is the exit status of the program as returned by the wait call. To get the actual exit
        value, shift right by eight (see below). See also exec. This Is Not what you want to use to capture the
        output from a command; for that you should use merely backticks Or qx//, as described in `STRING` in perlop.
        Return value of -1 indicates a failure to start the program Or an error of the wait(2) system call
        (inspect $! for the reason).
        If you 'd like to make system (and many other bits of Perl) die on error, have a look at the autodie pragma.
        Like exec, system allows you to lie to a program about its name if you use the system PROGRAM LIST syntax.
        Again, see exec.
      </summary>
      <param name="CLI"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.Functions.chomp(System.String@)">
      <summary>
        This safer version of chop removes any trailing string that corresponds to the current value of ``$/``
        (also known as ``$INPUT_RECORD_SEPARATOR`` in the English module). It returns the total number of characters
        removed from all its arguments. It's often used to remove the newline from the end of an input record
        when you're worried that the final record may be missing its newline. When in paragraph mode (``$/ = ''`` ),
        it removes all trailing newlines from the string. When in slurp mode (``$/ = undef`` ) or fixed-length
        record mode (``$/`` is a reference to an integer or the like; see perlvar), chomp won't remove anything.
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.Functions.chomp(System.Collections.Generic.IEnumerable{System.String}@)">
      <summary>
        If you chomp a ``list`` or ``array``, each element is chomped, and the total number of characters removed is returned.
      </summary>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.Functions.chomp(System.Collections.Generic.Dictionary{System.String,System.String}@)">
      <summary>
        If ``VARIABLE`` is a hash, it chomps the hash's values, but not its keys, resetting the each iterator
        in the process.

        You can actually chomp anything that's an ``lvalue``, including an assignment:

        ```perl
        chomp(my $cwd = `pwd`);
        chomp(my $answer = &lt;STDIN>);
        ```
      </summary>
      <param name="hash"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Perl.Functions.chomp(Microsoft.VisualBasic.ComponentModel.Collection.Dictionary{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}}@)">
      <summary>
        If ``VARIABLE`` is a hash, it chomps the hash's values, but not its keys, resetting the each iterator
        in the process.

        You can actually chomp anything that's an ``lvalue``, including an assignment:

        ```perl
        chomp(my $cwd = `pwd`);
        chomp(my $answer = &lt;STDIN>);
        ```
      </summary>
      <param name="hash"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.LanguageAPI">
      <summary>
        The VisualBasic language syntax helper API.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.LanguageAPI.defaultAssert">
      <summary>
        The default value assertor. If target object assert result is nothing or empty, then this function will returns True.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LanguageAPI.Default``1(``0,Microsoft.VisualBasic.Language.Default.Assert{System.Object})">
      <summary>
        simulate the ``%||%`` operator in R language.

        模拟R语言之中的``%||%``操作符

        ```R
        `%||%` &lt;- function(x, y) if (is.null(x)) y else x

        NULL %||% 123
        # 123

        233 %||% 123
        # 233
        ```
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <param name="isNothing"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LanguageAPI.AsDefault``1(``0,Microsoft.VisualBasic.Language.Default.Assert{System.Object})">
      <summary>
        Using this value as the default value for this <typeparamref name="T"/> type.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <param name="[If]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LanguageAPI.Let``1(``0)">
      <summary>
        Helper for update the value property of <see cref="T:Microsoft.VisualBasic.Language.Value`1"/>

        ```vbnet
        Call Let$(<see cref="T:Microsoft.VisualBasic.Language.Value`1"/> = x)
        ```
      </summary>
      <typeparam name="T"></typeparam>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LanguageAPI.ref``1(``0)">
      <summary>
        Extension method for VisualBasic ``With`` anonymous variable syntax source reference helper
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.LanguageAPI.IsNothing``1(``0)">
      <summary>
        Extension method for VisualBasic ``With`` anonymous variable syntax for determine that source reference is nothing or not?
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.ShellSyntax">
      <summary>
        VB.NET language shell syntax supports exports
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.UnixBash.ShellSyntax.ls">
      <summary>
        ``ls -l -ext("*.xml") &lt;= DIR``,  The filesystem search proxy
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.UnixBash.ShellSyntax.l">
      <summary>
        Long name(DIR+fiename), if not only file name.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.UnixBash.ShellSyntax.r">
      <summary>
        递归的搜索
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.UnixBash.ShellSyntax.lsDIR">
      <summary>
        Searching the directory, if this parameter is not presents, then returns search file.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.ShellSyntax.wildcards(System.String[])">
      <summary>
        可以使用这个来限定文件或者文件夹对象的搜索范围
      </summary>
      <param name="__wildcards">可以为文件拓展或者对文件名的通配符的表达式，假若这个是空的，则会默认搜索所有文件*.*</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.tree">
      <summary>
        ```bash
        ``tree | awk -F: '{print '}|tail -n1``
        # 865 directories, 7957 files
        ```
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.FileDelete">
      <summary>
        ``rm -rf /*``
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.PS1">
      <summary>
        PS (Prompt Sign)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.PS1.H">
      <summary>
        ``\H`` 完整的主机名称
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.PS1.hl">
      <summary>
        ``\h`` 仅取主机名称的第一个名字
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.#ctor(System.String)">
      <summary>

      </summary>
      <param name="ps1"></param>
      <remarks>
        Example as:

        ```vbnet
        ' Fedora 12
        PS1='[\u@\h \w \A #\#]\$ '
        ```
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.Fedora12">
      <summary>
        Fedora 12 PS1 variable of the bash shell: ``[\u@\h \w \A #\#]\$ ``
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.ToString">
      <summary>
        Display the commandline prompt.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.n">
      <summary>
        ``\#`` 下达的第几个指令。
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.r">
      <summary>
        ``\$`` 提示字符，如果是``root``时，提示字符为``#``，否则就是``$``。
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.T">
      <summary>
        ``\T`` 显示时间, 12 小时的时间格式!
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.tl">
      <summary>
        ``\t`` 显示时间, 为 24 小时格式, 如: ``HH:MM:SS``
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.A">
      <summary>
        ``\A`` 显示时间, 24小时格式: ``HH:MM``
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.u">
      <summary>
        ``\u`` 目前使用者的账号名称
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.v">
      <summary>
        ``\v`` ``BASH``的版本信息
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.wl">
      <summary>
        ``\w`` 完整的工作目录名称。家目录会以``~``取代
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.W">
      <summary>
        ``\W`` 利用``<see cref="M:Microsoft.VisualBasic.ProgramPathSearchTool.BaseName(System.String,System.Boolean)"/>``取得工作目录名称，所以仅会列出最后一个目录名。
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.PS1.d">
      <summary>
        ``\d`` 代表日期, 格式为``Weekday Month Date``, 例如``Mon Aug 1``
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.FileSystem.PathMapper">
      <summary>
        Maps the linux path to the Windows path.(这个模块是将Linux路径映射为Windows路径的)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.UnixBash.FileSystem.PathMapper.platform">
      <summary>
        Gets a <see cref="T:System.PlatformID"/> enumeration value that identifies the operating system
        platform.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.FileSystem.PathMapper.GetMapPath(System.String)">
      <summary>
        Map linux path on Windows:

        + [~ -> C:\User\&lt;user_name>]
        + [# -> <see cref="P:Microsoft.VisualBasic.App.HOME"/>]
        + [/ -> C:\]
        + [/usr/bin -> C:\Program Files\]
        + [/usr -> C:\User\]
        + [- -> <see cref="P:Microsoft.VisualBasic.App.PreviousDirectory"/>]

      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.FileSystem.PathMapper.HOME">
      <summary>
        Get user home folder
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.FileSystem.File">
      <summary>
        Asbtract file IO model
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.FileSystem.FileHandle">
      <summary>
        文件系统对象的句柄
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.UnixBash.FileSystem.FileHandle.IsHTTP">
      <summary>
        Determined that is this filename is a network location.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.FileSystem.FileHandles.Close(System.Int32)">
      <summary>
        不存在的文件句柄会在这个函数之中被忽略掉
      </summary>
      <param name="file%"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.FileSystem.FileHandles.OpenHandle(System.String,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        Open a file system handle
      </summary>
      <param name="file"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.FileSystem.FileHandles.FileOpened(System.String)">
      <summary>
        Is this file opened
      </summary>
      <param name="filename"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.LinuxRunHelper">
      <summary>
        mono shortcuts
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.LinuxRunHelper.ScriptMe">
      <summary>
        perl ./<see cref="T:System.Reflection.Assembly"/> @ARGV
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.LinuxRunHelper.BashRun">
      <summary>
        Run from bash shell
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.LinuxRunHelper.BashShell">
      <summary>
        这里比perl脚本掉调用有一个缺点，在运行前还需要使用命令修改为可执行权限
        'sudo chmod 777 cmd.sh'
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.LinuxRunHelper.PerlShell">
      <summary>
        Execute command using perl script
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.CowsayTricks">
      <summary>
        Cowsay tricks for showing your message more friendly.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.CowsayTricks.NormalCow">
      <summary>
        Normal cow
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.CowsayTricks.DeadCow">
      <summary>
        The cow in dead face
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.CowsayTricks.RunCowsay(System.String,System.Boolean)">
      <summary>
        Show cowsay with a specific input message on your console screen. you can using /dead to change its face.
      </summary>
      <param name="msg"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.CowsayTricks.__msgbox(System.String)">
      <summary>
        Creates the message box to display the message for the cow on the console.
      </summary>
      <param name="msg"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.Search.__opts">
      <summary>
        The search options
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.Search.op_Subtraction(Microsoft.VisualBasic.Language.UnixBash.Search,Microsoft.VisualBasic.Language.UnixBash.SearchOpt)">
      <summary>
        Add a search options
      </summary>
      <param name="ls"></param>
      <param name="l"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.Search.op_Subtraction(Microsoft.VisualBasic.Language.UnixBash.Search,System.String[])">
      <summary>
        Add a set of wildcards patterns for path match
      </summary>
      <param name="ls"></param>
      <param name="wildcards$"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.Search.op_Subtraction(Microsoft.VisualBasic.Language.UnixBash.Search,System.String)">
      <summary>
        Add wildcard pattern for path match
      </summary>
      <param name="ls"></param>
      <param name="wildcards$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.Search.op_LeftShift(Microsoft.VisualBasic.Language.UnixBash.Search,System.Int32)">
      <summary>
        Search the files in the specific directory
      </summary>
      <param name="ls"></param>
      <param name="DIR"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.Search.op_LessThan(Microsoft.VisualBasic.Language.UnixBash.Search,System.String)">
      <summary>
        Search the files in the specific directory
      </summary>
      <param name="ls"></param>
      <param name="DIR"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.Search.op_LessThanOrEqual(Microsoft.VisualBasic.Language.UnixBash.Search,System.String)">
      <summary>
        Search the files in the specific directory
      </summary>
      <param name="ls"></param>
      <param name="directory"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.wildcardsCompatible">
      <summary>
        Using regular expression to find a match on the file name.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.wildcardsCompatible.usingRegexp">
      <summary>
        Using the regexp engine instead of the wildcard match engine?
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.wildcardsCompatible.opt">
      <summary>
        Windows系统上面文件路径不区分大小写，但是Linux、Mac系统却区分大小写
        所以使用这个来保持对Windows文件系统的兼容性
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.UnixBash.wildcardsCompatible.IsMatch(System.String)">
      <summary>
        Linux/Mac系统不支持Windows系统的通配符，所以在这里是用正则表达式来保持代码的兼容性
      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.SearchOpt.Options.Directory">
      <summary>
        List directories, not files listing.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.SearchOpt.Options.Recursive">
      <summary>
        递归搜索所有的文件夹
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.UnixBash.TextAPI.grep">
      <summary>
        grep (global search regular expression(RE) and print out the line
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.UnixBash.TextAPI.f">
      <summary>
        Text source of the grep operation is a file.
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.GrepOptions.a">
      <summary>
        将 binary 文件以 text 文件的方式搜寻数据
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.GrepOptions.c">
      <summary>
        计算找到 '搜寻字符串' 的次数
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.GrepOptions.i">
      <summary>
        忽略大小写的不同，所以大小写视为相同
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.GrepOptions.n">
      <summary>
        顺便输出行号
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.UnixBash.GrepOptions.v">
      <summary>
        反向选择，亦即显示出没有 '搜寻字符串' 内容的那一行！
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.UnixBash.GrepRegx">
      <summary>
        grep -acinv * "pattern" &lt;= "filename or text" |
        grep -acinv * "pattern" &lt;&lt; "filename"
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.int">
      <summary>
        Alias of <see cref="T:System.Int32"/>
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.int.CompareTo(System.Object)">
      <summary>
        Compare <see cref="T:Microsoft.VisualBasic.Language.int"/> or <see cref="T:System.Int32"/>
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.int.op_LessThan(System.Int32,Microsoft.VisualBasic.Language.int)">
      <summary>
        n &lt; value &lt;= n2
        假若n 大于value，则返回最大值，上面的表达式肯定不成立
      </summary>
      <param name="n"></param>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.int.op_LessThan(Microsoft.VisualBasic.Language.int,System.Int32)">
      <summary>
        ``x.value &lt; n``
      </summary>
      <param name="x"></param>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.int.op_GreaterThan(Microsoft.VisualBasic.Language.int,System.Int32)">
      <summary>
        ``x.value > n``
      </summary>
      <param name="x"></param>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.int.op_Subtraction(System.Int32,Microsoft.VisualBasic.Language.int)">
      <summary>
        正常的减法四则运算
      </summary>
      <param name="x%"></param>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.int.op_Implicit(System.Int32)~Microsoft.VisualBasic.Language.int">
      <summary>
        必须要overloads这个方法，否则会出现无法将Value(Of Integer)转换为int的错误
      </summary>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.int.op_UnaryPlus(Microsoft.VisualBasic.Language.int)">
      <summary>
        Auto increment value with step 1 and then returns the previous value.
        (自增1然后返回之前的值)
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.int.op_Addition(Microsoft.VisualBasic.Language.int,System.Int32)">
      <summary>
        位移<paramref name="n"/>个单位然后返回位移之后的结果值

        对于<see cref="T:Microsoft.VisualBasic.Language.int"/>类型而言，其更加侧重于迭代器中的位移，所以这个加法运算是符合
        ```vbnet
        x += n
        ```

        但是对于<see cref="T:Microsoft.VisualBasic.Language.float"/>类型而言，其更加侧重于模型计算，所以其加法不符合上述的语法，
        不会修改源变量的值，返回的是一个单纯的<see cref="T:System.Double"/>值类型
      </summary>
      <param name="x"></param>
      <param name="n%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.int.op_LeftShift(Microsoft.VisualBasic.Language.int,System.Int32)">
      <summary>
        p的值增加x，然后返回之前的值
      </summary>
      <param name="p"></param>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.float">
      <summary>
        <see cref="T:System.Double"/>
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.float.op_LessThan(System.Double,Microsoft.VisualBasic.Language.float)">
      <summary>
        n &lt; value &lt;= n2
        假若n 大于value，则返回最大值，上面的表达式肯定不成立
      </summary>
      <param name="n"></param>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Value">
      <summary>
        Variable model in VisualBasic
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Value.Trace">
      <summary>
        这个变量所在的函数的位置记录
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Value.IsNumeric">
      <summary>
        Is a numeric type?
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.LanguageExtensions">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Language.List`1"/> initizlize syntax supports
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LanguageExtensions.Add``1(Microsoft.VisualBasic.Language.List{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{``0}},System.String,``0,System.String)">
      <summary>
        New List From syntax supports

        ```
        {Name, value, Description?}
        ```
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.Language.LanguageExtensions.Add(Microsoft.VisualBasic.Language.List{Microsoft.VisualBasic.ComponentModel.Ranges.IntRange},System.String)">
      <summary>
        From {"1,100", "100,1000", "200,500"}
      </summary>
      <param name="list"></param>
      <param name="range$"></param>

    </member>
    <member name="T:Microsoft.VisualBasic.Language.Python.re">
      <summary>
        This module provides regular expression matching operations similar to those found in Perl. ``re`` module in the python language.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Python.re.Match.ToString">
      <summary>
        <see cref="P:System.Text.RegularExpressions.Capture.Value"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Python.re.FindAll(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>
        Return all non-overlapping matches of pattern in string, as a list of strings. The string is scanned left-to-right, and matches are returned in the order found.
        If one or more groups are present in the pattern, return a list of groups; this will be a list of tuples if the pattern has more than one group.
        Empty matches are included in the result unless they touch the beginning of another match.
      </summary>
      <param name="pattern">这个会首先被分行然后去除掉python注释</param>
      <param name="input"></param>
      <param name="options"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Python.re.__trimComment(System.String)">
      <summary>
        假设所有的注释都是由#和一个空格开始起始的 ``# ``
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Python.NamedTuple">
      <summary>
        ``namedtuple()`` Factory Function for Tuples with Named Fields
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Value`1">
      <summary>
        You can applying this data type into a dictionary object to makes the mathematics calculation more easily.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Value`1.IValueOf">
      <summary>
        This object have a <see cref="P:Microsoft.VisualBasic.Language.Value`1.IValueOf.Value"/> property for stores its data
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Value`1.IValueOf.Value">
      <summary>
        value property for this object stores its data
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Value`1.HasValue">
      <summary>
        Gets a value indicating whether the current System.Nullable`1 object has a valid
        value of its underlying type.
      </summary>
      <returns>
        true if the current System.Nullable`1 object has a value; false if the current
        System.Nullable`1 object has no value.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Value`1.GetValueOrDefault">
      <summary>
        Retrieves the value of the current System.Nullable`1 object, or the object's
        default value.
      </summary>
      <returns>
        The value of the System.Nullable`1.Value property if the System.Nullable`1.HasValue
        property is true; otherwise, the default value of the current System.Nullable`1
        object. The type of the default value is the type argument of the current System.Nullable`1
        object, and the value of the default value consists solely of binary zeroes.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Value`1.GetValueOrDefault(`0)">
      <summary>
        Retrieves the value of the current System.Nullable`1 object, or the specified
        default value.
      </summary>
      <param name="defaultValue">A value to return if the System.Nullable`1.HasValue property is false.</param>
      <returns>
        The value of the System.Nullable`1.Value property if the System.Nullable`1.HasValue
        property is true; otherwise, the defaultValue parameter.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Value`1.Equals(System.Object)">
      <summary>
        Indicates whether the current System.Nullable`1 object is equal to a specified
        object.
      </summary>
      <param name="other">An object.</param>
      <returns>
        true if the other parameter is equal to the current System.Nullable`1 object;
        otherwise, false. This table describes how equality is defined for the compared
        values: Return ValueDescriptiontrueThe System.Nullable`1.HasValue property is
        false, and the other parameter is null. That is, two null values are equal by
        definition.-or-The System.Nullable`1.HasValue property is true, and the value
        returned by the System.Nullable`1.Value property is equal to the other parameter.falseThe
        System.Nullable`1.HasValue property for the current System.Nullable`1 structure
        is true, and the other parameter is null.-or-The System.Nullable`1.HasValue property
        for the current System.Nullable`1 structure is false, and the other parameter
        is not null.-or-The System.Nullable`1.HasValue property for the current System.Nullable`1
        structure is true, and the value returned by the System.Nullable`1.Value property
        is not equal to the other parameter.
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Value`1.Value">
      <summary>
        The object value with a specific type define.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Value`1.#ctor(`0)">
      <summary>
        Creates an reference value object with the specific object value
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Value`1.#ctor">
      <summary>
        Value is Nothing
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Value`1.IsNothing">
      <summary>
        Is the value is nothing.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Value`1.ToString">
      <summary>
        Display <see cref="P:Microsoft.VisualBasic.Language.Value`1.Value"/> ``ToString()`` function value.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Value`1.op_UnaryPlus(Microsoft.VisualBasic.Language.Value{`0})">
      <summary>
        Gets the <see cref="P:Microsoft.VisualBasic.Language.Value`1.Value"/> property value.
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Value`1.op_Equality(Microsoft.VisualBasic.Language.Value{`0},`0)">
      <summary>
        Inline value assignment: ``Dim s As String = Value(Of String) = var``
      </summary>
      <param name="value"></param>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Pointer">
      <summary>
        Type of <see cref="T:System.Int32"/> pointer class to the <see cref="T:System.Array"/> class.
        (<see cref="T:System.Int32"/>类型，一般用来进行数组操作的)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Pointer.__index">
      <summary>
        Current read position
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Pointer.#ctor(System.Int32)">
      <summary>
        Construct a pointer class and then assign a initial <see cref="T:System.Int32"/> value.(构造一个指针对象，并且赋值其初始值)
      </summary>
      <param name="n">The initial value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Pointer.#ctor">
      <summary>
        Creates a new <see cref="T:System.Int32"/> type pointer object in VisualBasic with its initial value is ZERO.(构造一个初始值为零的整形数指针对象)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Pointer.op_LessThan(Microsoft.VisualBasic.Language.Pointer,System.Int32)">
      <summary>
        ``<see cref="F:Microsoft.VisualBasic.Language.Pointer.__index"/> &lt; <paramref name="n"/>``
      </summary>
      <param name="x"></param>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Pointer.op_LeftShift(Microsoft.VisualBasic.Language.Pointer,System.Int32)">
      <summary>
        移动n，然后返回之前的数值
      </summary>
      <param name="x"></param>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Pointer.op_UnaryPlus(Microsoft.VisualBasic.Language.Pointer)">
      <summary>
        Automatically increasing self +1 and then returns the previous value.(自增1，然后返回之前的数值)
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Pointer.op_UnaryNegation(Microsoft.VisualBasic.Language.Pointer)">
      <summary>
        自减1，然后返回之前的数值
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Pointer.op_LessThanOrEqual(Microsoft.VisualBasic.Language.Pointer,System.Int32)">
      <summary>
        Less than or equals
      </summary>
      <param name="x"></param>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Pointer.op_GreaterThanOrEqual(Microsoft.VisualBasic.Language.Pointer,System.Int32)">
      <summary>
        Greater than or equals
      </summary>
      <param name="x"></param>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Language.Uid.chars">
      <summary>
        index collection of array <see cref="F:Microsoft.VisualBasic.Language.Uid.__chars"/>
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.Uid.Key">
      <summary>
        可以通过这个属性来重设uid的字符串的值
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Uid.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Char})">
      <summary>
        使用自定义顺序的字符序列
      </summary>
      <param name="n"></param>
      <param name="_chars"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Uid.#ctor(System.Int32,System.Boolean)">
      <summary>

      </summary>
      <param name="n"></param>
      <param name="caseSensitive">
        假若是使用这个uid对象来生成临时文件名的话，由于Windows的文件系统是不区分大小写的，所以Aa的情况会出现同名的情况，
        所以在这里就需要设置为False了，大小写重名的情况在Linux或者Mac上面没有影响
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Uid.#ctor(System.Boolean)">
      <summary>
        ZERO
      </summary>
      <param name="caseSensitive">
        大小写敏感？假若是需要应用于文件名称，在Windows操作系统之上建议设置为False不敏感，否则会出现相同字母但是不同大小写的文件会被覆盖的情况出现
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Uid.op_Addition(Microsoft.VisualBasic.Language.Uid,System.Int32)">
      <summary>
        请注意，这个操作是线程不安全的，所以请确保在执行这个命令之前使用``SyncLock``加锁
      </summary>
      <param name="i"></param>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Uid.op_UnaryPlus(Microsoft.VisualBasic.Language.Uid)">
      <summary>
        请注意，这个操作是线程不安全的，所以请确保在执行这个命令之前使用``SyncLock``加锁
      </summary>
      <param name="i"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Uid.ToString">
      <summary>
        直接字符串序列，不会产生步进前移
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.FormatHelpers">
      <summary>
        ``<see cref="M:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.sprintf(System.String,System.Object[])"/>`` syntax helpers
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.FormatHelpers.xFormat(System.String)">
      <summary>
        ``<see cref="M:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.sprintf(System.String,System.Object[])"/>`` extensions
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.FormatHelpers.StringFormat(System.String[])">
      <summary>
        Synax like ``"formats" &lt;= {args}.xFormat``
        Format by <see cref="M:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.sprintf(System.String,System.Object[])"/>
      </summary>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.FormatHelper">
      <summary>
        ``<see cref="M:Microsoft.VisualBasic.Language.C.CLangStringFormatProvider.sprintf(System.String,System.Object[])"/>`` reference
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Values.Clones">
      <summary>
        Some extension for copy a collection object.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Values.Clones.Clone``2(System.Collections.Generic.IDictionary{``0,``1})">
      <summary>
        Creates a new dictionary
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="V"></typeparam>
      <param name="table"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.LinqAPI">
      <summary>
        Language syntax extension for the Linq expression in VisualBasic language
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPI.#ctor">
      <summary>
        2016-10-21
        在这里被设计成Class而不是Module是为了防止和Linq拓展之中的函数产生冲突
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPI.MakeList``1">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>`1 class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPI.Exec``1">
      <summary>
        Execute a linq expression. Creates an array from a <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
      </summary>
      <typeparam name="T"></typeparam>
      <returns>An array that contains the elements from the input sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPI.Exec``2(System.Collections.Generic.IEnumerable{``0})">
      <summary>

      </summary>
      <typeparam name="T">Is the type of linq source</typeparam>
      <typeparam name="V">Is the type of value output</typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPIHelpers.CountHelper`1.op_LessThanOrEqual(Microsoft.VisualBasic.Language.LinqAPIHelpers.CountHelper{`0},System.Collections.Generic.IEnumerable{`0})">
      <summary>
        判断序列计数是否相等
      </summary>
      <param name="h"></param>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPIHelpers.ListHelper`1.op_LessThanOrEqual(Microsoft.VisualBasic.Language.LinqAPIHelpers.ListHelper{`0},System.Collections.Generic.IEnumerable{`0})">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>`1 class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
      </summary>
      <param name="linq">The collection whose elements are copied to the new list.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPIHelpers.ListHelper`1.op_LessThanOrEqual(Microsoft.VisualBasic.Language.LinqAPIHelpers.ListHelper{`0},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{`0}})">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>`1 class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
      </summary>
      <param name="linq">The collection whose elements are copied to the new list.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPIHelpers.ListHelper`1.op_LessThanOrEqual(Microsoft.VisualBasic.Language.LinqAPIHelpers.ListHelper{`0},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{`0}}})">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>`1 class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
      </summary>
      <param name="linq">The collection whose elements are copied to the new list.</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.LinqAPIHelpers.ExecHelper`1">
      <summary>
        Execute a linq expression. Creates an array from a <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPIHelpers.ExecHelper`1.op_LessThanOrEqual(Microsoft.VisualBasic.Language.LinqAPIHelpers.ExecHelper{`0},System.Collections.Generic.IEnumerable{`0})">
      <summary>
        Creates an array from a <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
      </summary>
      <param name="cls"></param>
      <param name="linq">
        An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to create an array from.
      </param>
      <returns>An array that contains the elements from the input sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPIHelpers.ExecHelper`1.op_LessThanOrEqual(Microsoft.VisualBasic.Language.LinqAPIHelpers.ExecHelper{`0},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{`0}})">
      <summary>
        Creates an array from a <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
      </summary>
      <param name="cls"></param>
      <param name="linq">
        An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to create an array from.
      </param>
      <returns>An array that contains the elements from the input sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPIHelpers.FirstOrDefaultHelper`1.op_LessThanOrEqual(Microsoft.VisualBasic.Language.LinqAPIHelpers.FirstOrDefaultHelper{`0},System.Collections.Generic.IEnumerable{`0})">
      <summary>
        Exec <see cref="T:System.Collections.Generic.IEnumerable`1"/>.DefaultFirst extension method.
      </summary>
      <param name="cls"></param>
      <param name="linq"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.LinqAPIHelpers.ToArrayHelper`2">
      <summary>
        Execute a linq expression. Creates an array from a <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPIHelpers.ToArrayHelper`2.op_LessThanOrEqual(Microsoft.VisualBasic.Language.LinqAPIHelpers.ToArrayHelper{`0,`1},System.Func{`0,`1})">
      <summary>
        Exec ToArray
      </summary>
      <param name="cls"></param>
      <param name="linq"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.LinqAPIHelpers.ToArrayHelper`2.op_LessThanOrEqual(Microsoft.VisualBasic.Language.LinqAPIHelpers.ToArrayHelper{`0,`1},System.Func{`0,System.Int32,`1})">
      <summary>
        Exec ToArray
      </summary>
      <param name="cls"></param>
      <param name="linq"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.IClassObject">
      <summary>
        The base class object in VisualBasic
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.IClassObject.Extension">
      <summary>
        The extension property.(为了节省内存的需要，这个附加属性尽量不要被自动初始化)
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Class`1">
      <summary>
        <see cref="T:System.Type"/>
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Class`1.op_LessThanOrEqual(Microsoft.VisualBasic.Language.Class{`0},System.Collections.Generic.IEnumerable{`0})">
      <summary>
        ToArray
      </summary>
      <param name="cls"></param>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Class`1.op_Like(Microsoft.VisualBasic.Language.Class{`0},System.Collections.Generic.IEnumerable{`0})">
      <summary>
        IsNullOrEmpty
      </summary>
      <param name="cls"></param>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.BaseClass">
      <summary>
        The base class object in VisualBasic language
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Language.BaseClass.Extension">
      <summary>
        The extension property.(为了节省内存的需要，这个附加属性尽量不要被自动初始化)
      </summary>
      <returns></returns>
      <remarks>
        Dummy field for solve the problem of xml serialization >>>simpleContent&lt;&lt;&lt;

        http://stackoverflow.com/questions/2501466/xmltext-attribute-in-base-class-breakes-serialization

        So I think you could make it work by adding a dummy property or field that you never
        use in the ``LookupItem`` class.
        If you're never assign a value to it, it will remain null and will not be serialized,
        but it will prevent your class from being treated as simpleContent. I know it's a
        dirty workaround, but I see no other easy way...
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.BaseClass.ReadProperty``1(System.String)">
      <summary>
        Get dynamics property value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.BaseClass.ToString">
      <summary>
        Default is display the json value of the object class
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.BaseClass.__toString">
      <summary>
        String source for operator <see cref="M:Microsoft.VisualBasic.Language.BaseClass.op_Concatenate(Microsoft.VisualBasic.Language.BaseClass,System.String)"/>
      </summary>
      <returns>
        Default is using <see cref="M:Microsoft.VisualBasic.Language.BaseClass.ToString"/> method as provider
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.BaseClass.op_Concatenate(Microsoft.VisualBasic.Language.BaseClass,System.String)">
      <summary>
        Contact this class object with other string value
      </summary>
      <param name="x"></param>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.BaseClass.op_Concatenate(System.String,Microsoft.VisualBasic.Language.BaseClass)">
      <summary>
        Contact this class object with other string value
      </summary>
      <param name="s"></param>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Language.Numeric">
      <summary>
        Defines a generalized type-specific comparison method that a value type or class
        implements to order or sort its instances.
      </summary>
      <remarks>

        Summary:

        Compares the current instance with another object of the same type and returns
        an integer that indicates whether the current instance precedes, follows, or
        occurs in the same position in the sort order as the other object.

        Returns:

        A value that indicates the relative order of the objects being compared. The
        return value has these meanings:

        1. Value Meaning Less than zero
        This instance precedes obj in the sort order.

        2. Zero
        This instance occurs in the same position in the sort order as obj.

        3. Greater than zero
        This instance follows obj in the sort order.

        Exceptions:

        T:System.ArgumentException:
        obj is not the same type as this instance.
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Numeric.MaxIndex``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        *<see cref="M:Microsoft.VisualBasic.Language.Numeric.MaxIndex``1(System.Collections.Generic.IEnumerable{``0})"/>* The max element its index in the source collection.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Numeric.Equals``1(``0,``0)">
      <summary>
        =
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Numeric.LessThan``1(``0,``0)">
      <summary>
        &lt;
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Numeric.GreaterThan``1(``0,``0)">
      <summary>
        a > b
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Numeric.LessThanOrEquals``1(``0,``0)">
      <summary>
        ``<paramref name="a"/> &lt;= <paramref name="b"/>``
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Numeric.GreaterThanOrEquals``1(``0,``0)">
      <summary>
        =>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Language.Numeric.NextInteger(System.Random,System.Int32)">
      <summary>
        <see cref="M:Microsoft.VisualBasic.ListExtensions.Random``1(``0[])"/> get next integer in the specific range <paramref name="max"/>
      </summary>
      <param name="rnd"></param>
      <param name="max"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Expressions.Aggregate.GetAggregateFunction(System.String)">
      <summary>
        Get ``Aggregate`` function by term.
      </summary>
      <param name="name$">
        + max
        + min
        + average
      </param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Expressions.Selector">
      <summary>
        The property value selector
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Expressions.Selector.Select(System.Collections.IEnumerable,System.Type,System.String)">
      <summary>
        Select property value from target source collection by using a specific property name
      </summary>
      <param name="source"></param>
      <param name="type"></param>
      <param name="propertyName$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Expressions.Selector.Select``1(System.Collections.IEnumerable,System.Type,System.String)">
      <summary>
        Select property value from target source collection by using a specific property name and with a specific type casting constraint.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="type"></param>
      <param name="propertyName$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Expressions.Selector.Select``2(System.Collections.Generic.IEnumerable{``0},System.String)">
      <summary>
        Select all of the object elements their a specific property value and convert to a specific value type.
        (将对象类型之中的某一个属性筛选出来，然后转换为指定的数据类型)
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="V"></typeparam>
      <param name="source"></param>
      <param name="propertyName$">
        If the property name is ``$`` expression, that it means makes a type casting on it self.
        (如果属性名称为``$``，即引用自身，则这个函数的作用只是进行强制的``CType``类型转换)
      </param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Expressions.Selector.Selector`1">
      <summary>
        The object value selector function pointer template
      </summary>
      <typeparam name="T"></typeparam>
      <param name="property$"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Expressions.Selector.Select``1(System.Collections.Generic.IEnumerable{``0},System.String,Microsoft.VisualBasic.Scripting.Expressions.Selector.Selector{``0})">
      <summary>
        Where selector.(这个函数之中只有数字和字符串的比较)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="expression$">
        ###### propertyName operator value

        1. ``a = b``
        2. ``a > b``
        3. ``a &lt; b``
        4. ``a => b``
        5. ``a &lt;= b``
        4. ``a IN b``

        ``$``符号表示对象自身
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Expressions.ArrayIndex.AsVector(System.String)">
      <summary>
        表达式字符串只允许：``1, 2, 3, 4, 5``
      </summary>
      <param name="exp$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Expressions.ArrayIndex.TranslateIndex(System.String)">
      <summary>
        Translate the vector expression into a intger index vector
      </summary>
      <param name="exp$">
        + ``1``, index=1
        + ``1:8``, index=1, count=8
        + ``1->8``, index from 1 to 8
        + ``8->1``, index from 8 to 1
        + ``1,2,3,4``, index=1 or  2 or 3 or 4
      </param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Expressions.StringInterpolation">
      <summary>
        简单的字符串插值引擎，可以用来调试字符串表达式的处理结果
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.Expressions.StringInterpolation.VariablePattern">
      <summary>
        允许下换线，点号，ASCII字母，以及数字作为标识符
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Expressions.StringInterpolation.Interpolate(System.String,System.Func{System.String,System.String},System.Boolean,System.Boolean)">
      <summary>
        对于<paramref name="getValue"/>方法而言，是不需要``$``前缀了的
      </summary>
      <param name="expr$">
        只有当变量的值不为空值的时候才会进行替换，但是当<paramref name="nullAsEmpty"/>为真的时候会被强行替换为空字符串进行替换
      </param>
      <param name="getValue">Get string value of the variable in the expression.</param>
      <param name="escape">
        是否需要进行对\t\n这类字符的转义操作？假若是路径字符串，则不推荐开启这个选项了，因为路径的分隔符很容易引起误转义...
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Expressions.StringInterpolation.Interpolate(System.Text.StringBuilder@,System.Func{System.String,System.String},System.Boolean,System.Boolean)">
      <summary>
        在解析出variable之后，variable前面的``$``是会被清除掉的，所以variable的source <paramref name="getValue"/>里面的变量名称应该是没有``$``前缀的
      </summary>
      <param name="sb"></param>
      <param name="getValue"></param>
      <param name="nullAsEmpty">
        只有当变量的值不为空值的时候才会进行替换，但是当<paramref name="nullAsEmpty"/>为真的时候会被强行替换为空字符串进行替换
      </param>
      <param name="escape"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Runtime.IParser">
      <summary>
        Custom user object parser
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.IParser.ToString(System.Object)">
      <summary>
        将目标对象序列化为文本字符串
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.IParser.TryParse(System.String)">
      <summary>
        从Csv文件之中所读取出来的字符串之中解析出目标对象
      </summary>
      <param name="cell$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Runtime.BinaryOperator">
      <summary>
        Binary operator invoker
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.Runtime.BinaryOperator.Name">
      <summary>
        The name of this binary operator
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.BinaryOperator.#ctor(System.Reflection.MethodInfo[])">
      <summary>

      </summary>
      <param name="[overloads]">重名的运算符函数方法</param>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.BinaryOperator.#ctor(System.String,System.Reflection.MethodInfo[])">
      <summary>
        可以通过继承<see cref="T:System.Reflection.MethodInfo"/>类型来自定义函数，再使用这个操作符对象应用于脚本运行时环境之中
      </summary>
      <param name="name$"></param>
      <param name="methods"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.BinaryOperator.MatchLeft(System.Type)">
      <summary>
        ``args op me``.(参数在左边)
      </summary>
      <param name="type"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.BinaryOperator.MatchRight(System.Type)">
      <summary>
        ``me op args``.(参数在右边)
      </summary>
      <param name="type"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.BinaryOperator.InvokeSelfLeft(System.Object,System.Object,System.Object@)">
      <summary>
        参数在右边
      </summary>
      <param name="self"></param>
      <param name="obj"></param>
      <param name="result"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.BinaryOperator.InvokeSelfRight(System.Object,System.Object,System.Object@)">
      <summary>
        参数在左边
      </summary>
      <param name="obj"></param>
      <param name="self"></param>
      <param name="result"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.CastStringVector.AsCharacter(System.Collections.Generic.Dictionary{System.String,System.Double})">
      <summary>
        Convert the numeric <see cref="T:System.Double"/> type as the <see cref="T:System.String"/> text type.
      </summary>
      <param name="values"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.CastStringVector.AsNumeric(System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
        Convert the <see cref="T:System.String"/> value as <see cref="T:System.Double"/> numeric type.
      </summary>
      <param name="values"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.OverloadsFunction.Align(System.Reflection.MethodInfo,System.Type[])">
      <summary>
        Find the best matched overloads function based on the input parameter
      </summary>
      <param name="target"></param>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Runtime.NumberConversionRoutines">
      <summary>
        这个模块之中包含有安全的将字符串解析为不同的数值类型的方法函数
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.NumberConversionRoutines.CStrSafe(System.Object,System.String)">
      <summary>
        安全的将目标对象转换为字符串值
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.Runtime.Logics.And">
      <summary>
        两边的逻辑表达式都会被计算
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.Runtime.Logics.Or">
      <summary>
        两边的逻辑表达式都会被计算
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.Runtime.Logics.AndAlso">
      <summary>
        相比于<see cref="F:Microsoft.VisualBasic.Scripting.Runtime.Logics.And"/>，这个逻辑运算是会短路的
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.Runtime.Logics.OrElse">
      <summary>
        相比于<see cref="F:Microsoft.VisualBasic.Scripting.Runtime.Logics.Or"/>，这个逻辑运算是会短路的
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Runtime.Where">
      <summary>
        Merge the logical lambda into one lambda function by a specifc logical operation in <see cref="T:Microsoft.VisualBasic.Scripting.Runtime.Logics"/>.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Where.BuildAll``1(Microsoft.VisualBasic.Scripting.Runtime.Logics,System.Func{``0,System.Boolean}[])">
      <summary>
        Not support <see cref="F:Microsoft.VisualBasic.Scripting.Runtime.Logics.Not"/>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="logic"></param>
      <param name="tests"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Where.__or``1(``0,System.Func{``0,System.Boolean}[])">
      <summary>
        <see cref="F:Microsoft.VisualBasic.Scripting.Runtime.Logics.Or"/>, 所有的表达式都会被计算
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <param name="tests"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Where.__and``1(``0,System.Func{``0,System.Boolean}[])">
      <summary>
        <see cref="F:Microsoft.VisualBasic.Scripting.Runtime.Logics.And"/>, 所有的表达式都会被计算
      </summary>
      <param name="tests"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Runtime.Casting">
      <summary>
        Methods for convert the <see cref="T:System.String"/> to some .NET data types.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Casting.As``2(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Cast array type
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="TOut"></typeparam>
      <param name="list">在这里使用向量而非使用通用接口是因为和单个元素的As转换有冲突</param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.Runtime.Casting.RegexpDouble">
      <summary>
        用于解析出任意实数的正则表达式
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Casting.RegexParseDouble(System.String)">
      <summary>
        Parsing a real number from the expression text by using the regex expression <see cref="F:Microsoft.VisualBasic.Scripting.Runtime.Casting.RegexpFloat"/>.
        (使用正则表达式解析目标字符串对象之中的一个实数)
      </summary>
      <param name="s"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Casting.ParseNumeric(System.String)">
      <summary>
        Will processing value NaN automatically and strip for the comma, percentage expression.
      </summary>
      <param name="s">
        + numeric
        + NaN
        + p%
        + a/b
      </param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Casting.CastChar(System.String)">
      <summary>
        字符串是空值会返回空字符
      </summary>
      <param name="obj"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Casting.CastInteger(System.String)">
      <summary>
        出错会返回默认是0
      </summary>
      <param name="obj"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Casting.CastCommandLine(System.String)">
      <summary>
        <see cref="M:Microsoft.VisualBasic.CommandLine.CLITools.TryParse(System.Collections.Generic.IEnumerable{System.String},System.Boolean)"/>
      </summary>
      <param name="obj"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Runtime.Casting.CastImage(System.String)">
      <summary>
        <see cref="M:Microsoft.VisualBasic.Imaging.GraphicsExtensions.LoadImage(System.Byte[])"/>
      </summary>
      <param name="path"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Abstract">
      <summary>
        Delegate function pointer interface for scripting internal.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Abstract.GetValue">
      <summary>
        Gets the variable value from runtime.
      </summary>
      <param name="var$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Abstract.SetValue">
      <summary>
        Set the variable value to the variable.
      </summary>
      <param name="var$"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Abstract.FunctionEvaluate">
      <summary>
        How to make a function calls.(这个是在已经知道了确切的函数对象的前体下才会使用这个进行调用)
      </summary>
      <param name="func$">The function name in the scripting runtime</param>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Abstract.LoadObject">
      <summary>
        在脚本编程之中将用户输入的字符串数据转换为目标类型的方法接口
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.OperatorExpression.Linq2Symbols">
      <summary>
        Linq Type to operator symbols.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.PeekToken`1">
      <summary>
        A PeekToken object class, This defines the PeekToken object
      </summary>
      <remarks>
        A PeekToken is a special pointer object that can be used to Peek() several
        tokens ahead in the GetToken() queue.
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.ParserCommon">
      <summary>
        Generally expression parser codes
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.ParserCommon.StartEscaping(Microsoft.VisualBasic.Language.List{System.Char},System.Char)">
      <summary>
        当前的token对象之中是否是转义的起始，即当前的token之中的最后一个符号是否是转移符<paramref name="escape"/>?
      </summary>
      <param name="buffer"></param>
      <param name="escape"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.ParserCommon.GetCodeComment(System.String,System.String[])">
      <summary>
        假若返回来的是空字符串，则说明不是注释行
      </summary>
      <param name="line$"></param>
      <param name="prefix$">The prefix of the code comment character/string</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.ParserCommon.TokenParser``1(Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser{``0},System.String,Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens{``0})">
      <summary>

      </summary>
      <typeparam name="Tokens"></typeparam>
      <param name="parser"></param>
      <param name="expr">表达式字符串</param>
      <param name="stackT"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.ParserCommon.As``2(Microsoft.VisualBasic.Scripting.TokenIcer.Token{``0})">
      <summary>
        Dynamics casting the token value expression as target type object.
      </summary>
      <typeparam name="Tokens"></typeparam>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.ParserCommon.CType``1(Microsoft.VisualBasic.Scripting.TokenIcer.Token{``0},System.Type)">
      <summary>
        Dynamics casting the token value expression as target type object.
      </summary>
      <typeparam name="Tokens"></typeparam>
      <param name="x"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.ParserCommon.TryCast``1(Microsoft.VisualBasic.Scripting.TokenIcer.Token{``0})">
      <summary>
        Try cast the token value to a .NET object based on the token type name.
      </summary>
      <typeparam name="Tokens"></typeparam>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens`1">
      <summary>
        进行栈树解析所必须要的一些基本元素
      </summary>
      <typeparam name="Tokens"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens`1.Pretend">
      <summary>
        Pretend the root tokens as a true node
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens`1.ParamDeli">
      <summary>
        参数的分隔符，一般是逗号
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens`1.LPair">
      <summary>
        向下一层堆栈符号，一般是左括号
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens`1.RPair">
      <summary>
        向上一层出栈符号，一般是右括号
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens`1.Equals(`0,`0)">
      <summary>
        Tokens equals?
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens`1.#ctor(System.Func{`0,`0,System.Boolean})">
      <summary>
        Tokens equals?
      </summary>
      <param name="equals"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.Func`1.ToArray(Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens{`0})">
      <summary>
        将表达式的栈空间展开
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1">
      <summary>
        a Token object class, This defines the Token object
      </summary>
      <typeparam name="Tokens">应该是枚举类型</typeparam>
      <remarks>
        A Token object holds the token and token value.
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.name">
      <summary>
        Token type
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.Arguments">
      <summary>
        函数参数列表
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.Closure">
      <summary>
        这个token所拥有的闭包下一级代码，这个属性的值可以看作为具体的函数体
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.Value">
      <summary>
        The text that makes up the token.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.UNDEFINED(System.Int32)">
      <summary>
        You must keep the UNDEFINED type equals to ZERO!.
        (务必要保持0为未定义，如果不是使用零来定义未定义类型，则不能够使用这个属性来判断)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.Type">
      <summary>
        The token type, this property is an alias of <see cref="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.name"/> property
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.Text">
      <summary>
        Gets the text value that make up this token value, this readonly property
        is an alias of the <see cref="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.Value"/> property.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.IsNumeric">
      <summary>
        Returns a Boolean value indicating whether an expression can be evaluated as
        a number.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Token`1.IsObject">
      <summary>
        This token object eigther not a function and not a closure.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.Statement`1">
      <summary>
        The statement line that parsing from the script text
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.Statement`1.Trace">
      <summary>
        The script text raw data?
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.Main`1">
      <summary>
        inner closure or program main
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.Prefix">
      <summary>
        预定义的一些脚本的解析程序
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.Prefix.MathTokens">
      <summary>
        Tokens is an enumeration of all possible token values.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.Prefix.MathParserHash">
      <summary>
        These lines add each grammar rule to the dictionary
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.Prefix.IsScientificNotation(System.String)">
      <summary>
        这个字符串表达式是否是科学记数法的数字？
      </summary>
      <param name="s$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.StackParser">
      <summary>
        Stack tree parser
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.StackParser.Parsing``1(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.Scripting.TokenIcer.Token{``0}},Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens{``0})">
      <summary>
        返回顶层的根节点
      </summary>
      <param name="source"></param>
      <param name="stackT">Pretend the root tokens as a true node</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.StackParser.__parsing``1(System.Collections.Generic.Queue{Microsoft.VisualBasic.Scripting.TokenIcer.Token{``0}},Microsoft.VisualBasic.Scripting.TokenIcer.StackTokens{``0})">
      <summary>
        主要是解析当前的栈层之中的使用，逗号分隔的参数列表
      </summary>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1">
      <summary>
        TokenParser
      </summary>
      <remarks>
        TokenParser is the main parser engine for converting input into lexical tokens.

        Auto Generated from
        http://www.codeproject.com/Articles/220042/Easily-Create-Your-Own-Parser
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.InputString">
      <summary>
        InputString Property
      </summary>
      <value>
        The string value that holds the input string.
      </value>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.String}},`0)">
      <summary>
        Default Constructor
      </summary>
      <param name="tokens">Values is the regex expression</param>
      <remarks>
        The constructor initalizes memory and adds all of the tokens to the token dictionary.
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.#ctor(System.Collections.Generic.Dictionary{`0,System.String},`0)">
      <summary>
        Default Constructor
      </summary>
      <param name="tokens">Values is the regex expression</param>
      <remarks>
        The constructor initalizes memory and adds all of the tokens to the token dictionary.
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.PrepareRegex">
      <summary>
        PrepareRegex prepares the regex for parsing by pre-matching the Regex tokens.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.ResetParser">
      <summary>
        ResetParser resets the parser to its inital state. Reloading InputString is required.
      </summary>
      <seealso cref="P:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.InputString" />
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.GetToken">
      <summary>
        GetToken gets the next token in queue
      </summary>
      <remarks>
        GetToken attempts to the match the next character(s) using the
        Regex rules defined in the dictionary. If a match can not be
        located, then an Undefined token will be created with an empty
        string value. In addition, the token pointer will be incremented
        by one so that this token doesn't attempt to get identified again by
        GetToken()
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.Peek">
      <summary>
        Returns the next token that GetToken() will return.
      </summary>
      <seealso cref="M:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.Peek(Microsoft.VisualBasic.Scripting.TokenIcer.PeekToken{`0})" />
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.Peek(Microsoft.VisualBasic.Scripting.TokenIcer.PeekToken{`0})">
      <summary>
        Returns the next token after the Token passed here
      </summary>
      <param name="peekToken">The PeekToken token returned from a previous Peek() call</param>
      <seealso cref="M:Microsoft.VisualBasic.Scripting.TokenIcer.TokenParser`1.Peek" />
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.SymbolBuilder.VBLanguage">
      <summary>
        Keyword processor of the VB.NET language
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.SymbolBuilder.VBLanguage.VBKeywords">
      <summary>
        List of VB.NET language keywords
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.SymbolBuilder.VBLanguage.Words">
      <summary>
        Tokenize of <see cref="F:Microsoft.VisualBasic.Scripting.SymbolBuilder.VBLanguage.VBKeywords"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.SymbolBuilder.VBLanguage.AutoEscapeVBKeyword(System.String)">
      <summary>
        Escaping the vb variable name when it conflicts with VB keywords name,
        this function can be using for the VB.NET related code generator.
      </summary>
      <param name="name$">The identifier name.</param>
      <returns>
        If the identifier is a VB.NET keyword, then it will be escaping and returns,
        otherwise, will do nothing, function returns the raw input identifier.
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder">
      <summary>
        对<see cref="T:System.Text.StringBuilder"/>对象的拓展，添加了操作符凭借字符串，从而能够让生成代码的操作更加的方便
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder.ToString">
      <summary>
        Display the string text in the <see cref="T:System.Text.StringBuilder"/> object.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder.AppendLine(System.String)">
      <summary>
        Appends a copy of the specified string followed by the default line terminator
        to the end of the current <see cref="T:Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder"/> object.
      </summary>
      <param name="line$">The string to append.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder.op_Explicit(Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder)~System.String">
      <summary>
        <see cref="M:System.Text.StringBuilder.ToString"/>
      </summary>
      <param name="sb"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder.op_Concatenate(Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder,System.String)">
      <summary>
        <see cref="M:System.Text.StringBuilder.Append(,System.Int32)"/>
      </summary>
      <param name="sb"></param>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder.op_Addition(Microsoft.VisualBasic.Scripting.SymbolBuilder.ScriptBuilder,System.String)">
      <summary>
        <see cref="M:System.Text.StringBuilder.AppendLine"/>
      </summary>
      <param name="sb"></param>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.Activity">
      <summary>
        Display the object instance object json from the type definition by using <see cref="T:System.Activator"/>.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Activity.DisplayType(System.Type)">
      <summary>
        请注意，所需要进行显示的类型必须要Public类型的，假若该目标类型在Module之中，请保证Module也是Public访问的
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Activity.Active(System.Type)">
      <summary>
        Display the json of the target type its instance object.
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Activity.ActiveObject(System.Type)">
      <summary>
        与<see cref="M:System.Activator.CreateInstance(System.Type)"/>所不同的是，这个函数还会对属性进行一些Demo值得赋值操作
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Activity.__active(System.Type)">
      <summary>
        Creates the example instance object for the example
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.Activity.__activeList(System.Type)">
      <summary>
        + <see cref="T:System.Collections.Generic.List`1"/>
        + <see cref="T:Microsoft.VisualBasic.Language.List`1"/>(会统一返回这种类型)
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.MetaAPI.TypeInfo">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.MetaAPI.GetEntry(System.Type)">
      <summary>
        获取定义在类型定义上面的命名空间的标记信息
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.MetaData.TypeInfo">
      <summary>
        The type reference information.(类型信息)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.TypeInfo.assm">
      <summary>
        The assembly file which contains this type definition.(模块文件)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.TypeInfo.FullIdentity">
      <summary>
        <see cref="P:System.Type.FullName"/>.(类型源)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.TypeInfo.SystemKnownType">
      <summary>
        Is this type object is a known system type?(是否是已知的类型？)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.TypeInfo.#ctor(System.Type)">
      <summary>
        Creates type reference from the definition.
      </summary>
      <param name="info"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.TypeInfo.LoadAssembly(System.String)">
      <summary>
        Loads the assembly file which contains this type. If the <param name="DIR"></param> is not a valid directory location,
        then using the location <see cref="P:Microsoft.VisualBasic.App.HOME"/> as default.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.TypeInfo.GetType(System.Boolean)">
      <summary>
        Get mapping type information.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.TypeInfo.op_Equality(Microsoft.VisualBasic.Scripting.MetaData.TypeInfo,System.Type)">
      <summary>
        检查a是否是指向b的类型引用的
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.MetaData.Cite">
      <summary>
        EndNote tags
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.Cite.Authors">
      <summary>
        author(eMail);author(eMail)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.Cite.ISSN">
      <summary>
        ISSN_1; ISSN_2; ISSN_3
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.Cite.Abstract">
      <summary>
        文章的摘要，可以使用&lt;p>或者&lt;br/>来进行分段
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.Cite.#ctor(System.String)">
      <summary>
        %x 是文章的摘要，可以使用&lt;p>或者&lt;br/>来进行分段
      </summary>
      <param name="EndNoteImports"></param>
      <remarks>
        %A Griffiths-Jones, Sam
        %A Bateman, Alex
        %A Marshall, Mhairi
        %A Khanna, Ajay
        %A Eddy, Sean R.
        %T Rfam: an RNA family database
        %0 Journal Article
        %D 2003
        %8 January 1, 2003
        %J Nucleic Acids Research
        %P 439-441
        %R 10.1093/nar/gkg006
        %V 31
        %N 1
        %U http://nar.oxfordjournals.org/content/31/1/439.abstract
        %X Rfam Is a collection of multiple sequence alignments And covariance models representing non-coding RNA families. Rfam Is available on the web in the UK at http://www.sanger.ac.uk/Software/Rfam/ And in the US at http://rfam.wustl.edu/. These websites allow the user to search a query sequence against a library of covariance models, And view multiple sequence alignments And family annotation. The database can also be downloaded in flatfile form And searched locally using the INFERNAL package (http://infernal.wustl.edu/). The first release of Rfam (1.0) contains 25 families, which annotate over 50 000 non-coding RNA genes in the taxonomic divisions of the EMBL nucleotide database.
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.Cite.__formatAbstractPreview(System.String)">
      <summary>
        摘要可能会有空值的
      </summary>
      <param name="absLen"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.MetaData.Parameter">
      <summary>
        You Cann assign the parameter value using the parameter's alias name in the scripting using this attribute.
        (你可以使用本属性将函数的参数名进行重命名，这样子你就可以使用本属性得到一个书写更加漂亮的编程脚本文件了)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.Parameter.ParameterInfo">
      <summary>
        请使用这个方法<see cref="M:Microsoft.VisualBasic.Scripting.MetaData.Parameter.GetParameterNameAlias(System.Reflection.ParameterInfo,Microsoft.VisualBasic.Scripting.MetaData.Parameter)"></see>来获取参数信息
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.Parameter.Alias">
      <summary>
        The alias name of this function parameter in the scripting.(脚本函数的参数的别名)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.Parameter.Description">
      <summary>
        The description information in the scripting help system.(在帮助信息里面进行显示的本参数的简要的描述信息)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.Parameter.#ctor(System.String,System.String)">
      <summary>
        You can using this attribute to customize your API interface.
      </summary>
      <param name="Alias">The alias name of this function parameter in the scripting.(当前脚本函数的这个参数的别名)</param>
      <param name="MyDescription">The description information in the scripting help system.(这个信息会显示在脚本环境的帮助系统之中)</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.Parameter.GetAliasNameView(System.Reflection.ParameterInfo)">
      <summary>
        当没有定义属性的时候，会返回参数名
      </summary>
      <param name="pInfo"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute">
      <summary>
        This attribute provides a more details information about a namepace package module in your scripting plugins.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute.Url">
      <summary>
        This plugins project's home page url.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute.Publisher">
      <summary>
        Your name or E-Mail
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute.Cites">
      <summary>
        这个脚本模块包的文献引用列表
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute.#ctor(Microsoft.VisualBasic.CommandLine.Reflection.Namespace)">
      <summary>
        This attribute provides a more details information about a namepace package module in your scripting plugins.
      </summary>
      <param name="ns"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute.#ctor(Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute)">
      <summary>
        拷贝自身
      </summary>
      <param name="base"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute.#ctor(System.String)">
      <summary>
        This attribute provides a more details information about a namepace package module in your scripting plugins.
      </summary>
      <param name="[Namespace]"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.PackageAttribute.#ctor">
      <summary>
        This attribute provides a more details information about a namepace package module in your scripting plugins.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.MetaData.APICategories.SoftwareTools">
      <summary>
        API for facilities of the software development.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.MetaData.APICategories.ResearchTools">
      <summary>
        Analysis Tools API that applied on your scientific research or industry production on computer science.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.MetaData.APICategories.UtilityTools">
      <summary>
        Something small utilities for facility the scripting, makes your programming more easily.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.MetaData.APICategories.CLI_MAN">
      <summary>
        CLI program help manual.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.FunctionReturns.GetDescription(System.Reflection.MethodInfo)">
      <summary>
        Gets the description of the function returns value
      </summary>
      <param name="method"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.MetaData.OverloadsSignatureHandle">
      <summary>
        用于解决函数重载的函数数字签名的属性
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.MetaData.OverloadsSignatureHandle.#ctor(System.String,System.Type)">
      <summary>

      </summary>
      <param name="TypeIdBrief">
        Brief name for the target signature type <paramref name="FullName"></paramref>
      </param>
      <param name="FullName">Target signature type for function overloads.</param>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.ExternalCall">
      <summary>
        Shell object for the external script running.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.ExternalCall.__host">
      <summary>
        脚本宿主的可执行文件的路径
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.ExternalCall.#ctor(System.String,System.String)">
      <summary>

      </summary>
      <param name="host">The program its file name to run the script</param>
      <param name="ext">File extension name of this type of script</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.ExternalCall.Run(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>

      </summary>
      <param name="script">The script content</param>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.ExternalCall.Shell(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>

      </summary>
      <param name="path">The script file path</param>
      <param name="args"></param>
      <returns></returns>
      <remarks>Perl脚本测试通过！</remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.ShellValue">
      <summary>
        Script shell result.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.ShellValue.STD_OUT">
      <summary>
        Standard output on the console
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.ShellValue.STD_ERR">
      <summary>
        Standard error
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.ShellValue.state">
      <summary>
        Process exit code
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.ShellValue.GetObject``1(System.Func{System.String,``0})">
      <summary>
        Parsing object from the standard output
      </summary>
      <typeparam name="T"></typeparam>
      <param name="parser">Object parser</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.InputHandler">
      <summary>
        Handles the input text string from commandline or scripting, dealing with the
        conversion of this input string to .NET object in a more easy way.
        (转换从终端或者脚本文件之中输入的字符串的类型的转换)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.InputHandler.CasterString">
      <summary>
        Object为字符串类型，这个字典可以讲字符串转为目标类型
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.InputHandler.CTypeDynamic(System.String,System.Type)">
      <summary>
        Converts a string expression which was input from the console or script file to the specified type.
        (请注意，函数只是转换最基本的数据类型，转换错误会返回空值，空字符串也会返回空值)
      </summary>
      <param name="expression">The string expression to convert.</param>
      <param name="target">The type to which to convert the object.</param>
      <returns>An object whose type at run time is the requested target type.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.InputHandler.CTypeDynamic``1(System.String,``0)">
      <summary>
        Converts a string expression which was input from the console or script file to the specified type.
        (请注意，函数只是转换最基本的数据类型，转换错误会返回空值)
      </summary>
      <param name="expr">The string expression to convert.</param>
      <typeparam name="T">The type to which to convert the object.</typeparam>
      <returns>An object whose type at run time is the requested target type.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.InputHandler.IsPrimitive(System.Type)">
      <summary>
        Does this type can be cast from the <see cref="T:System.String"/> type?(目标类型能否由字符串转换过来??)
      </summary>
      <param name="targetType"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.InputHandler.CapabilityPromise(System.String,System.Type,Microsoft.VisualBasic.Scripting.Abstract.LoadObject)">
      <summary>
        Dynamics updates the capability of function <see cref="M:Microsoft.VisualBasic.Scripting.InputHandler.CTypeDynamic(System.String,System.Type)"/>,
        <see cref="M:Microsoft.VisualBasic.Scripting.InputHandler.CTypeDynamic``1(System.String,``0)"/> and
        <see cref="M:Microsoft.VisualBasic.Scripting.InputHandler.IsPrimitive(System.Type)"/>
      </summary>
      <param name="briefName"></param>
      <param name="stringConvertType"></param>
      <param name="cast"></param>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.InputHandler.Types">
      <summary>
        Enumerate all of the types that can be handled in this module. All of the key string is in lower case.(键值都是小写的)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.InputHandler.GetType(Microsoft.VisualBasic.Language.Value{System.String},System.Boolean)">
      <summary>
        Get .NET <see cref="T:System.Type"/> definition info from its name.
        (类型获取失败会返回空值，大小写不敏感)
      </summary>
      <param name="name">Case insensitive.(类型的名称简写)</param>
      <param name="ObjectGeneric">
        是否出错的时候返回<see cref="T:System.Object"/>类型，默认返回Nothing
      </param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.InputHandler.String">
      <summary>
        <see cref="T:System.Type"/> information for <see cref="T:System.String"/> type from GetType operator
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.InputHandler.Convertible(System.Type,System.Type)">
      <summary>
        Does the <paramref name="inputtype"/> type can be cast to type <paramref name="DefType"/>.
        (主要为了方便减少脚本编程模块的代码)
      </summary>
      <param name="inputType"></param>
      <param name="DefType"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.InputHandler.ToString(System.Object,System.String)">
      <summary>
        <seealso cref="M:Microsoft.VisualBasic.Scripting.Runtime.NumberConversionRoutines.CStrSafe(System.Object,System.String)"/>, 出现错误的时候总是会返回空字符串的
      </summary>
      <param name="obj"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.InputHandler.CastArray``1(System.Object)">
      <summary>
        The parameter <paramref name="obj"/> should implements a <see cref="T:System.Collections.IEnumerable"/> interface on the type. and then DirectCast object to target type.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.InputHandler.DirectCast(System.Object[],System.Type)">
      <summary>
        Cast the <see cref="T:System.Object"/> array to typed object array.
      </summary>
      <param name="array"></param>
      <param name="type">数组里面的元素的类型</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TextGrepMethodToken">
      <summary>

      </summary>
      <param name="source">文本源</param>
      <param name="paras">脚本命令的参数</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Scripting.TextGrepScriptEngine">
      <summary>
        A script object for grep the gene id in the blast output query and subject title.
        (用于解析基因名称的脚本类，这个对象是在项目的初始阶段，为了方便命令行操作而设置的)
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Scripting.TextGrepScriptEngine._operations">
      <summary>
        Source,Script,ReturnValue
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TextGrepScriptEngine.Compile(System.String)">
      <summary>
        对用户所输入的脚本进行编译，对于内部的空格，请使用单引号``'``进行分割
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Scripting.TextGrepScriptEngine.PipelinePointer">
      <summary>
        <see cref="M:Microsoft.VisualBasic.Scripting.TextGrepScriptEngine.Grep(System.String)"/>
        字符串剪裁操作的函数指针
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TextGrepScriptEngine.Grep(System.String)">
      <summary>
        修整目标字符串，按照脚本之中的方法取出所需要的字符串信息
      </summary>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TextGrepScriptEngine.Tokens(System.String,System.String[])">
      <summary>

      </summary>
      <param name="Source"></param>
      <param name="Script"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Scripting.TextGrepScriptEngine.MidString(System.String,System.String[])">
      <summary>

      </summary>
      <param name="source"></param>
      <param name="ScriptTokens">向量之中的第一个元素为命令的名字，第二个元素为Mid函数的Start参数，第三个元素为Mid函数的Length参数，可以被忽略掉</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.IStringParser">
      <summary>
        数据类型转换方法的句柄对象
      </summary>
      <param name="data">源之中的数据，由于源是一个TEXT格式的数据文件，故而这里的数据类型为字符串，通过本句柄对象可以将字符串数据映射为其他的复杂数据类型</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.IStringBuilder">
      <summary>
        将目标对象序列化为文本字符串的字符串构造方法
      </summary>
      <param name="data"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.JSON.Markdown">
      <summary>
        Markdown doc generator for the json schema
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.JSON.VisualBasicCode">
      <summary>
        Generates the VisualBasic source code from json schema
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.JSON.Schema">
      <summary>
        Here is a basic example of a JSON Schema:

        ```json
        {
        "title": "Example Schema",
        "type": "object",
        "properties": {
        "firstName": {
        "type": "string"
        },
        "lastName": {
        "type": "string"
        },
        "age": {
        "description": "Age in years",
        "type": "integer",
        "minimum": 0
        }
        },
        "required": ["firstName", "lastName"]
        }
        ```
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.JSON.Formatter.JsonFormatter">
      <summary>
        Provides JSON formatting functionality.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.JSON.Formatter.JsonFormatter.Format(System.String)">
      <summary>
        Returns a 'pretty printed' version of the specified JSON string, formatted for human
        consumption.
      </summary>
      <param name="json">A valid JSON string.</param>
      <returns>A 'pretty printed' version of the specified JSON string.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.JSON.Formatter.JsonFormatter.Minify(System.String)">
      <summary>
        Returns a 'minified' version of the specified JSON string, stripped of all
        non-essential characters.
      </summary>
      <param name="json">A valid JSON string.</param>
      <returns>A 'minified' version of the specified JSON string.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.JSON.JsonContract">
      <summary>
        Only works on the Public visible type.
        (使用.NET系统环境之中自带的框架进行JSON序列化和反序列化)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.JSON.JsonContract.GetObjectJson(System.Type,System.Object,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        使用<see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute"/>来屏蔽掉不想序列化的属性
      </summary>
      <param name="obj"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.JSON.JsonContract.WriteLargeJson``1(``0,System.String,System.Boolean)">
      <summary>
        将目标对象保存为json文件
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj"></param>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.JSON.JsonContract.RemoveJsonNullItems(System.String)">
      <summary>
        有些javascript程序(例如highcharts.js)要求json里面不可以出现null的属性，可以使用这个方法进行移除
      </summary>
      <param name="json"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.JSON.JsonContract.GetJson``1(``0,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        Gets the json text value of the target object, the attribute <see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute"/>
        can be used for block the property which is will not serialize to the text.
        (使用<see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute"/>来屏蔽掉不想序列化的属性)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj"></param>
      <returns></returns>
      <remarks>
        2016-11-9 对字典进行序列化的时候，假若对象类型是从字典类型继承而来的，则新的附加属性并不会被序列化，只会序列化字典本身
      </remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.JSON.JsonContract.LoadObject(System.String,System.Type,System.Boolean)">
      <summary>

      </summary>
      <param name="json">null -> Nothing</param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.JSON.JsonContract.LoadObject``1(System.String,System.Boolean)">
      <summary>
        JSON反序列化
      </summary>
      <param name="json">This string value can be json text or json file path.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.JSON.JsonContract.LoadObject``1(System.Xml.Linq.XElement,System.Boolean)">
      <summary>
        XML CDATA to json
      </summary>
      <typeparam name="T"></typeparam>
      <param name="json"></param>
      <param name="simpleDict"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.BinaryDumping.StructFormatter.Serialize``1(``0,System.String)">
      <summary>
        Save a structure type object into a binary file.(使用二进制序列化保存一个对象)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj"></param>
      <param name="path"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.BinaryDumping.StructFormatter.Load``1(System.String)">
      <summary>
        Load a strucutre object from the file system by using binary serializer deserialize.
        (使用反二进制序列化从指定的文件之中加载一个对象)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="path"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.BinaryDumping.StructSerializer">
      <summary>
        Some times these method is not works well, not sure why?
      </summary>
      <remarks>
        http://blog.csdn.net/zztoll/article/details/8695992

        Marshal类的两个方法StructureToPtr和PtrToStructure实现序列化

        我们主要是使用Marshal类里的两个方法：

        第一个是StructureToPtr，将数据从托管对象封送到非托管内存块。
        第二个是PtrToStructure，将数据从非托管内存块封送到新分配的指定类型的托管对象。

        只要有了这两个相互转换的方法，我们就可以实现序列化了。

        首先我们先来看下序列化

        序列化：

        有一个前提条件，那就是我们必须要知道需要序列化对象的大小。

        第一步：我们先求出对象的大小，然后在非托管内存中给它分配相应的内存大小。
        第二步：接着我们就把这个对象封送到刚分配出来的内存中，之后我们会得到一个分配出来的内存块首地址指针。
        第三步：最后我们可以通过这个首地址指针，从指针所指的位置处开始，拷贝数据到指定的byte[]数组中，
        拷贝的长度就是我们为这个对象分配出来的内存大小，得到byte[]数据后，下面的事情我就不用多说了，
        你可以保存到数据库或者文件中。

        反序列化：

        序列化的时候我们先将一个对象封送到了非托管内存块中，然后再把内存块中的数据读到byte[]数组中，

        现在我们反序列化

        第一步：我们先求出对象的大小，然后在非托管内存中给它分配相应的内存大小。
        第二步：然后把这个byte[]数据拷贝到非托管内存块中。
        第三步：最后再从内存块中封送指定大小的数据到对象中。

        有一个地方需要注意，那就是因为引用类型的对象我们是无法求的它的实际大小的，所以这里的对象我们只能使用非托管对象，比如struct结构体。
        所以，当我们只是用来存储数据，不涉及任何操作的对象，我们可以把它作为一个结构体来处理，这样我们在序列化的时候可以节省空间开销。
        因为你如果你要是用平常的序列化方法去序列化一个类对象，他所需要的空间开销是要大于你去序列化一个具有相同结构的struct对象。
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.BinaryDumping.StructSerializer.StructureToByte``1(``0)">
      <summary>
        由结构体转换为byte数组(字符串类型以及Class类型都将会被序列化为内存指针，所以这个函数只适合于值类型的)
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.BinaryDumping.StructSerializer.ByteToStructure``1(System.Byte[])">
      <summary>
        由byte数组转换为结构体(字符串类型以及Class类型都将会被序列化为内存指针，所以这个函数只适合于值类型的)
      </summary>

    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.BinaryDumping.BufferAPI">
      <summary>
        适用于对变长的流的操作
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.MappingsIgnored">
      <summary>
        这个属性或者方法不会被用于映射
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.UseCustomMapping">
      <summary>
        不会使用系统自带的映射方法进行映射
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Serialization.NodeMapping.Source">
      <summary>
        映射的文本文件源
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Serialization.NodeMapping.Mapping">
      <summary>
        映射操作的目标数据模型
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Serialization.NodeMapping.SourceToMappingCasting">
      <summary>
        从源映射到数据模型的类型转换
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Serialization.NodeMapping.MappingToSourceCasting">
      <summary>
        从数据模型映射到源的类型转换
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.DynamicsConfiguration.LoadDocument``1(System.String)">
      <summary>
        加载完数据之后返回其自身
      </summary>
      <typeparam name="T"></typeparam>
      <param name="path"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.DynamicsConfiguration.ToDictionary``1(System.Boolean)">
      <summary>
        将目标dump为一个字典
      </summary>
      <typeparam name="T"></typeparam>
      <param name="onlyPrimitive">
        假若这个为真的话，则只有初级类型的才会被读取，反之，复杂类型会被序列化为json作为字符串value
      </param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.ConfigurationMappings">
      <summary>
        最基本的思想是将属性值按照同名属性名称在A和B两个对象类型之间进行映射，即A与B两个对象之间必须要具备相同的属性名称，才可以产生映射，请注意在本对象之中仅能够映射最基本的值类型的数据类型
        对于一些自定义的映射操作，请在目标数据模型之中定义自定义的映射函数，要求为函数只有一个参数，参数类型和返回值类型分别为映射的两个节点的数据类型，程序会使用反射自动查找
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.ConfigurationMappings.LoadMapping``2(``1)">
      <summary>
        从源江基本的值类型映射到数据模型，以将配置数据读取出来并进行加载
      </summary>
      <typeparam name="T">数据模型</typeparam>
      <typeparam name="TMaps">源</typeparam>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.ConfigurationMappings.WriteMapping``2(``0)">
      <summary>
        从数据模型将值类型数据映射回源，以将配置数据写入文件
      </summary>
      <typeparam name="T">数据模型</typeparam>
      <typeparam name="TMaps">源</typeparam>
      <param name="Model"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.ConfigurationMappings.GetNodeMapping``2(System.Object)">
      <summary>
        获取从源映射至数据模型的映射过程
      </summary>
      <typeparam name="T">数据模型</typeparam>
      <typeparam name="TMaps">源</typeparam>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.ShadowsCopy.DeepCopy``1(``0)">
      <summary>
        Perform a deep Copy of the object.
      </summary>
      <typeparam name="T">The type of object being copied.</typeparam>
      <param name="source">The object instance to copy.</param>
      <returns>The copied object.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.ShadowsCopy.ShadowsCopy``1(``0)">
      <summary>
        将目标对象之中的属性按值复制
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj"></param>
      <returns></returns>
      <remarks>对外函数接口，为了防止无限递归的出现</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.ShadowsCopy.ShadowsCopy(System.Object)">
      <summary>
        将目标对象之中的属性按值复制
      </summary>
      <param name="obj"></param>
      <returns></returns>
      <remarks>对外函数接口，为了防止无限递归的出现</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.ShadowsCopy.__shadowsCopy(System.Type,System.Object)">
      <summary>
        递归使用的，基本数据类型直接复制，引用类型则首先创建一个新的对象，在对该对象进行递归复制，假若目标对象没有可用的无参数的构造函数，则直接赋值
      </summary>
      <param name="obj"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.ShadowsCopy.ShadowCopy``1(``0,``0@)">
      <summary>
        请使用这个函数来对CSV序列化的对象进行浅拷贝。将<paramref name="source"/>之中的第一层的属性值拷贝到<paramref name="target"/>对应的属性值之中，然后返回<paramref name="target"/>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="Target"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.ShadowsCopy.ShadowCopy``2(``0)">
      <summary>
        将第一层的属性值从基本类复制给继承类
      </summary>
      <typeparam name="Tbase"></typeparam>
      <typeparam name="TInherits"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.ShadowsCopyOpr`1">
      <summary>
        批量拷贝需要使用这个模块来执行
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.Serialization.ShadowsCopyOpr`2">
      <summary>
        批量拷贝需要使用这个模块来执行
      </summary>
      <typeparam name="Tbase"></typeparam>
      <typeparam name="TInherits"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Serialization.MemoryDump.__dumpInvoke(System.Object,System.Int32)">
      <summary>
        Create memory dump for a class object instance
      </summary>
      <param name="obj"></param>
      <param name="DumpLevel"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Similarity.StringEqualityHelper">
      <summary>
        thresholds:

        + 0: text equals
        + 1: binary equals
        + (0, 1): similarity threshold
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.Similarity.StringEqualityHelper.threshold">
      <summary>
        + 0: text equals
        + 1: binary equals
        + (0, 1): similarity threshold
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Similarity.StringEqualityHelper.#ctor(System.Double)">
      <summary>
        thresholds:

        + 0: text equals
        + 1: binary equals
        + (0, 1): similarity threshold
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Similarity.WildcardsExtension">
      <summary>
        Extensions to <see cref="T:System.String"/> by using wildcards to match string

        ###### A very simple wildcard match
        > https://github.com/picrap/WildcardMatch
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Similarity.WildcardsExtension.WildcardMatch(System.String,System.String,System.Boolean)">
      <summary>
        Tells if the given string matches the given wildcard.
        Two wildcards are allowed: ``*`` and ``%``.

        + '*' matches any ZERO or more characters
        + '%' matches any single character
      </summary>
      <param name="wildcard">The wildcard.</param>
      <param name="s">The s.</param>
      <param name="ignoreCase">
        if set to <c>true</c> [ignore case].
      </param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Text.Similarity.WildcardsExtension.WildcardMatch(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>
        Internal matching algorithm.
      </summary>
      <param name="wildcard">The wildcard.</param>
      <param name="s">The s.</param>
      <param name="wildcardIndex">Index of the wildcard.</param>
      <param name="sIndex">Index of the s.</param>
      <param name="ignoreCase">
        if set to <c>true</c> [ignore case].
      </param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Similarity.ISimilarity">
      <summary>
        Summary description for StringMatcher.
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.Text.Similarity.Evaluations.Evaluate(System.String,System.String,System.Boolean,System.Double,Microsoft.VisualBasic.Text.Levenshtein.DistResult@)">
      <summary>
        两个字符串之间是通过单词的排布的相似度来比较相似度的
      </summary>
      <param name="s1"></param>
      <param name="s2"></param>
      <param name="ignoreCase"></param>
      <param name="cost#"></param>
      <param name="dist"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Similarity.Evaluations.LevenshteinEvaluate(System.String,System.String,System.Boolean,System.Double,Microsoft.VisualBasic.Text.Levenshtein.DistResult@)">
      <summary>
        计算字符串，这个是直接通过计算字符而非像<see cref="M:Microsoft.VisualBasic.Text.Similarity.Evaluations.Evaluate(System.String,System.String,System.Boolean,System.Double,Microsoft.VisualBasic.Text.Levenshtein.DistResult@)"/>方法之中计算单词的
      </summary>
      <param name="s1$"></param>
      <param name="s2$"></param>
      <param name="ignoreCase"></param>
      <param name="cost#"></param>
      <param name="dist"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Similarity.Evaluations.TokenOrders(System.String,System.String,System.Boolean)">
      <summary>
        以s1为准则，将s2进行比较，返回s2之中的单词在s1之中的排列顺序
      </summary>
      <param name="s1"></param>
      <param name="s2"></param>
      <returns>序列之中的-1表示s2之中的单词在s1之中不存在</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Similarity.Evaluations.IsOrdered(System.String[],System.String[],System.Boolean,System.Boolean)">
      <summary>
        查看<paramref name="s2"/>之中的字符串的顺序是否是在<paramref name="s1"/>之中按顺序排序的
      </summary>
      <param name="s1$"></param>
      <param name="s2$"></param>
      <param name="caseSensitive"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.GreekAlphabets">
      <summary>
        Processing for the chemical compound name/genome species scientific name.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.GreekAlphabets.StripGreek(System.Text.StringBuilder@)">
      <summary>
        将字符串文本之中的希腊字母替换为英文单词
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.GreekAlphabets.StripGreek(System.String)">
      <summary>
        将字符串文本之中的希腊字母替换为英文单词
      </summary>
      <param name="s$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinString">
      <summary>
        The string like helper
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinString.op_Like(System.String,Microsoft.VisualBasic.Text.Levenshtein.LevenshteinString)">
      <summary>
        String similarity compares
      </summary>
      <param name="s$"></param>
      <param name="subject"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinString.op_Like(Microsoft.VisualBasic.Text.Levenshtein.LevenshteinString,System.String)">
      <summary>
        String similarity compares
      </summary>
      <param name="query"></param>
      <param name="s$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinString.op_Like(Microsoft.VisualBasic.Text.Levenshtein.LevenshteinString,Microsoft.VisualBasic.Text.Levenshtein.LevenshteinString)">
      <summary>
        String similarity compares
      </summary>
      <param name="query"></param>
      <param name="subject"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.ResultVisualize.HTMLVisualize(Microsoft.VisualBasic.Text.Levenshtein.DistResult)">
      <summary>
        Output HTML result for visualization
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Levenshtein.DistResult.DistEdits">
      <summary>
        How doest the <see cref="P:Microsoft.VisualBasic.Text.Levenshtein.DistResult.Hypotheses"/> evolve from <see cref="P:Microsoft.VisualBasic.Text.Levenshtein.DistResult.Reference"/>.(这个结果描述了subject是如何变化成为Query的)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Levenshtein.DistResult.Score">
      <summary>
        可以简单地使用这个数值来表述所比较的两个对象之间的相似度
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Levenshtein.DistResult.MatchSimilarity">
      <summary>
        ``m+`` scores.(0-1之间)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Levenshtein.DistResult.NumMatches">
      <summary>
        比对上的对象的数目
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevExtensions.StripSymbol(System.String,System.String,System.Boolean)">
      <summary>
        将字符串之中的标点符号删除，只留下字母
      </summary>
      <param name="input$"></param>
      <param name="replaceAs$">将这些标点符号替换为目标字符串，默认为空格</param>
      <param name="stripMinusSign">是否将减号也替换掉，默认是不进行替换</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance">
      <summary>
        Levenshtein Edit Distance Algorithm for measure string distance
      </summary>
      <remarks>
        http://www.codeproject.com/Tips/697588/Levenshtein-Edit-Distance-Algorithm
      </remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.__createTable(System.Int32[],System.Int32[],System.Double)">
      <summary>
        Creates distance table for data visualization
      </summary>
      <param name="reference"></param>
      <param name="hypotheses"></param>
      <param name="cost"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.CreateTable``1(``0[],``0[],Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.Cost{``0},Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.Equals{``0})">
      <summary>
        用于泛型的序列相似度比较
      </summary>
      <typeparam name="T"></typeparam>
      <param name="reference"></param>
      <param name="hypotheses"></param>
      <param name="cost"></param>
      <param name="equals">泛型化的元素等价性的比较方法</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.ComputeDistance``1(``0[],``0[],Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.Equals{``0},System.Double)">
      <summary>
        泛型序列的相似度的比较计算方法，这个函数返回的是距离
      </summary>
      <typeparam name="T"></typeparam>
      <param name="reference"></param>
      <param name="hypotheses"></param>
      <param name="equals"></param>
      <param name="cost"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.ComputeDistance``1(``0[],``0[],Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.Equals{``0},Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.ToChar{``0},System.Double)">
      <summary>
        泛型序列的相似度的比较计算方法，这个会返回所有的数据
      </summary>
      <typeparam name="T"></typeparam>
      <param name="reference"></param>
      <param name="hypotheses"></param>
      <param name="equals"></param>
      <param name="asChar">这个只是用于进行显示输出的</param>
      <param name="cost"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.ComputeDistance(System.Int32[],System.String,System.Double)">
      <summary>
        Implement the Levenshtein Edit Distance algorithm between string.
      </summary>
      <param name="reference">The reference string ASCII cache.</param>
      <param name="hypotheses"></param>
      <param name="cost"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.__computeRoute(System.String,Microsoft.VisualBasic.Text.Levenshtein.DistResult,System.Int32,System.Int32,System.Double[0:,0:])">
      <summary>
        计算lev编辑的变化路径
      </summary>
      <param name="hypotheses"></param>
      <param name="result"></param>
      <param name="i"></param>
      <param name="j"></param>
      <param name="distTable"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Levenshtein.LevenshteinDistance.ComputeDistance(System.String,System.String,System.Double)">
      <summary>
        The edit distance between two strings is defined as the minimum number of
        edit operations required to transform one string into another.
        (请注意，这函数是大小写敏感的。如果需要大小写不敏感，在使用前，请先将函数的两个字符串参数都转换为小写形式)
      </summary>
      <param name="reference"></param>
      <param name="hypotheses"></param>
      <param name="cost"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Linq.NodeIterator.IterateArrayNodes(System.String,System.String)">
      <summary>
        使用<see cref="M:System.Xml.XmlDocument.Load(System.IO.Stream)"/>方法加载XML文档依旧是一次性的全部加载所有的文本到内存之中，第一次加载效率会比较低
        则可以使用这个方法来加载非常大的XML文档
      </summary>
      <param name="path$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Linq.Data">
      <summary>
        Using large xml file as Linq data source
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Linq.Data.LoadXmlDocument(System.String)">
      <summary>
        Load a specific xml file from a file location <paramref name="pathOrDoc"/>/ or
        a xml text document data into a <see cref="T:System.Xml.XmlDocument"/> object.
      </summary>
      <param name="pathOrDoc"></param>
      <returns></returns>
      <remarks>
        using internally XDocument.Load to parse whole XML at once
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Linq.Data.GetTypeName(System.Type,System.String)">
      <summary>
        Using <paramref name="default"/> string name or <see cref="P:System.Reflection.MemberInfo.Name"/>
      </summary>
      <param name="type"></param>
      <param name="default$">
        If this parameter value is <see cref="M:Microsoft.VisualBasic.StringHelpers.StringEmpty(System.String,System.Boolean)"/>, then <see cref="P:System.Reflection.MemberInfo.Name"/> will be use as the xml node name.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Linq.Data.GetNodeNameDefine(System.Type)">
      <summary>
        分别解析<see cref="T:System.Xml.Serialization.XmlTypeAttribute"/>，<see cref="T:System.Xml.Serialization.XmlRootAttribute"/>，如果这两个定义都不存在的话就返回<see cref="P:System.Reflection.MemberInfo.Name"/>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Linq.Data.LoadXmlDataSet``1(System.String,System.String,System.String,System.Boolean)">
      <summary>
        Only works for the xml file that contains a list or array of xml element, and then this function using this list element as linq data source.
        (这个函数只建议在读取比较小的XML文件的时候使用，并且这个XML文件仅仅是一个数组或者列表的序列化结果)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="XML$">超大的XML文件的文件路径</param>
      <param name="typeName">
        列表之中的节点在XML之中的tag标记名称，假若这个参数值为空的话，则会默认使用目标类型名称<see cref="P:System.Reflection.MemberInfo.Name"/>
      </param>
      <param name="xmlns">
        Using for the namespace replacement.
        (当这个参数存在的时候，目标命名空间申明将会被替换为空字符串，数据对象才会被正确的加载)
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Linq.Data.NodeInstanceBuilder``1(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <param name="nodes"></param>
      <param name="replaceXmlns$"></param>
      <param name="xmlNode$">文件之中的节点名称</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Linq.Data.LoadUltraLargeXMLDataSet``1(System.String,System.String,System.String)">
      <summary>
        Apply on a ultra large size XML database, which its data size is greater than 1GB to 100GB or even more.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="path$"></param>
      <param name="typeName$"></param>
      <param name="xmlns$"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.Models.StringValue.value">
      <summary>
        A short text value without new line symbols
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Models.LineValue">
      <summary>
        代码行的模型？
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Models.Coordinate">
      <summary>
        Improvements on the xml format layout compare with <see cref="T:System.Drawing.PointF"/> type.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Models.NumericVector">
      <summary>
        A <see cref="T:System.Double"/> type numeric sequence container
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.Models.NumericVector.Xi(System.Int32)">
      <summary>
        Get/Set Element ``Xi``
      </summary>
      <param name="i"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.Models.NumericVector.Length">
      <summary>
        The vector length for counting the elements in <see cref="P:Microsoft.VisualBasic.Text.Xml.Models.NumericVector.Vector"/> property.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Models.XmlBuilder">
      <summary>
        Builder for XML and html
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Models.NamedValue">
      <summary>
        键值对集合的键值<see cref="P:Microsoft.VisualBasic.Text.Xml.Models.NamedValue.text"/>可能是一大段文本
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.Models.NamedValue.name">
      <summary>
        The term category/key
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.Models.NamedValue.text">
      <summary>
        The term value
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Models.Property">
      <summary>
        Property Info (Property Name and Property Value).
        (和<see cref="T:Microsoft.VisualBasic.Text.Xml.Models.NamedValue"/>所不同的是，这个对象之中的键值对集合的键值都是小段字符串)
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Models.NamedVector`1">
      <summary>
        在这里不实现<see cref="T:System.Collections.Generic.IEnumerable`1"/>是为了方便的实现XML序列化操作
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.Models.NamedVector`1.attributes">
      <summary>
        在这里不使用字典是因为Xml序列化无法序列化字典对象
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Models.KeyValuePair">
      <summary>
        An object for the text file format xml data storage.(用于存储与XML文件之中的字符串键值对对象)
      </summary>
      <remarks>
        + 2016-05-24 为了更好的构建GCModeller项目的数据文档的格式，本类型对象不再继承自<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.KeyValuePairObject`2"/>类型
      </remarks>

    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Models.KeyValuePair.IKeyValuePair">
      <summary>
        Defines a key/value pair that can be set or retrieved.(特化的<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IKeyValuePairObject`2"></see>字符串属性类型)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.Models.KeyValuePair.Key">
      <summary>
        Gets the key in the key/value pair.
      </summary>
      <value></value>
      <returns></returns>
      <remarks>
        在这里可能用不了<see cref="T:System.Xml.Serialization.XmlAttributeAttribute"></see>自定义属性，因为其基本类型之中的Key和Value可以是任意的类型的，Attribute格式无法序列化复杂的数据类型
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Models.KeyValuePair.Equals(Microsoft.VisualBasic.Text.Xml.Models.KeyValuePair,System.Boolean)">
      <summary>

      </summary>
      <param name="obj"></param>
      <param name="strict">If strict is TRUE then the function of the string compares will case sensitive.</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.OpenXml.ContentTypes">
      <summary>
        ``[Content_Types].xml``
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Extensions.StripInvalidCharacters(System.String)">
      <summary>
        使用这个函数删除xml文本字符串之中的无效的字符
      </summary>
      <param name="xml$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.XmlDeclaration.ToString">
      <summary>
        &lt;?xml version="{<see cref="F:Microsoft.VisualBasic.Text.Xml.XmlDeclaration.version"/>}" encoding="{<see cref="F:Microsoft.VisualBasic.Text.Xml.XmlDeclaration.encoding"/>}" standalone="{<see cref="F:Microsoft.VisualBasic.Text.Xml.XmlDeclaration.standalone"/>}"?>
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.Xmlns">
      <summary>
        Xml namespace
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.Xml.Xmlns.DefaultXmlns">
      <summary>
        ``xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"``
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.Xmlns.xmlns">
      <summary>
        ``xmlns=...``
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.Xmlns.namespace">
      <summary>
        枚举所有``xmlns:&lt;type>``开始的属性
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Xmlns.Set(System.String,System.String)">
      <summary>
        Set the value of a new xml namespace.(<paramref name="ns"/>命名空间参数不需要添加 xmlns: 前缀)
      </summary>
      <param name="ns"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Xmlns.RootParser(System.String)">
      <summary>
        The parser for the xml root node.
      </summary>
      <param name="root"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.Xmlns.WriteNamespace(System.Text.StringBuilder,System.Boolean)">
      <summary>

      </summary>
      <param name="xml"></param>
      <remarks>当前的这个对象是新值，需要替换掉文档里面的旧值</remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Xml.XmlDoc">
      <summary>
        请使用<see cref="M:Microsoft.VisualBasic.Text.Xml.XmlDoc.ToString"/>方法获取修改之后的Xml文档
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Xml.XmlDoc.xmlns">
      <summary>
        Xml namespace definitions
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.XmlDoc.#ctor(System.String)">
      <summary>
        Create a xml tools from xml document text.
      </summary>
      <param name="xml"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.XmlDoc.ToString">
      <summary>
        使用这个函数可以得到修改之后的Xml文档
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.XmlDoc.ToString(System.Boolean)">
      <summary>
        使用这个函数可以得到修改之后的Xml文档
      </summary>
      <param name="usingDefault_xmlns">
        <see cref="F:Microsoft.VisualBasic.Text.Xml.Xmlns.DefaultXmlns"/>
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.XmlDoc.CreateObject``1(System.Boolean)">
      <summary>
        从新修改过的xml文档之中通过反序列化构建目标对象
      </summary>
      <typeparam name="T"></typeparam>
      <param name="usingDefault_xmlns"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Xml.XmlDoc.SaveTo(System.String,System.Text.Encoding)">
      <summary>
        Me.ToString.SaveTo(Path, encoding)
      </summary>
      <param name="Path"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.ASCII">
      <summary>
        ``ASCII`` (``American Standard Code for Information Interchange``，美国信息互换标准代码，``ASCⅡ``) 是基于拉丁字母的一套电脑编码系统。
        它主要用于显示现代英语和其他西欧语言。它是现今最通用的单字节编码系统，并等同于国际标准``ISO/IEC 646``。
        ASCII第一次以规范标准的型态发表是在1967年，最后一次更新则是在1986年，至今为止共定义了128个字符，其中33个字符无法显示
        （这是以现今操作系统为依归，但在DOS模式下可显示出一些诸如笑脸、扑克牌花式等8-bit符号），且这33个字符多数都已是陈废的控制字符，
        控制字符的用途主要是用来操控已经处理过的文字，在33个字符之外的是95个可显示的字符，包含用键盘敲下空白键所产生的空白字符也算1个可显示字符
        （显示为空白）。
      </summary>
      <remarks>http://ascii.911cha.com/</remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.NUL">
      <summary>
        0000 0000	0	00	NUL	空字符（Null）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.SOH">
      <summary>
        0000 0001	1	01	SOH	标题开始
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.STX">
      <summary>
        0000 0010	2	02	STX	本文开始
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.ETX">
      <summary>
        0000 0011	3	03	ETX	本文结束
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.EOT">
      <summary>
        0000 0100	4	04	EOT	传输结束
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.ENQ">
      <summary>
        0000 0101	5	05	ENQ	请求
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.ACK">
      <summary>
        0000 0110	6	06	ACK	确认回应
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.BEL">
      <summary>
        0000 0111	7	07	BEL	响铃
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.BS">
      <summary>
        0000 1000	8	08	BS	退格
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.HT">
      <summary>
        0000 1001	9	09	HT	水平定位符号
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.LF">
      <summary>
        0000 1010	10	0A	LF	换行键
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.VT">
      <summary>
        0000 1011	11	0B	VT	垂直定位符号
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.FF">
      <summary>
        0000 1100	12	0C	FF	换页键
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.CR">
      <summary>
        0000 1101	13	0D	CR	归位键
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.SO">
      <summary>
        0000 1110	14	0E	SO	取消变换（Shift out）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.SI">
      <summary>
        0000 1111	15	0F	SI	启用变换（Shift in）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.DLE">
      <summary>
        0001 0000	16	10	DLE	跳出数据通讯
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.DC1">
      <summary>
        0001 0001	17	11	DC1	设备控制一（XON 启用软件速度控制）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.DC2">
      <summary>
        0001 0010	18	12	DC2	设备控制二
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.DC3">
      <summary>
        0001 0011	19	13	DC3	设备控制三（XOFF 停用软件速度控制）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.DC4">
      <summary>
        0001 0100	20	14	DC4	设备控制四
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.NAK">
      <summary>
        0001 0101	21	15	NAK	确认失败回应
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.SYN">
      <summary>
        0001 0110	22	16	SYN	同步用暂停
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.ETB">
      <summary>
        0001 0111	23	17	ETB	区块传输结束
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.CAN">
      <summary>
        0001 1000	24	18	CAN	取消
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.EM">
      <summary>
        0001 1001	25	19	EM	连接介质中断
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.SUB">
      <summary>
        0001 1010	26	1A	SUB	替换
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.ESC">
      <summary>
        0001 1011	27	1B	ESC	跳出
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.FS">
      <summary>
        0001 1100	28	1C	FS	文件分割符
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.GS">
      <summary>
        0001 1101	29	1D	GS	组群分隔符
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.RS">
      <summary>
        0001 1110	30	1E	RS	记录分隔符
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.US">
      <summary>
        0001 1111	31	1F	US	单元分隔符
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.DEL">
      <summary>
        0111 1111	127	7F	DEL	删除
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.ASCII.Nonprintings">
      <summary>
        非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：

        ##### 转义序列

        |字符|含义|
        |---|----|
        |\cx|匹配 x 指示的控制字符。例如，\cM 匹配 Control-M 或回车符。x 的值必须在 A-Z 或 a-z 之间。如果不是这样，则假定 c 就是“c”字符本身。|
        |\f |换页符匹配。等效于 \x0c 和 \cL。|
        |\n |换行符匹配。等效于 \x0a 和 \cJ。|
        |\r |匹配一个回车符。等效于 \x0d 和 \cM。|
        |\s |匹配任何空白字符，包括空格、制表符、换页符等。与 [\f\n\r\t\v] 等效。|
        |\S |匹配任何非空白字符。与 [^ \f\n\r\t\v] 等效。|
        |\t |制表符匹配。与 \x09 和 \cI 等效。|
        |\v |垂直制表符匹配。与 \x0b 和 \cK 等效。|
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.TAB">
      <summary>
        <see cref="F:Microsoft.VisualBasic.Constants.vbTab"/>
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Quot">
      <summary>
        双引号``"``
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.n0">
      <summary>
        ASCII code for number ``0``
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.n9">
      <summary>
        ASCII code for number ``9``
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Mark">
      <summary>
        单引号
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.ASCII.ReplaceQuot(System.String,System.String)">
      <summary>
        分别替换英文双引号，中文双引号为指定的字符串
      </summary>
      <param name="s"></param>
      <param name="replace"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.ASCII.Symbols">
      <summary>
        Symbols without white space.(可以印刷的ASCII符号列表)
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.NUL">
      <summary>
        0000 0000	0	00	NUL	空字符（Null）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.SOH">
      <summary>
        0000 0001	1	01	SOH	标题开始
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.STX">
      <summary>
        0000 0010	2	02	STX	本文开始
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.ETX">
      <summary>
        0000 0011	3	03	ETX	本文结束
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.EOT">
      <summary>
        0000 0100	4	04	EOT	传输结束
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.ENQ">
      <summary>
        0000 0101	5	05	ENQ	请求
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.ACK">
      <summary>
        0000 0110	6	06	ACK	确认回应
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.BEL">
      <summary>
        0000 0111	7	07	BEL	响铃
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.BS">
      <summary>
        0000 1000	8	08	BS	退格
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.HT">
      <summary>
        0000 1001	9	09	HT	水平定位符号
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.LF">
      <summary>
        0000 1010	10	0A	LF	换行键
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.VT">
      <summary>
        0000 1011	11	0B	VT	垂直定位符号
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.FF">
      <summary>
        0000 1100	12	0C	FF	换页键
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.CR">
      <summary>
        0000 1101	13	0D	CR	归位键
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.SO">
      <summary>
        0000 1110	14	0E	SO	取消变换（Shift out）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.SI">
      <summary>
        0000 1111	15	0F	SI	启用变换（Shift in）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.DLE">
      <summary>
        0001 0000	16	10	DLE	跳出数据通讯
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.DC1">
      <summary>
        0001 0001	17	11	DC1	设备控制一（XON 启用软件速度控制）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.DC2">
      <summary>
        0001 0010	18	12	DC2	设备控制二
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.DC3">
      <summary>
        0001 0011	19	13	DC3	设备控制三（XOFF 停用软件速度控制）
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.DC4">
      <summary>
        0001 0100	20	14	DC4	设备控制四
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.NAK">
      <summary>
        0001 0101	21	15	NAK	确认失败回应
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.SYN">
      <summary>
        0001 0110	22	16	SYN	同步用暂停
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.ETB">
      <summary>
        0001 0111	23	17	ETB	区块传输结束
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.CAN">
      <summary>
        0001 1000	24	18	CAN	取消
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.EM">
      <summary>
        0001 1001	25	19	EM	连接介质中断
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.SUB">
      <summary>
        0001 1010	26	1A	SUB	替换
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.ESC">
      <summary>
        0001 1011	27	1B	ESC	跳出
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.FS">
      <summary>
        0001 1100	28	1C	FS	文件分割符
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.GS">
      <summary>
        0001 1101	29	1D	GS	组群分隔符
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.RS">
      <summary>
        0001 1110	30	1E	RS	记录分隔符
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.US">
      <summary>
        0001 1111	31	1F	US	单元分隔符
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.DEL">
      <summary>
        0111 1111	127	7F	DEL	删除
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.ASCII.Byte.TAB">
      <summary>
        <see cref="F:Microsoft.VisualBasic.Constants.vbTab"/>
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Paragraph.SplitParagraph(System.String,System.Int32)">
      <summary>

      </summary>
      <param name="text$"></param>
      <param name="len%"></param>
      <returns></returns>
      <remarks>
        假若长度分割落在单词内，则添加一个连接符，假如是空格或者标点符号，则不处理
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips">
      <summary>
        Html text document operations for a given html text
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.GetHtmlComments(System.String)">
      <summary>
        将<paramref name="html"/>文本之中的注释部分的字符串拿出来
      </summary>
      <param name="html"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.RemovesHtmlComments(System.Text.StringBuilder)">
      <summary>
        removes all of the html code comments from a given <paramref name="html"/> document.
      </summary>
      <param name="html"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.GetLinks(System.String)">
      <summary>
        从html文本之中解析出所有的链接
      </summary>
      <param name="html$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.HTMLTitle(System.String)">
      <summary>
        Parsing the title text from the html inputs.
      </summary>
      <param name="html"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.StripHTMLTags(System.String,System.Boolean)">
      <summary>
        Removes the html tags from the text string.(这个函数会移除所有的html标签)
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.href(System.String)">
      <summary>
        Gets the link text in the html fragement text.
      </summary>
      <param name="html">A string that contains the url string pattern like: href="url_text"</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.src(System.String)">
      <summary>
        Parsing image source url from the img html tag.
      </summary>
      <param name="img"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.TrimResponseTail(System.String)">
      <summary>
        有些时候后面可能会存在多余的vbCrLf，则使用这个函数去除
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.GetValue(System.String)">
      <summary>
        获取两个尖括号之间的内容
      </summary>
      <param name="html"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.LineFeed">
      <summary>
        The line break html tag in the html document.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.HtmlLines(System.String)">
      <summary>
        Split the html text into lines by tags: ``&lt;br>`` or ``&lt;br/>``
      </summary>
      <param name="html$"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.attributeParse">
      <summary>
        The regexp pattern for the attributes in a html tag.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.TagAttributes(System.String)">
      <summary>
        获取一个html标签之中的所有的attribute属性数据
      </summary>
      <param name="tag$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.RemovesJavaScript(System.String)">
      <summary>
        将<paramref name="html"/>中的``&lt;script>&lt;/script>``代码块删除
      </summary>
      <param name="html$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.RemovesCSSstyles(System.String)">
      <summary>
        Removes all of the ``&lt;style>`` css styles block from a given <paramref name="html"/> document.
      </summary>
      <param name="html"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.HtmlStrips.RemovesImageLinks(System.String)">
      <summary>
        Removes all of the ``&lt;img>`` image links block from a given <paramref name="html"/> document.
      </summary>
      <param name="html"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.HtmlParser.TableParser">
      <summary>
        The string parser for the table html text block
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.TableParser.GetTablesHTML(System.String,System.Boolean)">
      <summary>
        Parsing the html text betweens the tag &lt;table>&lt;/table> by using regex expression.
      </summary>
      <param name="html"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.TableParser.GetRowsHTML(System.String)">
      <summary>
        Parsing the html text betweens the tag &lt;tr>&lt;/tr> by using regex expression.
      </summary>
      <param name="table"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Text.HtmlParser.TableParser.GetColumnsHTML(System.String)">
      <summary>
        The td tag is trimmed in this function.(请注意，在本函数之中，&lt;td>标签是被去除掉了的)
      </summary>
      <param name="row"></param>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Text.ParserValue`1">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <remarks>
        这个对象的用途和<see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1"/>对象的用途是一致的，只不过差异在于所想要表达的寓意上面
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Search.TextSegment">
      <summary>
        文本之中的一个片段
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Search.TextSegment.Segment">
      <summary>
        当前的这个文本片段的字符串值
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Search.TextSegment.Array">
      <summary>
        ASCII值
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Search.TextSegment.Index">
      <summary>
        在原始文本之中的左端起始位置
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.Search.TextIndexing.cache">
      <summary>
        为了用于加速批量匹配计算的效率而生成的一个缓存对象
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Search.TextIndexing.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        Creates a text index instance object for the statement fuzzy match in the whole text document.
      </summary>
      <param name="text"></param>
      <param name="min"></param>
      <param name="max"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Search.TextIndexing.Found(System.String,System.Double,System.Int32)">
      <summary>

      </summary>
      <param name="keyword"></param>
      <param name="cutoff"></param>
      <param name="numPartition">每一个分区之中的元素的数量，负数表示不进行分区</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Search.TextIndexing.Found(System.String,System.Int32)">
      <summary>

      </summary>
      <param name="keyword"></param>
      <param name="cutoff">表示出现连续的m匹配的片段的长度,-1表示所搜索的关键词片段的长度一半</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Search.TextIndexing.IsMatch(System.String,System.Int32)">
      <summary>
        函数返回最长的匹配的个数，-1表示没有匹配
      </summary>
      <param name="m"></param>
      <param name="cutoff"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Search.TextIndexing.FuzzyIndex(System.String,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>

      </summary>
      <param name="text"></param>
      <param name="keyword"></param>
      <param name="Matches">
        The continues length of the matches, if this value is ZERO or negative value, then the function will using the expression len(keyword)/2 as the default value.
      </param>
      <param name="min"></param>
      <param name="max"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.FormattedParser">
      <summary>
        Parser API for the well formatted documents.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.FormattedParser.FlagSplit(System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.Boolean})">
      <summary>
        String collection tokens by a certain delimiter string element.
      </summary>
      <param name="source"></param>
      <param name="isFlag">

      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.FormattedParser.CrossFields(System.String)">
      <summary>
        Example as: ------- ------ -----    ------- ------ -----   ---- --  --------   -----------
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.FormattedParser.FieldParser(System.String,System.Int32[])">
      <summary>
        Parsing a line of string into several fields fragments based on the fields length.
      </summary>
      <param name="s">The input text line.</param>
      <param name="pos">The text length of each field property value.</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.FormattedParser.DoContinute">
      <summary>
        Condition for continue move the parser pointer.
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.FormattedParser.ReadHead(System.String[],System.Int32@,Microsoft.VisualBasic.Text.FormattedParser.DoContinute)">
      <summary>
        Parsing the document head section from the document.
      </summary>
      <param name="buf"></param>
      <param name="offset">
        This function will returns the new offset value from this reference parameter.
        (从这里向调用者返回偏移量)
      </param>
      <param name="__isHead">Condition for continue move the parser pointer to the next line.</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.PartitionedStream">
      <summary>
        只是针对文本文件的
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.PartitionedStream.#ctor(System.String,System.Int32,System.Text.Encoding)">
      <summary>
        依照换行符来进行分区
      </summary>
      <param name="path"></param>
      <param name="blockSize"></param>
      <param name="encoding"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.UnbufferedStringReader">
      <summary>
        Represents a reader that can read a sequential series of characters.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.UnbufferedStringReader.Close">
      <summary>
        Closes the System.IO.TextReader and releases any system resources associated
        with the TextReader.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.UnbufferedStringReader.Peek">
      <summary>
        Reads the next character without changing the state of the reader or the character
        source. Returns the next available character without actually reading it from
        the reader.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.UnbufferedStringReader.Read">
      <summary>
        Reads the next character from the text reader and advances the character position
        by one character.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.UnbufferedStringReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>
        Reads a specified maximum number of characters from the current reader and writes
        the data to a buffer, beginning at the specified index.
      </summary>
      <param name="buffer"></param>
      <param name="index"></param>
      <param name="count"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.UnbufferedStringReader.ReadLine">
      <summary>
        Reads a line of characters from the text reader and returns the data as a string.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.UnbufferedStringReader.ReadToEnd">
      <summary>
        Reads all characters from the current position to the end of the text reader
        and returns them as one string.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.UnbufferedStringReader.Position">
      <summary>
        The current read position.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Splitter">
      <summary>
        Split strings with support to multi-character, multi-lines Delimiter
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.Splitter.m_Expression">
      <summary>
        Holds the string to split
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.Splitter.m_Delimiter">
      <summary>
        Delimiter to split the expression with
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.Splitter.#ctor">
      <summary>
        Constrctor for The Splitter
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.EncodingHelper">
      <summary>
        Helper for <see cref="T:Microsoft.VisualBasic.Text.Encodings"/>
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.EncodingHelper.TextEncoding">
      <summary>
        <see cref="T:System.Text.Encoding"/> instance
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.EncodingHelper.#ctor(Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        Helper for <see cref="T:Microsoft.VisualBasic.Text.Encodings"/>
      </summary>
      <param name="encoding"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.EncodingHelper.GetBytes(System.String)">
      <summary>
        When overridden in a derived class, encodes all the characters in the specified
        string into a sequence of bytes.
      </summary>
      <param name="s">The string containing the characters to encode.</param>
      <returns>A byte array containing the results of encoding the specified set of characters.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.EncodingHelper.ToString(System.Byte[])">
      <summary>
        When overridden in a derived class, decodes all the bytes in the specified byte
        array into a string.
      </summary>
      <param name="byts">The byte array containing the sequence of bytes to decode.</param>
      <returns>A string that contains the results of decoding the specified sequence of bytes.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.EncodingHelper.ToString">
      <summary>
        <see cref="T:System.Text.Encoding"/> instance
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.Encodings">
      <summary>
        The text document encodings constant for text file read and write
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.Encodings.Default">
      <summary>
        <see cref="P:System.Text.Encoding.Default"/>: Gets an encoding for the operating system's current ANSI code page.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.Encodings.Unicode">
      <summary>
        Alias of the value <see cref="F:Microsoft.VisualBasic.Text.Encodings.UTF16"/>.
        (utf-16编码的别名？所以使用这个编码的效果是和<see cref="F:Microsoft.VisualBasic.Text.Encodings.UTF16"/>的效果是一样的)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.Encodings.UTF8">
      <summary>
        <see cref="P:Microsoft.VisualBasic.Text.TextEncodings.UTF8WithoutBOM"/>.
        (HTML的默认的编码格式，假若所保存的html文本出现乱码，请考虑是不是应该要选择这个编码才行？)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.Encodings.UTF16">
      <summary>
        VB.NET的XML文件的默认编码格式为utf-16
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Text.Encodings.GB2312">
      <summary>
        Text encoding for simplify Chinese.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.TextEncodings">
      <summary>
        表示字符编码。若要浏览此类型的.NET Framework 源代码，请参阅 Reference Source。
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.TextEncodings.DefaultEncoding">
      <summary>
        获取操作系统的当前 ANSI 代码页的编码。这个属性可以通过``default_encoding``环境参数来设置
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.TextEncodings.UTF8">
      <summary>
        UTF-8 without BOM.(获取 UTF-8 格式的编码。<see cref="P:System.Text.Encoding.UTF8"/>默认是带有BOM标记的，这里使用无BOM标记的UTF8编码)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.TextEncodings.TextEncodings">
      <summary>
        编码由枚举类型<see cref="T:Microsoft.VisualBasic.Text.Encodings"/>到<see cref="T:System.Text.Encoding"/>之间的映射
      </summary>
      <returns></returns>
      <remarks>
        可能在Linux服务器上面没有使用gb2312编码集合，则在这个模块之中初始化会出错

        ```bash
        locale -a

        yum install -y mono-locale-extras
        ```
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.TextEncodings.#cctor">
      <summary>
        构造函数会自动的从命令行配置之中设置默认的编码格式
      </summary>
      <remarks>
        ###### Linux下面提示 Encoding 936 data could not be found.

        处理方法

        1. 应该首先``locale -a``看有没有安装``gbk``
        2. 没安装的话需要先安装gbk编码
        3. 然后再安装``mono-locale-extras``

        ```bash
        locale -a
        yum install -y mono-locale-extras
        ```
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.TextEncodings.__gbk2312_encoding">
      <summary>
        在linux上面如果没有安装gb2312的话，会出错，则这个函数会默认使用UTF8编码
        并给出警告信息
      </summary>
      <returns></returns>
      <remarks>
        If the linux server didn't enable the gb2312 text encoding, then this exception happends...

        ```bash
        [ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: [Path]  /home/software/cytonetwork.test/cytonetwork ---> System.Exception: [DIR]  /home/software/cytonetwork.test ---> System.TypeInitializationException: The type initializer for 'Microsoft.VisualBasic.Text.TextEncodings' threw an exception. ---> System.NotSupportedException: Encoding 936 data could not be found. Make sure you have correct international codeset assembly installed and enabled.
        at System.Text.Encoding.GetEncoding (System.Int32 codepage) [0x0023f] In &lt;902ab9e386384bec9c07fa19aa938869>:0
        at System.Text.Encoding.GetEncoding (System.String name) [0x00012] In &lt;902ab9e386384bec9c07fa19aa938869>:0
        at Microsoft.VisualBasic.Text.TextEncodings..cctor () [0x00030] In &lt;00ade39f7ffc4ab69ceb325aefc4ee1b>:0
        --- End of inner exception stack trace ---
        at Microsoft.VisualBasic.TextDoc.SaveTo (System.String text, System.String path, System.Text.Encoding encoding, System.Boolean append, System.Boolean throwEx) [0x00063] In &lt;00ade39f7ffc4ab69ceb325aefc4ee1b>:0
        --- End of inner exception stack trace ---
        --- End of inner exception stack trace ---
        at Microsoft.VisualBasic.TextDoc.SaveTo (System.String text, System.String path, System.Text.Encoding encoding, System.Boolean append, System.Boolean throwEx) [0x000a7] In &lt;00ade39f7ffc4ab69ceb325aefc4ee1b>:0
        at Microsoft.VisualBasic.Language.UnixBash.LinuxRunHelper.BashShell () [0x0001b] In &lt;00ade39f7ffc4ab69ceb325aefc4ee1b>:0
        at Microsoft.VisualBasic.CommandLine.Interpreter.__methodInvoke (System.String commandName, System.Object[] argvs, System.String[] help_argvs) [0x001c9] In &lt;00ade39f7ffc4ab69ceb325aefc4ee1b>:0
        at Microsoft.VisualBasic.CommandLine.Interpreter.Execute (Microsoft.VisualBasic.CommandLine.CommandLine args) [0x00024] In &lt;00ade39f7ffc4ab69ceb325aefc4ee1b>:0
        at Microsoft.VisualBasic.App.RunCLI (System.Type Interpreter, Microsoft.VisualBasic.CommandLine.CommandLine args, System.String caller) [0x00012] In &lt;00ade39f7ffc4ab69ceb325aefc4ee1b>:0
        at cytonetwork.Program.Main () [0x0000f] In &lt;0Fa3aca1569b43dc8ca208295f3a029d>:0
        ```
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.TextEncodings.CodePage(Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        Get text file save <see cref="T:System.Text.Encoding"/> instance
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.TextEncodings.ParseEncodingsName(System.String,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        从字符串名称之中解析出编码格式的枚举值
      </summary>
      <param name="encoding$"></param>
      <param name="onFailure"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.TextEncodings.TransEncoding(System.String,Microsoft.VisualBasic.Text.Encodings,System.Text.Encoding)">
      <summary>
        有时候有些软件对文本的编码是有要求的，则可以使用这个函数进行文本编码的转换
        例如R程序默认是读取ASCII，而。NET的默认编码是UTF8，则可以使用这个函数将目标文本文件转换为ASCII编码的文本文件
      </summary>
      <param name="path"></param>
      <param name="encoding"></param>
      <param name="from"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.GB2312">
      <summary>
        汉字拼音转换类
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.GB2312.otherChinese">
      <summary>
        二级汉字数组
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Text.GB2312.otherPinYin">
      <summary>
        二级汉字对应拼音数组
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.GB2312.GetFirst(System.Char)">
      <summary>
        取拼音第一个字段
      </summary>
      <param name="ch"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.GB2312.GetFirst(System.String)">
      <summary>
        取拼音第一个字段
      </summary>
      <param name="str"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.GB2312.Get(System.Char)">
      <summary>
        获取单字拼音
      </summary>
      <param name="ch"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.GB2312.Get(System.String)">
      <summary>
        把汉字转换成拼音(全拼)
      </summary>
      <param name="str">汉字字符串</param>
      <returns>转换后的拼音(全拼)字符串</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Text.TextFileEncodingDetector">
      <summary>
        Encoding fileEncoding = TextFileEncodingDetector.DetectTextFileEncoding("you file path",Encoding.Default);
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Text.TextFileEncodingDetector.DetectTextFileEncoding(System.String,System.Text.Encoding)">
      <summary>
        completely arbitrary - inappropriate for high numbers of files / high speed requirements
      </summary>
      <param name="InputFilename"></param>
      <param name="DefaultEncoding"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.NumericFormatHelper">
      <summary>
        ###### ``C``货币

        ```vbnet
        2.5.ToString("C")
        ' ￥2.50
        ```

        ###### ``D``十进制数

        ```vbnet
        25.ToString("D5")
        ' 00025
        ```

        ###### ``E``科学型

        ```vbnet
        25000.ToString("E")
        ' 2.500000E+005
        ```

        ###### ``F``固定点

        ```vbnet
        25.ToString("F2")
        ' 25.00
        ```

        ###### ``G``常规

        ```vbnet
        2.5.ToString("G")
        ' 2.5
        ```

        ###### ``N``数字

        ```vbnet
        2500000.ToString("N")
        ' 2,500,000.00
        ```

        ###### ``X``十六进制

        ```vbnet
        255.ToString("X")
        ' FF
        ```
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.NumericFormatHelper.Decimal(System.Int32)">
      <summary>
        ``D&lt;n>``
      </summary>
      <param name="n%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.NumericFormatHelper.Float(System.Int32)">
      <summary>
        ``F&lt;n>``
      </summary>
      <param name="n%"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.NumericFormatHelper.SafeToString(System.Double,System.String)">
      <summary>

      </summary>
      <param name="x#"></param>
      <param name="NaN_imaginary$">Default using R language style default numeric value</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Http.GZStream.UnzipBase64(System.String)">
      <summary>
        Unzip the stream data in the <paramref name="base64"/> string.
      </summary>
      <param name="base64$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Http.GZStream.ZipAsBase64(System.IO.Stream)">
      <summary>
        将目标流对象之中的数据进行zip压缩，然后转换为base64字符串
      </summary>
      <param name="stream"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Http.sitemap">
      <summary>

      </summary>
      <remarks>
        ```
        xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"
        ```
      </remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.sitemap.xmlns">
      <summary>
        ```xml
        &lt;urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">
        ```
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Http.UserAgent">
      <summary>
        List of user-agent that can be using in the http GET
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.UserAgent.UAheader">
      <summary>
        ``User-Agent``
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Http.RequestBuilder.BuildParameters``1(``0)">
      <summary>
        当前的这个函数操作里面已经包含有了URL的编码工作了
      </summary>
      <typeparam name="T"></typeparam>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Http.WebResult">
      <summary>
        The data structure for represents the search result of the Web search egine.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.WebResult.Title">
      <summary>
        Specifies the Title element of the result string.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.WebResult.BriefText">
      <summary>
        In short description of the link produced.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.WebResult.URL">
      <summary>
        Url that points to the Current result.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.WebResult.Update">
      <summary>
        Update time.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.WebResult.Site">
      <summary>
        Returns the root domain name.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Http.HTTP_RFC">
      <summary>
        The following is a list of Hypertext Transfer Protocol (HTTP) response status codes. This includes codes from IETF internet standards
        as well as other IETF RFCs, other specifications and some additional commonly used codes. The first digit of the status code specifies
        one of five classes of response; the bare minimum for an HTTP client is that it recognises these five classes. The phrases used are the
        standard examples, but any human-readable alternative can be provided. Unless otherwise stated, the status code is part of the HTTP/1.1
        standard (RFC 7231).

        The Internet Assigned Numbers Authority (IANA) maintains the official registry Of HTTP status codes.

        Microsoft IIS sometimes uses additional Decimal Sub-codes To provide more specific information, but these are Not listed here.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_CONTINUTE">
      <summary>
        100 Continue |
        This means that the server has received the request headers, And that the client should proceed To send the request body
        (In the Case Of a request For which a body needs To be sent; For example, a POST request). If the request body Is large,
        sending it To a server When a request has already been rejected based upon inappropriate headers Is inefficient.
        To have a server check If the request could be accepted based On the request's headers alone, a client must send Expect:
        100-continue as a header in its initial request and check if a 100 Continue status code is received in response before
        continuing (or receive 417 Expectation Failed and not continue).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_SWITCHING_PROTOCOLS">
      <summary>
        101 Switching Protocols |
        This means the requester has asked the server To switch protocols And the server Is acknowledging that it will Do so.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_PROCESSING">
      <summary>
        102 Processing (WebDAV; RFC 2518) |
        As a WebDAV request may contain many sub-requests involving file operations, it may take a long time to complete the request.
        This code indicates that the server has received And Is processing the request, but no response Is available yet.[3]
        This prevents the client from timing out And assuming the request was lost.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_OK">
      <summary>
        200 OK |
        Standard response For successful HTTP requests. The actual response will depend On the request method used. In a Get request,
        the response will contain an entity corresponding To the requested resource. In a POST request, the response will contain an
        entity describing Or containing the result Of the action.
        (由于可能会修改附带一些其他的元素据信息，所以只读属性不会使用简写的形式的，而是需要重新生成新的对象实例以防止数据污染)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_CREATED">
      <summary>
        201 Created |
        The request has been fulfilled And resulted In a New resource being created.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_ACCEPTED">
      <summary>
        202 Accepted |
        The request has been accepted For processing, but the processing has Not been completed. The request might Or might Not eventually be acted upon,
        As it might be disallowed When processing actually takes place.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NON_AUTH_INFO">
      <summary>
        203 Non-Authoritative Information (since HTTP/1.1) |
        The server successfully processed the request, but Is returning information that may be from another source.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NO_CONTENT">
      <summary>
        204 No Content |
        The server successfully processed the request, but Is Not returning any content.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_RESET_CONTENT">
      <summary>
        205 Reset Content |
        The server successfully processed the request, but Is Not returning any content. Unlike a 204 response, this response requires that the requester reset the document view.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_PARTIAL_CONTENT">
      <summary>
        206 Partial Content (RFC 7233) |
        The server Is delivering only part Of the resource (Byte serving) due To a range header sent by the client.
        The range header Is used by HTTP clients To enable resuming Of interrupted downloads, Or split a download into multiple simultaneous streams.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_MULTI_STATUS">
      <summary>
        207 Multi-Status (WebDAV; RFC 4918) |
        The message body that follows Is an XML message And can contain a number Of separate response codes, depending On how many Sub-requests were made.[4]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_ALREADY_REPORTED">
      <summary>
        208 Already Reported (WebDAV; RFC 5842) |
        The members Of a DAV binding have already been enumerated In a previous reply To this request, And are Not being included again.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_IM_USED">
      <summary>
        226 IM Used (RFC 3229) |
        The server has fulfilled a request For the resource, And the response Is a representation Of the result Of one Or more instance-manipulations applied To the current instance.[5]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_MULTI_CHOICES">
      <summary>
        300 Multiple Choices |
        Indicates multiple options For the resource that the client may follow. It, For instance, could be used To present different
        format options For video, list files With different extensions, Or word sense disambiguation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_MOVED_PERMANENTLY">
      <summary>
        301 Moved Permanently |
        This And all future requests should be directed to the given URI.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_FOUND">
      <summary>
        302 Found |
        This Is an example of industry practice contradicting the standard. The HTTP/1.0 specification (RFC 1945) required the client
        to perform a temporary redirect (the original describing phrase was "Moved Temporarily"),[6] but popular browsers implemented
        302 with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 And 307 to distinguish between the
        two behaviours.[7] However, some Web applications And frameworks use the 302 status code as if it were the 303.[8]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_SEE_OTHER">
      <summary>
        303 See Other (since HTTP/1.1) |
        The response To the request can be found under another URI Using a Get method. When received In response To a POST (Or PUT/DELETE),
        it should be assumed that the server has received the data And the redirect should be issued With a separate Get message.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NOT_MODIFIED">
      <summary>
        304 Not Modified (RFC 7232) |
        Indicates that the resource has Not been modified since the version specified by the request headers If-Modified-Since Or If-None-Match.
        This means that there Is no need To retransmit the resource, since the client still has a previously-downloaded copy.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_USE_PROXY">
      <summary>
        305 Use Proxy (since HTTP/1.1) |
        The requested resource Is only available through a proxy, whose address Is provided In the response. Many HTTP clients
        (such As Mozilla[9] And Internet Explorer) Do Not correctly handle responses With this status code, primarily For security reasons.[10]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_SWITCH_PROXY">
      <summary>
        306 Switch Proxy |
        No longer used. Originally meant "Subsequent requests should use the specified proxy."[11]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_TEMP_REDIRECT">
      <summary>
        307 Temporary Redirect (since HTTP/1.1) |
        In this case, the request should be repeated with another URI; however, future requests should still use the original URI.
        In contrast to how 302 was historically implemented, the request method Is Not allowed to be changed when reissuing the original request.
        For instance, a POST request should be repeated using another POST request.[12]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_PERMANENT_REDIRECT">
      <summary>
        308 Permanent Redirect (RFC 7538) |
        The request, and all future requests should be repeated Using another URI. 307 And 308 (As proposed) parallel the behaviours
        Of 302 And 301, but Do Not allow the HTTP method To change. So, For example, submitting a form To a permanently redirected resource may Continue smoothly.[13]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_RESUME_INCOMPLETE">
      <summary>
        308 Resume Incomplete (Google) |
        This code Is used In the Resumable HTTP Requests Proposal To Resume aborted PUT Or POST requests.[14]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_BAD_REQUEST">
      <summary>
        400 Bad Request |
        The server cannot Or will Not process the request due To something that Is perceived To be a client Error (e.g., malformed request syntax,
        invalid request message framing, Or deceptive request routing).[15]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_UNAUTHORIZED">
      <summary>
        401 Unauthorized (RFC 7235) |
        Similar to 403 Forbidden, but specifically for use when authentication Is required And has failed Or has Not yet been provided.
        The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
        See Basic access authentication And Digest access authentication.(证书未认证)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_PAYMENT_REQUIRED">
      <summary>
        402 Payment Required |
        Reserved for future use. The original intention was that this code might be used as part of some form of digital cash Or micropayment scheme,
        but that has Not happened, And this code Is Not usually used. YouTube uses this status if a particular IP address has made excessive requests,
        And requires the person to enter a CAPTCHA.[citation needed]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_FORBIDDEN">
      <summary>
        403 Forbidden |
        The request was a valid request, but the server Is refusing To respond To it. Unlike a 401 Unauthorized response, authenticating will make no difference.
        (被封号了)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NOT_FOUND">
      <summary>
        404 Not Found |
        The requested resource could Not be found but may be available again In the future. Subsequent requests by the client are permissible.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_METHOD_NOT_ALLOWED">
      <summary>
        405 Method Not Allowed |
        A request was made Of a resource Using a request method Not supported by that resource; For example,
        Using Get On a form which requires data To be presented via POST, Or Using PUT On a read-only resource.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NOT_ACCEPTABLE">
      <summary>
        406 Not Acceptable |
        The requested resource Is only capable Of generating content Not acceptable according To the Accept headers sent In the request.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_PROXY_AUTH_REQUIRED">
      <summary>
        407 Proxy Authentication Required (RFC 7235) |
        The client must first authenticate itself With the proxy.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_REQUEST_TIMEOUT">
      <summary>
        408 Request Timeout |
        The server timed out waiting For the request. According To HTTP specifications:
        "The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time."
        (请求超时)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_CONFLICT">
      <summary>
        409 Conflict |
        Indicates that the request could Not be processed because Of conflict In the request, such As an edit conflict In the Case Of multiple updates.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_GONE">
      <summary>
        410 Gone |
        Indicates that the resource requested Is no longer available And will Not be available again.
        This should be used When a resource has been intentionally removed And the resource should be purged.
        Upon receiving a 410 status code, the client should Not request the resource again In the future.
        Clients such As search engines should remove the resource from their indices.[16] Most use cases
        Do Not require clients And search engines To purge the resource, And a "404 Not Found" may be used instead.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_LENGTH_REQUIRED">
      <summary>
        411 Length Required |
        The request did Not specify the length Of its content, which Is required by the requested resource.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_PRECONDITION_FAILED">
      <summary>
        412 Precondition Failed (RFC 7232) |
        The server does Not meet one Of the preconditions that the requester put On the request.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_PAYLOAD_TOO_LARGE">
      <summary>
        413 Payload Too Large (RFC 7231) |
        The request Is larger than the server Is willing Or able To process. Called "Request Entity Too Large " previously.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_URI_TOO_LONG">
      <summary>
        414 Request-URI Too Long |
        The URI provided was too Long For the server To process. Often the result Of too much data being encoded As a query-String Of a Get request, In which Case it should be converted To a POST request.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_UNSUPPORTED_MEDIA_TYPE">
      <summary>
        415 Unsupported Media Type |
        The request entity has a media type which the server Or resource does Not support. For example, the client uploads an image As image/svg+xml, but the server requires that images use a different format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_RANGE_NOT_SATISFIABLE">
      <summary>
        416 Requested Range Not Satisfiable (RFC 7233) |
        The client has asked For a portion Of the file (Byte serving), but the server cannot supply that portion. For example, If the client asked For a part Of the file that lies beyond the End Of the file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_EXPECTATION_FAILED">
      <summary>
        417 Expectation Failed |
        The server cannot meet the requirements Of the Expect request-header field.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_IM_TEAPOT">
      <summary>
        418 I'm a teapot (RFC 2324) |
        This code was defined In 1998 As one Of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,
        and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by tea pots requested to brew coffee.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_AUTH_TIMEOUT">
      <summary>
        419 Authentication Timeout (Not in RFC 2616) |
        Not a part of the HTTP standard, 419 Authentication Timeout denotes that previously valid authentication has expired.
        It Is used as an alternative to 401 Unauthorized in order to differentiate from otherwise authenticated clients being denied access to specific server resources.[citation needed]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_METHOD_FAILURE">
      <summary>
        420 Method Failure (Spring Framework) |
        Not part of the HTTP standard, but defined by Spring in the HttpStatus class to be used when a method failed. This status code Is deprecated by Spring.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_ENHANCE_YOUR_CALM">
      <summary>
        420 Enhance Your Calm (Twitter) |
        Not part of the HTTP standard, but returned by version 1 of the Twitter Search And Trends API when the client Is being rate limited.[17]
        Other services may wish to implement the 429 Too Many Requests response code instead.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_MISDIRECTED_REQUEST">
      <summary>
        421 Misdirected Request (HTTP/2) |
        The request was directed at a server that Is Not able To produce a response (For example because a connection reuse).[18]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_UNPROCESSABLE_ENTITY">
      <summary>
        422 Unprocessable Entity (WebDAV; RFC 4918) |
        The request was well-formed but was unable To be followed due To semantic errors.[4]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_LOCKED">
      <summary>
        423 Locked (WebDAV; RFC 4918) |
        The resource that Is being accessed Is locked.[4]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_FAILED_DEPENDENCY">
      <summary>
        424 Failed Dependency (WebDAV; RFC 4918) |
        The request failed due To failure Of a previous request (e.g., a PROPPATCH).[4]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_UPGRADE_REQUIRED">
      <summary>
        426 Upgrade Required |
        The client should switch To a different protocol such As TLS/1.0, given In the Upgrade header field.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_PRECONDITION_REQUIRED">
      <summary>
        428 Precondition Required (RFC 6585) |
        The origin server requires the request To be conditional. Intended To prevent "the 'lost update' problem,
        where a client GETs a resource's state, modifies it, and PUTs it back to the server, when meanwhile a third party
        has modified the state on the server, leading to a conflict."[19]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_TOO_MANY_REQUEST">
      <summary>
        429 Too Many Requests (RFC 6585) |
        The user has sent too many requests In a given amount Of time. Intended For use With rate limiting schemes.[19]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_REQUEST_HEADER_FIELDS_TOO_LARGE">
      <summary>
        431 Request Header Fields Too Large (RFC 6585) |
        The server Is unwilling To process the request because either an individual header field, Or all the header fields collectively, are too large.[19]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_LOGIN_TIMEOUT">
      <summary>
        440 Login Timeout (Microsoft) |
        A Microsoft extension. Indicates that your session has expired.[20]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NO_RESPONSE">
      <summary>
        444 No Response (Nginx) |
        Used in Nginx logs to indicate that the server has returned no information to the client And closed the connection (useful as a deterrent for malware).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_RETRY_WITH">
      <summary>
        449 Retry With (Microsoft) |
        A Microsoft extension. The request should be retried after performing the appropriate action.[21]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_BLOCKED">
      <summary>
        450 Blocked by Windows Parental Controls (Microsoft) |
        A Microsoft extension. This Error Is given When Windows Parental Controls are turned On And are blocking access To the given webpage.[22]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_LEGAL_UNAVAILABLE">
      <summary>
        451 Unavailable For Legal Reasons (Internet draft) |
        Defined in the internet draft "A New HTTP Status Code for Legally-restricted Resources".[23]
        Intended to be used when resource access Is denied for legal reasons, e.g. censorship Or government-mandated blocked access.
        A reference to the 1953 dystopian novel Fahrenheit 451, where books are outlawed.[24]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_REDIRECT">
      <summary>
        451 Redirect (Microsoft) |
        Used in Exchange ActiveSync if there either Is a more efficient server to use Or the server cannot access the users' mailbox.[25]
        The client Is supposed To re-run the HTTP Autodiscovery protocol To find a better suited server.[26]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_REQUEST_HEADER_TOO_LARGE">
      <summary>
        494 Request Header Too Large (Nginx) |
        Nginx internal code similar To 431 but it was introduced earlier In version 0.9.4 (On January 21, 2011).[27][original research?]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_CERT_ERROR">
      <summary>
        495 Cert Error (Nginx) |
        Nginx internal code used When SSL client certificate Error occurred To distinguish it from 4XX In a log And an Error page redirection.
        (在SSL层解密的时候错误，则为证书错误)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NO_CERT">
      <summary>
        496 No Cert (Nginx) |
        Nginx internal code used When client didn't provide certificate to distinguish it from 4XX in a log and an error page redirection.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_HTTP_TO_HTTPS">
      <summary>
        497 HTTP to HTTPS (Nginx) |
        Nginx internal code used For the plain HTTP requests that are sent To HTTPS port To distinguish it from 4XX In a log And an Error page redirection.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_TOKEN_INVALID">
      <summary>
        498 Token expired/invalid (Esri) |
        Returned by ArcGIS For Server. A code Of 498 indicates an expired Or otherwise invalid token.[28]
        (错误的参数信息)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_CLOSED_REQUEST">
      <summary>
        499 Client Closed Request (Nginx) |
        Used in Nginx logs to indicate when the connection has been closed by client while the server Is still processing its request, making server unable to send a status code back.[29]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_TOKEN_REQUIRED">
      <summary>
        499 Token required (Esri) |
        Returned by ArcGIS For Server. A code Of 499 indicates that a token Is required (If no token was submitted).[28]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_INTERNAL_SERVER_ERROR">
      <summary>
        500 Internal Server Error |
        A generic Error message, given When an unexpected condition was encountered And no more specific message Is suitable.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NOT_IMPLEMENTED">
      <summary>
        501 Not Implemented |
        The server either does Not recognize the request method, Or it lacks the ability To fulfill the request. Usually this implies future availability (e.g., a New feature Of a web-service API).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_BAD_GATEWAY">
      <summary>
        502 Bad Gateway |
        The server was acting As a gateway Or proxy And received an invalid response from the upstream server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_SERVICE_UNAVAILABLE">
      <summary>
        503 Service Unavailable |
        The server Is currently unavailable (because it Is overloaded Or down For maintenance). Generally, this Is a temporary state.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_GATEWAY_TIMEOUT">
      <summary>
        504 Gateway Timeout |
        The server was acting As a gateway Or proxy And did Not receive a timely response from the upstream server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_VERSION_NOT_SUPPORTED">
      <summary>
        505 HTTP Version Not Supported |
        The server does Not support the HTTP protocol version used In the request.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NEGOTIATES">
      <summary>
        506 Variant Also Negotiates (RFC 2295) |
        Transparent content negotiation For the request results In a circular reference.[30]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_INSUFFICIENT_STORAGE">
      <summary>
        507 Insufficient Storage (WebDAV; RFC 4918) |
        The server Is unable To store the representation needed To complete the request.[4]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_LOOP_DETECTED">
      <summary>
        508 Loop Detected (WebDAV; RFC 5842) |
        The server detected an infinite Loop While processing the request (sent In lieu Of 208 Already Reported).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_BANDWIDTH_LIMITED_EXCEEDED">
      <summary>
        509 Bandwidth Limit Exceeded (Apache bw/limited extension)[31] |
        This status code Is Not specified In any RFCs. Its use Is unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NOT_EXTENDED">
      <summary>
        510 Not Extended (RFC 2774) |
        Further extensions To the request are required For the server To fulfil it.[32]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NETWORK_AUTH_REQUIRED">
      <summary>
        511 Network Authentication Required (RFC 6585) |
        The client needs To authenticate To gain network access. Intended For use by intercepting proxies used To control access To the network
        (e.g., "captive portals" used To require agreement To Terms Of Service before granting full Internet access via a Wi-Fi hotspot).[19]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_UNKNOWN_ERROR">
      <summary>
        520 Unknown Error |
        This status code Is Not specified In any RFC And Is returned by certain services, For instance Microsoft Azure And CloudFlare servers:
        "The 520 error is essentially a “catch-all” response for when the origin server returns something unexpected or something that is not
        tolerated/interpreted (protocol violation or empty response)."[33]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_CONNECTION_TIMEOUT">
      <summary>
        522 Origin Connection Time-out |
        This status code Is Not specified In any RFCs, but Is used by CloudFlare's reverse proxies to signal that a server connection timed out.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_READ_TIMEOUT_ERROR">
      <summary>
        598 Network read timeout error (Unknown) |
        This status code Is Not specified In any RFCs, but Is used by Microsoft HTTP proxies To signal a network read timeout behind the proxy To a client In front Of the proxy.[citation needed]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_CONNECT_TIMEOUT_ERROR">
      <summary>
        599 Network connect timeout error (Unknown) |
        This status code Is Not specified In any RFCs, but Is used by Microsoft HTTP proxies To signal a network connect timeout behind the proxy To a client In front Of the proxy.[citation needed]
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Http.Base64Codec">
      <summary>
        Tools API for encoded the image into a base64 string.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Http.Base64Codec.GetImage(System.String,Microsoft.VisualBasic.Imaging.ImageFormats)">
      <summary>
        Function to Get Image from Base64 Encoded String
      </summary>
      <param name="Base64String"></param>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Http.Base64Codec.__getImageFromBase64(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>
        Function to Get Image from Base64 Encoded String
      </summary>
      <param name="Base64String"></param>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Http.Base64Codec.ToBase64String(System.Drawing.Image,Microsoft.VisualBasic.Imaging.ImageFormats)">
      <summary>
        Convert the Image from Input to Base64 Encoded String
      </summary>
      <param name="ImageInput"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Http.Base64Codec.ToBase64String(System.Drawing.Bitmap,Microsoft.VisualBasic.Imaging.ImageFormats)">
      <summary>
        Convert the Image from Input to Base64 Encoded String
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Http.NetResponse">
      <summary>
        The following is a list of Hypertext Transfer Protocol (HTTP) response status codes. This includes codes from IETF internet standards
        as well as other IETF RFCs, other specifications and some additional commonly used codes. The first digit of the status code specifies
        one of five classes of response; the bare minimum for an HTTP client is that it recognises these five classes. The phrases used are the
        standard examples, but any human-readable alternative can be provided. Unless otherwise stated, the status code is part of the HTTP/1.1
        standard (RFC 7231).

        The Internet Assigned Numbers Authority (IANA) maintains the official registry Of HTTP status codes.

        Microsoft IIS sometimes uses additional Decimal Sub-codes To provide more specific information, but these are Not listed here.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_CONTINUTE">
      <summary>
        100 Continue |
        This means that the server has received the request headers, And that the client should proceed To send the request body
        (In the Case Of a request For which a body needs To be sent; For example, a POST request). If the request body Is large,
        sending it To a server When a request has already been rejected based upon inappropriate headers Is inefficient.
        To have a server check If the request could be accepted based On the request's headers alone, a client must send Expect:
        100-continue as a header in its initial request and check if a 100 Continue status code is received in response before
        continuing (or receive 417 Expectation Failed and not continue).
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_SWITCHING_PROTOCOLS">
      <summary>
        101 Switching Protocols |
        This means the requester has asked the server To switch protocols And the server Is acknowledging that it will Do so.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_PROCESSING">
      <summary>
        102 Processing (WebDAV; RFC 2518) |
        As a WebDAV request may contain many sub-requests involving file operations, it may take a long time to complete the request.
        This code indicates that the server has received And Is processing the request, but no response Is available yet.[3]
        This prevents the client from timing out And assuming the request was lost.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_OK">
      <summary>
        200 OK |
        Standard response For successful HTTP requests. The actual response will depend On the request method used. In a Get request,
        the response will contain an entity corresponding To the requested resource. In a POST request, the response will contain an
        entity describing Or containing the result Of the action.
        (由于可能会修改附带一些其他的元素据信息，所以只读属性不会使用简写的形式的，而是需要重新生成新的对象实例以防止数据污染)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_CREATED">
      <summary>
        201 Created |
        The request has been fulfilled And resulted In a New resource being created.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_ACCEPTED">
      <summary>
        202 Accepted |
        The request has been accepted For processing, but the processing has Not been completed. The request might Or might Not eventually be acted upon,
        As it might be disallowed When processing actually takes place.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NON_AUTH_INFO">
      <summary>
        203 Non-Authoritative Information (since HTTP/1.1) |
        The server successfully processed the request, but Is returning information that may be from another source.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NO_CONTENT">
      <summary>
        204 No Content |
        The server successfully processed the request, but Is Not returning any content.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_RESET_CONTENT">
      <summary>
        205 Reset Content |
        The server successfully processed the request, but Is Not returning any content. Unlike a 204 response, this response requires that the requester reset the document view.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_PARTIAL_CONTENT">
      <summary>
        206 Partial Content (RFC 7233) |
        The server Is delivering only part Of the resource (Byte serving) due To a range header sent by the client.
        The range header Is used by HTTP clients To enable resuming Of interrupted downloads, Or split a download into multiple simultaneous streams.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_MULTI_STATUS">
      <summary>
        207 Multi-Status (WebDAV; RFC 4918) |
        The message body that follows Is an XML message And can contain a number Of separate response codes, depending On how many Sub-requests were made.[4]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_ALREADY_REPORTED">
      <summary>
        208 Already Reported (WebDAV; RFC 5842) |
        The members Of a DAV binding have already been enumerated In a previous reply To this request, And are Not being included again.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_IM_USED">
      <summary>
        226 IM Used (RFC 3229) |
        The server has fulfilled a request For the resource, And the response Is a representation Of the result Of one Or more instance-manipulations applied To the current instance.[5]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_MULTI_CHOICES">
      <summary>
        300 Multiple Choices |
        Indicates multiple options For the resource that the client may follow. It, For instance, could be used To present different
        format options For video, list files With different extensions, Or word sense disambiguation.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_MOVED_PERMANENTLY">
      <summary>
        301 Moved Permanently |
        This And all future requests should be directed to the given URI.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_FOUND">
      <summary>
        302 Found |
        This Is an example of industry practice contradicting the standard. The HTTP/1.0 specification (RFC 1945) required the client
        to perform a temporary redirect (the original describing phrase was "Moved Temporarily"),[6] but popular browsers implemented
        302 with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 And 307 to distinguish between the
        two behaviours.[7] However, some Web applications And frameworks use the 302 status code as if it were the 303.[8]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_SEE_OTHER">
      <summary>
        303 See Other (since HTTP/1.1) |
        The response To the request can be found under another URI Using a Get method. When received In response To a POST (Or PUT/DELETE),
        it should be assumed that the server has received the data And the redirect should be issued With a separate Get message.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NOT_MODIFIED">
      <summary>
        304 Not Modified (RFC 7232) |
        Indicates that the resource has Not been modified since the version specified by the request headers If-Modified-Since Or If-None-Match.
        This means that there Is no need To retransmit the resource, since the client still has a previously-downloaded copy.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_USE_PROXY">
      <summary>
        305 Use Proxy (since HTTP/1.1) |
        The requested resource Is only available through a proxy, whose address Is provided In the response. Many HTTP clients
        (such As Mozilla[9] And Internet Explorer) Do Not correctly handle responses With this status code, primarily For security reasons.[10]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_SWITCH_PROXY">
      <summary>
        306 Switch Proxy |
        No longer used. Originally meant "Subsequent requests should use the specified proxy."[11]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_TEMP_REDIRECT">
      <summary>
        307 Temporary Redirect (since HTTP/1.1) |
        In this case, the request should be repeated with another URI; however, future requests should still use the original URI.
        In contrast to how 302 was historically implemented, the request method Is Not allowed to be changed when reissuing the original request.
        For instance, a POST request should be repeated using another POST request.[12]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_PERMANENT_REDIRECT">
      <summary>
        308 Permanent Redirect (RFC 7538) |
        The request, and all future requests should be repeated Using another URI. 307 And 308 (As proposed) parallel the behaviours
        Of 302 And 301, but Do Not allow the HTTP method To change. So, For example, submitting a form To a permanently redirected resource may Continue smoothly.[13]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_RESUME_INCOMPLETE">
      <summary>
        308 Resume Incomplete (Google) |
        This code Is used In the Resumable HTTP Requests Proposal To Resume aborted PUT Or POST requests.[14]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_BAD_REQUEST">
      <summary>
        400 Bad Request |
        The server cannot Or will Not process the request due To something that Is perceived To be a client Error (e.g., malformed request syntax,
        invalid request message framing, Or deceptive request routing).[15]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_UNAUTHORIZED">
      <summary>
        401 Unauthorized (RFC 7235) |
        Similar to 403 Forbidden, but specifically for use when authentication Is required And has failed Or has Not yet been provided.
        The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
        See Basic access authentication And Digest access authentication.(证书未认证)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_PAYMENT_REQUIRED">
      <summary>
        402 Payment Required |
        Reserved for future use. The original intention was that this code might be used as part of some form of digital cash Or micropayment scheme,
        but that has Not happened, And this code Is Not usually used. YouTube uses this status if a particular IP address has made excessive requests,
        And requires the person to enter a CAPTCHA.[citation needed]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_FORBIDDEN">
      <summary>
        403 Forbidden |
        The request was a valid request, but the server Is refusing To respond To it. Unlike a 401 Unauthorized response, authenticating will make no difference.
        (被封号了)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NOT_FOUND">
      <summary>
        404 Not Found |
        The requested resource could Not be found but may be available again In the future. Subsequent requests by the client are permissible.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_METHOD_NOT_ALLOWED">
      <summary>
        405 Method Not Allowed |
        A request was made Of a resource Using a request method Not supported by that resource; For example,
        Using Get On a form which requires data To be presented via POST, Or Using PUT On a read-only resource.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NOT_ACCEPTABLE">
      <summary>
        406 Not Acceptable |
        The requested resource Is only capable Of generating content Not acceptable according To the Accept headers sent In the request.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_PROXY_AUTH_REQUIRED">
      <summary>
        407 Proxy Authentication Required (RFC 7235) |
        The client must first authenticate itself With the proxy.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_REQUEST_TIMEOUT">
      <summary>
        408 Request Timeout |
        The server timed out waiting For the request. According To HTTP specifications:
        "The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time."
        (请求超时)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_CONFLICT">
      <summary>
        409 Conflict |
        Indicates that the request could Not be processed because Of conflict In the request, such As an edit conflict In the Case Of multiple updates.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_GONE">
      <summary>
        410 Gone |
        Indicates that the resource requested Is no longer available And will Not be available again.
        This should be used When a resource has been intentionally removed And the resource should be purged.
        Upon receiving a 410 status code, the client should Not request the resource again In the future.
        Clients such As search engines should remove the resource from their indices.[16] Most use cases
        Do Not require clients And search engines To purge the resource, And a "404 Not Found" may be used instead.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_LENGTH_REQUIRED">
      <summary>
        411 Length Required |
        The request did Not specify the length Of its content, which Is required by the requested resource.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_PRECONDITION_FAILED">
      <summary>
        412 Precondition Failed (RFC 7232) |
        The server does Not meet one Of the preconditions that the requester put On the request.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_PAYLOAD_TOO_LARGE">
      <summary>
        413 Payload Too Large (RFC 7231) |
        The request Is larger than the server Is willing Or able To process. Called "Request Entity Too Large " previously.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_URI_TOO_LONG">
      <summary>
        414 Request-URI Too Long |
        The URI provided was too Long For the server To process. Often the result Of too much data being encoded As a query-String Of a Get request, In which Case it should be converted To a POST request.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_UNSUPPORTED_MEDIA_TYPE">
      <summary>
        415 Unsupported Media Type |
        The request entity has a media type which the server Or resource does Not support. For example, the client uploads an image As image/svg+xml, but the server requires that images use a different format.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_RANGE_NOT_SATISFIABLE">
      <summary>
        416 Requested Range Not Satisfiable (RFC 7233) |
        The client has asked For a portion Of the file (Byte serving), but the server cannot supply that portion. For example, If the client asked For a part Of the file that lies beyond the End Of the file.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_EXPECTATION_FAILED">
      <summary>
        417 Expectation Failed |
        The server cannot meet the requirements Of the Expect request-header field.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_IM_TEAPOT">
      <summary>
        418 I'm a teapot (RFC 2324) |
        This code was defined In 1998 As one Of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,
        and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by tea pots requested to brew coffee.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_AUTH_TIMEOUT">
      <summary>
        419 Authentication Timeout (Not in RFC 2616) |
        Not a part of the HTTP standard, 419 Authentication Timeout denotes that previously valid authentication has expired.
        It Is used as an alternative to 401 Unauthorized in order to differentiate from otherwise authenticated clients being denied access to specific server resources.[citation needed]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_METHOD_FAILURE">
      <summary>
        420 Method Failure (Spring Framework) |
        Not part of the HTTP standard, but defined by Spring in the HttpStatus class to be used when a method failed. This status code Is deprecated by Spring.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_ENHANCE_YOUR_CALM">
      <summary>
        420 Enhance Your Calm (Twitter) |
        Not part of the HTTP standard, but returned by version 1 of the Twitter Search And Trends API when the client Is being rate limited.[17]
        Other services may wish to implement the 429 Too Many Requests response code instead.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_MISDIRECTED_REQUEST">
      <summary>
        421 Misdirected Request (HTTP/2) |
        The request was directed at a server that Is Not able To produce a response (For example because a connection reuse).[18]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_UNPROCESSABLE_ENTITY">
      <summary>
        422 Unprocessable Entity (WebDAV; RFC 4918) |
        The request was well-formed but was unable To be followed due To semantic errors.[4]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_LOCKED">
      <summary>
        423 Locked (WebDAV; RFC 4918) |
        The resource that Is being accessed Is locked.[4]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_FAILED_DEPENDENCY">
      <summary>
        424 Failed Dependency (WebDAV; RFC 4918) |
        The request failed due To failure Of a previous request (e.g., a PROPPATCH).[4]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_UPGRADE_REQUIRED">
      <summary>
        426 Upgrade Required |
        The client should switch To a different protocol such As TLS/1.0, given In the Upgrade header field.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_PRECONDITION_REQUIRED">
      <summary>
        428 Precondition Required (RFC 6585) |
        The origin server requires the request To be conditional. Intended To prevent "the 'lost update' problem,
        where a client GETs a resource's state, modifies it, and PUTs it back to the server, when meanwhile a third party
        has modified the state on the server, leading to a conflict."[19]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_TOO_MANY_REQUEST">
      <summary>
        429 Too Many Requests (RFC 6585) |
        The user has sent too many requests In a given amount Of time. Intended For use With rate limiting schemes.[19]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_REQUEST_HEADER_FIELDS_TOO_LARGE">
      <summary>
        431 Request Header Fields Too Large (RFC 6585) |
        The server Is unwilling To process the request because either an individual header field, Or all the header fields collectively, are too large.[19]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_LOGIN_TIMEOUT">
      <summary>
        440 Login Timeout (Microsoft) |
        A Microsoft extension. Indicates that your session has expired.[20]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NO_RESPONSE">
      <summary>
        444 No Response (Nginx) |
        Used in Nginx logs to indicate that the server has returned no information to the client And closed the connection (useful as a deterrent for malware).
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_RETRY_WITH">
      <summary>
        449 Retry With (Microsoft) |
        A Microsoft extension. The request should be retried after performing the appropriate action.[21]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_BLOCKED">
      <summary>
        450 Blocked by Windows Parental Controls (Microsoft) |
        A Microsoft extension. This Error Is given When Windows Parental Controls are turned On And are blocking access To the given webpage.[22]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_LEGAL_UNAVAILABLE">
      <summary>
        451 Unavailable For Legal Reasons (Internet draft) |
        Defined in the internet draft "A New HTTP Status Code for Legally-restricted Resources".[23]
        Intended to be used when resource access Is denied for legal reasons, e.g. censorship Or government-mandated blocked access.
        A reference to the 1953 dystopian novel Fahrenheit 451, where books are outlawed.[24]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_REDIRECT">
      <summary>
        451 Redirect (Microsoft) |
        Used in Exchange ActiveSync if there either Is a more efficient server to use Or the server cannot access the users' mailbox.[25]
        The client Is supposed To re-run the HTTP Autodiscovery protocol To find a better suited server.[26]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_REQUEST_HEADER_TOO_LARGE">
      <summary>
        494 Request Header Too Large (Nginx) |
        Nginx internal code similar To 431 but it was introduced earlier In version 0.9.4 (On January 21, 2011).[27][original research?]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_CERT_ERROR">
      <summary>
        495 Cert Error (Nginx) |
        Nginx internal code used When SSL client certificate Error occurred To distinguish it from 4XX In a log And an Error page redirection.
        (在SSL层解密的时候错误，则为证书错误)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NO_CERT">
      <summary>
        496 No Cert (Nginx) |
        Nginx internal code used When client didn't provide certificate to distinguish it from 4XX in a log and an error page redirection.
        (客户端在向ssl服务器发送ssl请求的时候没有应用密匙加密，直接发送明文给服务器了，则服务器直接拒绝请求)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_HTTP_TO_HTTPS">
      <summary>
        497 HTTP to HTTPS (Nginx) |
        Nginx internal code used For the plain HTTP requests that are sent To HTTPS port To distinguish it from 4XX In a log And an Error page redirection.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_TOKEN_INVALID">
      <summary>
        498 Token expired/invalid (Esri) |
        Returned by ArcGIS For Server. A code Of 498 indicates an expired Or otherwise invalid token.[28]
        (错误的参数信息)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_CLOSED_REQUEST">
      <summary>
        499 Client Closed Request (Nginx) |
        Used in Nginx logs to indicate when the connection has been closed by client while the server Is still processing its request, making server unable to send a status code back.[29]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_TOKEN_REQUIRED">
      <summary>
        499 Token required (Esri) |
        Returned by ArcGIS For Server. A code Of 499 indicates that a token Is required (If no token was submitted).[28]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_INTERNAL_SERVER_ERROR">
      <summary>
        500 Internal Server Error |
        A generic Error message, given When an unexpected condition was encountered And no more specific message Is suitable.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NOT_IMPLEMENTED">
      <summary>
        501 Not Implemented |
        The server either does Not recognize the request method, Or it lacks the ability To fulfill the request. Usually this implies future availability (e.g., a New feature Of a web-service API).
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_BAD_GATEWAY">
      <summary>
        502 Bad Gateway |
        The server was acting As a gateway Or proxy And received an invalid response from the upstream server.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_SERVICE_UNAVAILABLE">
      <summary>
        503 Service Unavailable |
        The server Is currently unavailable (because it Is overloaded Or down For maintenance). Generally, this Is a temporary state.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_GATEWAY_TIMEOUT">
      <summary>
        504 Gateway Timeout |
        The server was acting As a gateway Or proxy And did Not receive a timely response from the upstream server.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_VERSION_NOT_SUPPORTED">
      <summary>
        505 HTTP Version Not Supported |
        The server does Not support the HTTP protocol version used In the request.
        (服务器所不支持的协议类型)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NEGOTIATES">
      <summary>
        506 Variant Also Negotiates (RFC 2295) |
        Transparent content negotiation For the request results In a circular reference.[30]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_INSUFFICIENT_STORAGE">
      <summary>
        507 Insufficient Storage (WebDAV; RFC 4918) |
        The server Is unable To store the representation needed To complete the request.[4]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_LOOP_DETECTED">
      <summary>
        508 Loop Detected (WebDAV; RFC 5842) |
        The server detected an infinite Loop While processing the request (sent In lieu Of 208 Already Reported).
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_BANDWIDTH_LIMITED_EXCEEDED">
      <summary>
        509 Bandwidth Limit Exceeded (Apache bw/limited extension)[31] |
        This status code Is Not specified In any RFCs. Its use Is unknown.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NOT_EXTENDED">
      <summary>
        510 Not Extended (RFC 2774) |
        Further extensions To the request are required For the server To fulfil it.[32]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_NETWORK_AUTH_REQUIRED">
      <summary>
        511 Network Authentication Required (RFC 6585) |
        The client needs To authenticate To gain network access. Intended For use by intercepting proxies used To control access To the network
        (e.g., "captive portals" used To require agreement To Terms Of Service before granting full Internet access via a Wi-Fi hotspot).[19]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_UNKNOWN_ERROR">
      <summary>
        520 Unknown Error |
        This status code Is Not specified In any RFC And Is returned by certain services, For instance Microsoft Azure And CloudFlare servers:
        "The 520 error is essentially a “catch-all” response for when the origin server returns something unexpected or something that is not
        tolerated/interpreted (protocol violation or empty response)."[33]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_CONNECTION_TIMEOUT">
      <summary>
        522 Origin Connection Time-out |
        This status code Is Not specified In any RFCs, but Is used by CloudFlare's reverse proxies to signal that a server connection timed out.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_READ_TIMEOUT_ERROR">
      <summary>
        598 Network read timeout error (Unknown) |
        This status code Is Not specified In any RFCs, but Is used by Microsoft HTTP proxies To signal a network read timeout behind the proxy To a client In front Of the proxy.[citation needed]
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_CONNECT_TIMEOUT_ERROR">
      <summary>
        599 Network connect timeout error (Unknown) |
        This status code Is Not specified In any RFCs, but Is used by Microsoft HTTP proxies To signal a network connect timeout behind the proxy To a client In front Of the proxy.[citation needed]
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Http.NetResponse.IsHTTP_RFC(Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        服务器所返回来的数据是否为HTTP错误代码
      </summary>
      <param name="response"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AddressEnumerator.EnumerateAddress(System.String)">
      <summary>

      </summary>
      <param name="expression$">
        Example as:

        ```
        192.168.100.*
        192.168.*.233
        192.1-120.*.*
        ```
      </param>
      <returns></returns>

    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.Streams.Array.ArrayAbstract`1.value(System.Int32)">
      <summary>
        由于这个模块是专门应用于服务器端的数据交换的模块，所以稳定性优先，
        这里面的函数都是安全的数组访问方法
      </summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.Streams.Array.VarArray`1">
      <summary>
        The bytes length of the element in thee source sequence is not fixed.
        (序列里面的元素的长度是不固定的)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Streams.Array.VarArray`1.Serialize">
      <summary>
        Long + T + Long + T
        其中Long是一个8字节长度的数组，用来指示T的长度
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.Streams.Array.ValueArray`1">
      <summary>
        对于<see cref="T:System.Int64"/>, <see cref="T:System.Int32"/>, <see cref="T:System.Double"/>, <see cref="T:System.DateTime"/>
        这些类型的数据来说，进行网络传输的时候使用json会被转换为字符串，数据量比较大，而转换为字节再进行传输，数据流量的消耗会比较小
      </summary>
      <typeparam name="T"></typeparam>
      <remarks>这个是定长的数组序列</remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.Streams.String">
      <summary>
        字符串序列流
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.ContentTypes.MIME">
      <summary>
        MIME stands for "Multipurpose Internet Mail Extensions. It's a way of identifying files on the Internet according to their nature and format.
        For example, using the ``Content-type`` header value defined in a HTTP response, the browser can open the file with the proper extension/plugin.
        (http://www.freeformatter.com/mime-types-list.html)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.ContentTypes.MIME.SuffixTable">
      <summary>
        枚举出所有已知的文件拓展名列表，Key全部都是小写的 (格式: ``.ext``)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.ContentTypes.MIME.ContentTypes">
      <summary>
        根据类型来枚举，Key全部都是小写的
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Protocols.ContentTypes.MIME.Unknown">
      <summary>
        .*（ 二进制流，不知道下载文件类型）
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.ContentTypes.ContentType">
      <summary>
        MIME types / Internet Media Types
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.ContentTypes.ContentType.Name">
      <summary>
        Type name or brief info
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.ContentTypes.ContentType.MIMEType">
      <summary>
        MIME Type / Internet Media Type
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.ContentTypes.ContentType.FileExt">
      <summary>
        File Extension
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.ContentTypes.ContentType.Details">
      <summary>
        More Details
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.ISerializable">
      <summary>
        支持序列化的对象，则这个对象可以被应用于<see cref="T:Microsoft.VisualBasic.Net.Protocols.RequestStream"/>数据载体的网络传输操作过程
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.ISerializable.Serialize">
      <summary>
        Transform this .NET object into a raw stream object for the network data transfer.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.RawStream">
      <summary>
        原始串流的基本模型，这个流对象应该具备有两个基本的方法：
        1. 从原始的字节流之中反序列化构造出自身的构造函数
        2. 将自身序列化为字节流的<see cref="M:Microsoft.VisualBasic.Net.Protocols.ISerializable.Serialize"/>序列化方法
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RawStream.#ctor(System.Byte[])">
      <summary>
        You should overrides this constructor to generate a stream object.(必须要有一个这个构造函数来执行反序列化)
      </summary>
      <param name="rawStream"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RawStream.Serialize">
      <summary>
        <see cref="M:Microsoft.VisualBasic.Net.Protocols.ISerializable.Serialize"/>序列化方法
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RawStream.GetRawStream``1(System.Byte[])">
      <summary>
        按照类型的定义进行反序列化操作
      </summary>
      <typeparam name="TRawStream"></typeparam>
      <param name="rawStream"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Protocols.RawStream.INT32">
      <summary>
        Single/Integer
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Protocols.RawStream.DblFloat">
      <summary>
        System.Double
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RawStream.op_LessThanOrEqual(System.String,Microsoft.VisualBasic.Net.Protocols.RawStream)">
      <summary>

      </summary>
      <param name="addr">IPEndPoint string value likes 127.0.0.1:8080</param>
      <param name="raw"></param>
      <returns></returns>
      <![CDATA[

 Dim rep As RequestStream =
    "127.0.0.1:80" <= New RequestStream With {
           ...
     }
 ]]>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.IVerifySession">
      <summary>
        这个组件用来为用户输入一些验证信息
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.Reflection.AppMgr">
      <summary>
        能够处理多种协议数据
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Reflection.AppMgr.RegisterApp``1(``0,System.Boolean)">
      <summary>
        有点多此一举？？
      </summary>
      <typeparam name="T"></typeparam>
      <param name="App"></param>
      <param name="[overrides]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Reflection.__protocolInvoker.InvokeProtocol3(System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream,System.Net.IPEndPoint)">
      <summary>

      </summary>
      <param name="CA">
        <see cref="P:Microsoft.VisualBasic.Net.SSL.Certificate.uid"/>
      </param>
      <param name="request"></param>
      <param name="remoteDevice"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.Reflection.Protocol">
      <summary>
        This attribute indicates the entry point of the protocol processor definition location and the details of the protocol processor.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.Reflection.Protocol.EntryPoint">
      <summary>
        Entry point for the data protocols, this property usually correspondent to the request stream's
        property: <see cref="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.Protocol"/> and <see cref="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.ProtocolCategory"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.Reflection.Protocol.DeclaringType">
      <summary>
        这个属性对于方法而言为空，但是对于类型入口点而言则不为空
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Reflection.Protocol.#ctor(System.Int64)">
      <summary>
        Generates the protocol method entrypoint.(应用于服务器上面的协议处理方法)
      </summary>
      <param name="EntryPoint"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Reflection.Protocol.#ctor(System.Type)">
      <summary>
        Generates the <see cref="T:Microsoft.VisualBasic.Net.Protocols.Reflection.ProtocolHandler"/> on the server side, this is using for initialize a protocol API entry point.(客户端上面的类型)
      </summary>
      <param name="Type">客户端上面的类型</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Reflection.Protocol.GetProtocolCategory(System.Type)">
      <summary>
        This method is usually using for generates a <see cref="T:Microsoft.VisualBasic.Net.Protocols.Reflection.ProtocolHandler"/> object.
        Correspondent to the protocol class property <see cref="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.ProtocolCategory"/>
      </summary>
      <param name="Type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Reflection.Protocol.GetEntryPoint(System.Reflection.MethodInfo)">
      <summary>
        This method is usually using for generates a details protocol processor, example is calling the method interface: <see cref="T:Microsoft.VisualBasic.Net.Abstract.DataRequestHandler"/>
        Correspondent to the protocol entry property <see cref="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.Protocol"/>
      </summary>
      <param name="Method"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.Reflection.ProtocolHandler">
      <summary>
        这个模块只处理<see cref="T:Microsoft.VisualBasic.Net.Abstract.DataRequestHandler"/>类型的接口
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.Reflection.ProtocolHandler.DeclaringType">
      <summary>
        这个类型建议一般为某种枚举类型
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Reflection.ProtocolHandler.#ctor(System.Object)">
      <summary>
        请注意，假若没有在目标的类型定义之中查找出入口点的定义，则这个构造函数会报错，
        假若需要安全的创建对象，可以使用<see cref="M:Microsoft.VisualBasic.Net.Protocols.Reflection.ProtocolHandler.SafelyCreateObject``1(``0)"/>函数
      </summary>
      <param name="obj">Protocol的实例</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Reflection.ProtocolHandler.SafelyCreateObject``1(``0)">
      <summary>
        失败会返回空值
      </summary>
      <typeparam name="T"></typeparam>
      <param name="App"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.Reflection.ProtocolHandler.HandleRequest(System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream,System.Net.IPEndPoint)">
      <summary>
        Handle the data request from the client for socket events: <see cref="P:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.Responsehandler"/> or <see cref="P:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.Responsehandler"/>
      </summary>
      <param name="CA"></param>
      <param name="request">The request stream object which contains the commands from the client</param>
      <param name="remoteDevcie">The IPAddress of the target incoming client data request.</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.RequestStream">
      <summary>
        Socket user client => Socket server data request &amp;
        Socket server => Socket user client data response package.
        (Socket客户端 => Socket服务器所发送的数据请求以及从
        Socket服务器 => Socket客户端所返回数据的数据响应包)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.ProtocolCategory">
      <summary>
        This property indicates the protocol processor module for the server object.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.Protocol">
      <summary>
        This property indicates which the specifics protocol processor will be used for the incoming client request.
        (协议的头部)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.BufferLength">
      <summary>
        Buffer length of the protocol request raw stream data <see cref="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.ChunkBuffer"/>.(协议数据的长度)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.ChunkBuffer">
      <summary>
        The raw stream data of the details data request or the server response data.(协议的具体数据请求)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.uid">
      <summary>
        使用用户的账号信息唯一标识出来的对象，在服务器端用来查找用户证书的
        由于在服务器上面这个哈希值是和解密的密匙唯一对应的，所以服务器上面大多数情况下是直接通过这个哈希值来决定授权的
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.FullRead">
      <summary>
        <see cref="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.ChunkBuffer"/>部分的数据是否完整？
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.#ctor(System.Int64,System.Int64)">
      <summary>
        构建一个无参数的网络协议对象
      </summary>
      <param name="ProtocolCategory"></param>
      <param name="Protocol"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.#ctor(System.Int64,System.Int64,System.String)">
      <summary>
        The default text encoding is <see cref="P:System.Text.Encoding.UTF8"/>
      </summary>
      <param name="ProtocolCategory"></param>
      <param name="Protocol"></param>
      <param name="s_Data">Protocol request argument parameters</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.#ctor(System.String)">
      <summary>
        其余的协议参数都是值 <see cref="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_OK"/>
      </summary>
      <param name="data"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.#ctor(System.Byte[])">
      <summary>
        Deserialize (当还有剩余数据的时候会将数据进行剪裁)
      </summary>
      <param name="rawStream"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.GetUTF8String">
      <summary>
        默认是使用UTF8编码来编码字符串的
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.LoadObject``1(Microsoft.VisualBasic.Net.Protocols.LoadObject{``0})">
      <summary>
        将数据首先生成字符串，然后根据函数指针<paramref name="handler"/>句柄的描述从字符串之中反序列化加载对象
      </summary>
      <typeparam name="T"></typeparam>
      <param name="handler"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.LoadObject``1">
      <summary>
        json
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.GetRawStream``1">
      <summary>
        从原始数据流<see cref="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.ChunkBuffer"/>之中进行反序列化得到一个嵌套的数据串流对象
      </summary>
      <typeparam name="TStream"></typeparam>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.CreateProtocol``1(System.Int64,System.Int64,``0)">
      <summary>
        这个函数是使用json序列化参数信息的
      </summary>
      <typeparam name="T"></typeparam>
      <param name="cat"></param>
      <param name="protocol"></param>
      <param name="params"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.CreatePackage``1(``0)">
      <summary>
        服务器端返回数据所使用的，默认使用json序列化，所有的标签为<see cref="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_OK"/>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.CreatePackage(System.Byte[])">
      <summary>
        服务器端返回数据所使用的，所有的标签为<see cref="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_OK"/>
      </summary>
      <param name="pack"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.Serialize">
      <summary>
        执行序列化进行网络之间的数据传输
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Protocols.RequestStream.SYS_PROTOCOL">
      <summary>
        系统里面最基本的基本数据协议
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Protocols.RequestStream.Protocols">
      <summary>
        最基本的Socket数据串流协议
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Protocols.RequestStream.Protocols.SSL">
      <summary>
        私有密匙加密
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Protocols.RequestStream.Protocols.SSL_PublicToken">
      <summary>
        公共密匙加密
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Protocols.RequestStream.Protocols.InvalidCertificates">
      <summary>
        无效的数字证书
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.IsSSLProtocol">
      <summary>
        这个请求数据是一个SSL加密数据（使用用户的私有密匙）
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.IsSSL_PublicToken">
      <summary>
        使用公共密匙
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.IsPlantText">
      <summary>
        这个数据仅仅是一个文本，没有包含有任何协议头数据
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.IsSSLHandshaking">
      <summary>
        这个请求数据是否为握手协议
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Protocols.RequestStream.op_Equality(Microsoft.VisualBasic.Net.Protocols.RequestStream,Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        简单的字符串等价
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Mailto.MailConfigure.Password">
      <summary>
        存储至文件之前请先加密
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Mailto.MailContents">
      <summary>
        E-Mail content data model
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Mailto.MailContents.MessageHtml">
      <summary>
        The message html text template.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Mailto.MailContents.Subject">
      <summary>

      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Mailto.MailContents.Body">
      <summary>
        Body html
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Mailto.MailContents.Attatchments">
      <summary>
        The path list of the attachments file.
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Mailto.MailContents.Logo">
      <summary>
        The file path of the logo image.
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Mailto.EMailClient">
      <summary>
        A client of gmail.com
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Mailto.EMailClient.SendMessagesTo(System.String,System.String,System.String)">
      <summary>

      </summary>
      <param name="emailTitle">标题</param>
      <param name="emailNote">内容</param>
      <param name="emailUser">收件人地址</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Mailto.EMailClient.GmailClient(System.String,System.String)">
      <summary>
        Gmail
      </summary>
      <param name="account"></param>
      <param name="pass"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Abstract.IProtocolHandler">
      <summary>
        Object for handles the request <see cref="T:Microsoft.VisualBasic.Net.Protocols.Reflection.Protocol"/>.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Abstract.DataRequestHandler">
      <summary>

      </summary>
      <param name="CA">
        <see cref="P:Microsoft.VisualBasic.Net.SSL.Certificate.uid"/>
      </param>
      <param name="request"></param>
      <param name="RemoteAddress"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Abstract.ExceptionHandler">
      <summary>
        处理错误的工作逻辑的抽象接口
      </summary>
      <param name="ex">Socket的内部错误信息</param>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Abstract.IServicesSocket">
      <summary>
        Socket listening object which is running at the server side asynchronous able multiple threading.
        (运行于服务器端上面的Socket监听对象，多线程模型)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Abstract.IServicesSocket.LocalPort">
      <summary>
        The server services listening on this local port.(当前的这个服务器对象实例所监听的本地端口号)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Abstract.IServicesSocket.Run">
      <summary>
        This server waits for a connection and then uses  asychronous operations to
        accept the connection, get data from the connected client,
        echo that data back to the connected client.
        It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Abstract.IServicesSocket.Run(System.Net.IPEndPoint)">
      <summary>
        This server waits for a connection and then uses  asychronous operations to
        accept the connection, get data from the connected client,
        echo that data back to the connected client.
        It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Abstract.IDataRequestHandler.Responsehandler">
      <summary>
        This function pointer using for the data request handling of the data request from the client socket.
        (这个函数指针用于处理来自于客户端的请求)
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.SSL.Certificate">
      <summary>
        应用程序的完整性验证和用户身份的验证
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.Certificate.PrivateKey">
      <summary>
        私有密匙
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.Certificate.uid">
      <summary>
        <see cref="T:System.Guid"/>计算出来的哈希值只能为负数，现在约定，当这个属性为0的时候就认为这个证书是公共密匙，
        这个一般是使用用户的账号所计算出来的哈希值
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.SSL.Certificate._uid">
      <summary>
        初始化继承类所需要的
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.Certificate.hash">
      <summary>
        与<see cref="P:Microsoft.VisualBasic.Net.SSL.Certificate.uid"/>属性所不同的是，这个属性是<see cref="P:Microsoft.VisualBasic.Net.SSL.Certificate.PrivateKey"/>的哈希值，
        通常这个哈希值在请求resultful WebAPI的时候用来作为用户的唯一标识
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.Certificate.#ctor(System.String,System.String)">
      <summary>
        请注意这个构造方法会计算一遍密码的哈希值，假若需要直接进行初始化，请使用<see cref="M:Microsoft.VisualBasic.Net.SSL.Certificate.Install(System.String,System.Boolean)"/>方法
      </summary>
      <param name="hash">用户的私有密匙</param>
      <param name="uid">大小写无关的</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.Certificate.#ctor(System.String,System.Int64)">
      <summary>

      </summary>
      <param name="hash">原始的密码，会在这个构造函数之中计算为哈希值产生新的密码。</param>
      <param name="uid">客户端所发送过来的使用哈希值计算出来的唯一标识符</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.Certificate.#ctor(Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        从服务器上面所返回来的握手数据
      </summary>
      <param name="handshakeData"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.Certificate.#ctor(System.String)">
      <summary>
        这个构造函数不再计算哈希值而是直接初始化
      </summary>
      <param name="hash">必须是md5哈希值</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.Certificate.Install(System.String,System.Int64)">
      <summary>
        不计算密匙<paramref name="privateKey"/>哈希值而是直接安装
      </summary>
      <param name="privateKey"></param>
      <param name="uid"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.Certificate.Encrypt(Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        函数会根据uid的值来设定协议为私有密匙还是公共密匙
      </summary>
      <param name="request"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.Certificate.PublicEncrypt(Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        强制将协议设定为公共密匙加密
      </summary>
      <param name="request"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.Certificate.Decrypt(Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        <see cref="M:Microsoft.VisualBasic.Net.SSL.Certificate.Decrypt(System.Byte[])"/>
        <see cref="P:Microsoft.VisualBasic.Net.Protocols.RequestStream.ChunkBuffer"/>
      </summary>
      <param name="request"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.Certificate.AppDomain">
      <summary>
        检查应用程序的完整性
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.Certificate.Install(System.String,System.Boolean)">
      <summary>

      </summary>
      <param name="App">可执行程序的文件路径</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.SSLProtocols.Handshaking(Microsoft.VisualBasic.Net.SSL.Certificate,System.Net.IPEndPoint)">
      <summary>
        客户端与服务器之间初始化加密连接
      </summary>
      <param name="CA">客户端的证书，这个是服务器来进行客户端程序的完整性验证的</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices">
      <summary>
        抽象SSL服务器
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices.InstallCertificates">
      <summary>
        告诉SSL层如何安装数字证书
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices.RaiseHandshakingEvent">
      <summary>
        有新的客户端请求进行连接
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices.RefuseHandshake">
      <summary>
        对于某些应用出于安全性的考虑，会将这里设置为False，则服务器就会全部拒绝后面的所有的握手请求，只接受来自于从外部导入的用户证书的数据请求
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices.CA">
      <summary>
        公共密匙
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices.PrivateKeys">
      <summary>
        客户端的私有密匙
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices.ResponseHandler">
      <summary>
        处理私有密匙的数据请求
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices.Install(Microsoft.VisualBasic.Net.SSL.Certificate,System.Boolean,System.String)">
      <summary>

      </summary>
      <param name="CA"></param>
      <param name="[overrides]">
        当证书的哈希值有冲突的时候，新安装的证书<paramref name="ca"/>可不可以将旧的证书覆盖掉
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.SSLProtocols.SSLServicesResponseHandler(Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices,System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream,System.Net.IPEndPoint,Microsoft.VisualBasic.Net.SSL.SSLProtocols.InstallCertificates)">
      <summary>

      </summary>
      <param name="ssl"></param>
      <param name="CA">解密使用的证书凭据，这个用来鉴别客户端身份是否被伪造</param>
      <param name="request"></param>
      <param name="remoteDev"></param>
      <param name="InstallCertificates"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.SSLProtocols.__sslHandshake(System.Int64,Microsoft.VisualBasic.Net.SSL.SSLProtocols.ISSLServices,Microsoft.VisualBasic.Net.Protocols.RequestStream,System.Net.IPEndPoint,Microsoft.VisualBasic.Net.SSL.SSLProtocols.InstallCertificates)">
      <summary>
        客户端与服务器之间进行连接的初始化，服务器会在这里为客户端动态的生成一个密匙
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.CA">
      <summary>
        这个数字证书是当前版本下的服务器的客户端的数字签名，服务器会使用这个证书来验证客户端的文件是否被恶意破解，相当于公有密匙
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.PrivateKeys">
      <summary>
        A table stores the certificates of the current connected clients on this server.
        (连接上来的客户端的私有证书列表)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.#ctor(System.Int32,Microsoft.VisualBasic.Net.SSL.Certificate,System.Object,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>

      </summary>
      <param name="LocalPort"></param>
      <param name="CA">服务器在部署的时候向对应版本您的客户端的数字签名</param>
      <param name="exHandler">
        Public Delegate Sub <see cref="T:Microsoft.VisualBasic.Net.Abstract.ExceptionHandler"/>(ex As <see cref="T:System.Exception"/>)
      </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.LocalPort">
      <summary>
        底层工作socket所监听的端口号
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.Responsehandler">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Net.Abstract.DataRequestHandler"/>:
        Public Delegate Function <see cref="T:Microsoft.VisualBasic.Net.Abstract.DataRequestHandler"/>(CA As <see cref="T:System.Int64"/>, request As <see cref="T:Microsoft.VisualBasic.Net.Protocols.RequestStream"/>,
        RemoteAddress As <see cref="T:System.Net.IPEndPoint"/>) As <see cref="T:System.Net.IPEndPoint"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.ISSLServices_InstallCertificates">
      <summary>
        生成证书的方法
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.RaiseHandshakingEvent">
      <summary>
        客户端和服务器握手之后触发这个动作
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.RefuseHandshake">
      <summary>
        Does this ssl server accepts the handshaking from the user client or just allow the client connect to this server from manual imports their certificates by using method <see cref="M:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.Install(Microsoft.VisualBasic.Net.SSL.Certificate,System.Boolean,System.String)"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.WaitForStart">
      <summary>
        等待底层socket成功进入监听模式
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.Run(System.Net.IPEndPoint)">
      <summary>
        This server waits for a connection and then uses  asychronous operations to
        accept the connection, get data from the connected client,
        echo that data back to the connected client.
        It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.Run">
      <summary>
        This server waits for a connection and then uses  asychronous operations to
        accept the connection, get data from the connected client,
        echo that data back to the connected client.
        It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.Install(Microsoft.VisualBasic.Net.SSL.Certificate,System.Boolean,System.String)">
      <summary>
        If the property of <see cref="P:Microsoft.VisualBasic.Net.SSL.SSLSynchronizationServicesSocket.RefuseHandshake"/> is set to TRUE, then no more new client can be connect to this server object.
        The only way to add new client on this server is using this function to imports the client's certificates direct manually.
        (假若ssl层关闭了握手协议，则不可能会再有新的客户端可以连接到这个服务器上面了，则这个时候就可以使用这个方法来手工的为新的客户端导入数字证书，从而可以只接受指定的客户端的连接操作
        假若是证书同步操作的话，则可以将app授权证书通过这个方法导入到服务器模块接收主节点的证书同步操作)
      </summary>
      <param name="CA"></param>
      <param name="[overrides]"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Persistent.Application.Protocols.SendMessagePost.FROM">
      <summary>
        发送这条消息的客户端的在服务器上面的句柄，也可以看作为用户编号，尽管这个编号是经过一些映射操作最终得到的
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.SSLClient.#ctor(System.Net.IPEndPoint,System.Int64,Microsoft.VisualBasic.Net.Persistent.PushMessage,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>

      </summary>
      <param name="services"></param>
      <param name="ID"></param>
      <param name="DataRequestHandle">
        Public Delegate Function PushMessage(USER_ID As <see cref="T:System.Int64"/>, Message As <see cref="T:Microsoft.VisualBasic.Net.Protocols.RequestStream"/>) As <see cref="T:Microsoft.VisualBasic.Net.Protocols.RequestStream"/>
      </param>
      <param name="ExceptionHandler"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.SSLClient.Logon(Microsoft.VisualBasic.Net.SSL.Certificate)">
      <summary>
        使用已经拥有的用户证书登录服务器，这一步省略了握手步骤
      </summary>
      <param name="UserToken"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.SSLClient.SendMessage(System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        消息在这个函数之中自动被加密处理
      </summary>
      <param name="USER_ID"></param>
      <param name="request"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Persistent.Application.SSLPushServices">
      <summary>
        消息都是经过加密操作了的
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Persistent.Application.SSLPushServices.CA">
      <summary>
        共有密匙
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Persistent.Application.SSLPushServices.PrivateKeys">
      <summary>
        连接到当前的这个服务器上面的客户端的私有密匙列表
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.SSLPushServices.#ctor(System.Int32,System.Object,Microsoft.VisualBasic.Net.Persistent.OffLineMessageSendHandler,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>

      </summary>
      <param name="LocalPort"></param>
      <param name="OffLineMessageSendHandler">
        Public Delegate Sub <see cref="T:Microsoft.VisualBasic.Net.Persistent.OffLineMessageSendHandler"/>(FromUSER_ID As <see cref="T:System.Int64"/>, USER_ID As <see cref="T:System.Int64"/>, Message As <see cref="T:Microsoft.VisualBasic.Net.Protocols.RequestStream"/>)
      </param>
      <param name="exHandler"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.SSLPushServices.Install(Microsoft.VisualBasic.Net.SSL.Certificate)">
      <summary>
        安装新的公有密匙
      </summary>
      <param name="CA"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.SSLPushServices.Install(Microsoft.VisualBasic.Net.SSL.Certificate,System.Boolean,System.String)">
      <summary>
        安装新的用户私有密匙
      </summary>
      <param name="CA"></param>
      <param name="[overrides]"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Persistent.Application.USER">
      <summary>
        服务器也相当于一个USER，只不过服务器的UID为0，即最高级的用户
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.USER.#ctor(System.String,System.Int32,System.Int64,Microsoft.VisualBasic.Net.Persistent.PushMessage,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>

      </summary>
      <param name="HostName"></param>
      <param name="RemotePort"></param>
      <param name="ID"></param>
      <param name="DataRequestHandle">使用这个函数来获取外部发送过来的用户消息</param>
      <param name="ExceptionHandler"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.USER.BeginConnect(System.Windows.Forms.MethodInvoker,Microsoft.VisualBasic.Net.SSL.Certificate)">
      <summary>
        请注意，线程会在这里阻塞
      </summary>
      <param name="ForceCloseConnection">远程主机强制关闭连接之后触发这个动作</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.USER.BeginConnect(Microsoft.VisualBasic.Net.SSL.Certificate,System.Windows.Forms.MethodInvoker)">
      <summary>
        不会发生阻塞
      </summary>
      <param name="ForceCloseConnection">远程主机强制关闭连接之后触发这个动作</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.USER.__sendMessageToMe(System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream,System.Net.IPEndPoint)">
      <summary>

      </summary>
      <param name="CA"></param>
      <param name="request"></param>
      <param name="remote">由于数据都是通过中心服务器转发的，所以这个已经没有存在的意义了，但是为了和短连接的socket的数据处理接口保持兼容，所以还保留这个参数</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.USER.SendMessage(System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        True标识发送成功，False标识用户离线
      </summary>
      <param name="USER_ID"></param>
      <param name="Message">在发送之前请对消息进行加密处理</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer">
      <summary>
        长连接模式的消息推送服务器
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer._workSocket">
      <summary>
        客户端对这个服务器的端口号是自动配置的，只需要向客户端返回<see cref="F:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket._LocalPort"/>端口就可以了
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer._sslLayer">
      <summary>
        使用证书来加密发出去的消息
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.LocalPort">
      <summary>
        从这个端口号进行登录（协同长连接的socket正常工作的socket的端口号，可以看作为UserAPI）
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.__requestHandlerInterface(System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream,System.Net.IPEndPoint)">
      <summary>
        只要是为ssl服务设置的
      </summary>
      <param name="remote"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.#ctor(System.Int32,Microsoft.VisualBasic.Net.Persistent.OffLineMessageSendHandler,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>

      </summary>
      <param name="LocalPort"></param>
      <param name="OffLineMessageSendHandler">
        Public Delegate Sub <see cref="T:Microsoft.VisualBasic.Net.Persistent.OffLineMessageSendHandler"/>(FromUSER_ID As <see cref="T:System.Int64"/>, USER_ID As <see cref="T:System.Int64"/>, Message As <see cref="T:Microsoft.VisualBasic.Net.Protocols.RequestStream"/>)
      </param>
      <param name="exHandler"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.DisconnectUser(System.Int64,System.Boolean)">
      <summary>
        Disconnect user persistent connection who have the specific <paramref name="user_id"/> from this server.
        (断开服务器与用户客户端的长连接)
      </summary>
      <param name="USER_ID">This user will be deleted from the server registry.</param>
      <param name="removeCA">是否在删除socket句柄的时候还会删除相对应的ssl证书</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.SendMessage(System.Int64,System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>

      </summary>
      <param name="From"></param>
      <param name="USER_ID"></param>
      <param name="Message"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.__sendMessage(System.Int64,System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        发送出去的数据需要进行加密，假若是ssl模式的话
      </summary>
      <param name="From"></param>
      <param name="USER_ID"></param>
      <param name="Message"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.UidMappings">
      <summary>
        将外部编号映射为内部的客户端句柄
        假若找不到，请返回-1
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.__sendMessage(Microsoft.VisualBasic.Net.Persistent.Socket.WorkSocket,System.Int64,System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>

      </summary>
      <param name="socket"></param>
      <param name="From">这个是这一条消息的源头，可能需要进行映射</param>
      <param name="USER_ID"></param>
      <param name="Message"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.__usrInvokeSend(System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream,System.Net.IPEndPoint)">
      <summary>
        用户客户端请求发送消息至指定编号的用户的终端之上
      </summary>
      <param name="CA"></param>
      <param name="request"></param>
      <param name="remote"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.RemoveFreeConnections">
      <summary>
        哈希值不存在于现有的登录用户列表之中就是空闲连接
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Application.MessagePushServer.AcceptClient(Microsoft.VisualBasic.Net.Persistent.Socket.WorkSocket)">
      <summary>
        建立一个新的连接
      </summary>
      <param name="Client"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Persistent.OffLineMessageSendHandler">
      <summary>
        离线数据请求
      </summary>
      <param name="FromUSER_ID"></param>
      <param name="USER_ID"></param>
      <param name="Message"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Persistent.Socket.WorkSocket">
      <summary>
        长连接之中只是进行消息的发送处理，并不保证数据能够被接收到
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.WorkSocket.ReadCallback(System.IAsyncResult)">
      <summary>
        DO_NOTHING
      </summary>
      <param name="ar"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient">
      <summary>
        请注意，这个对象是应用于客户端与服务器保持长连接所使用，并不会主动发送消息给服务器，而是被动的接受服务器的数据请求
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.port">
      <summary>
        The port number for the remote device.
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.remoteEP">
      <summary>
        Remote End Point
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.#ctor(Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>

      </summary>
      <param name="Client">Copy the TCP client connection profile data from this object.(从本客户端对象之中复制出连接配置参数以进行初始化操作)</param>
      <param name="ExceptionHandler"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.#ctor(System.String,System.Int32,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>

      </summary>
      <param name="RemotePort"></param>
      <param name="ExceptionHandler">Public Delegate Sub ExceptionHandler(ex As Exception)</param>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.OnServerHashCode">
      <summary>
        本客户端socket在服务器上面的哈希句柄值
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.RemoteServerShutdown">
      <summary>
        远程主机强制关闭连接之后触发这个动作
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.BeginConnect">
      <summary>
        函数会想服务器上面的socket对象一样在这里发生阻塞
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.ConnectCallback(System.IAsyncResult)">
      <summary>
        Retrieve the socket from the state object.
      </summary>
      <param name="ar"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.Receive(Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.StateObject)">
      <summary>
        An exception of type '<see cref="T:System.Net.Sockets.SocketException"/>' occurred in System.dll but was not handled in user code
        Additional information: A request to send or receive data was disallowed because the socket is not connected and
        (when sending on a datagram socket using a sendto call) no address was supplied
      </summary>
      <param name="client"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.__send(System.Net.Sockets.Socket,System.String)">
      <summary>
        ????
        An exception of type 'System.Net.Sockets.SocketException' occurred in System.dll but was not handled in user code
        Additional information: A request to send or receive data was disallowed because the socket is not connected and
        (when sending on a datagram socket using a sendto call) no address was supplied
      </summary>
      <param name="client"></param>
      <param name="data"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.readDataBuffer(Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.StateObject,System.IAsyncResult)">
      <summary>
        Read data from the remote device.
      </summary>
      <param name="state"></param>
      <param name="ar"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.PersistentClient.ReceiveCallback(System.IAsyncResult)">
      <summary>
        Retrieve the state object and the client socket from the asynchronous state object.
      </summary>
      <param name="ar"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket">
      <summary>

      </summary>
      <remarks>
        一、TCP长连接

        正常情况下，一条TCP连接建立后，只要双不提出关闭请求并且不出现异常情况，这条连接是一直存在的，
        操作系统不会自动去关闭它，甚至经过物理网络拓扑的改变之后仍然可以使用。
        所以一条连接保持几天、几个月、几年或者更长时间都有可能，只要不出现异常情况或由用户（应用层）主动关闭。
        在编程中， 往往需要建立一条TCP连接， 并且长时间处于连接状态。
        所谓的TCP长连接并没有确切的时间限制， 而是说这条连接需要的时间比较长。

        二、TCP连接的正常中断

        TCP连接在事务处理完毕之后， 由一方提出关闭连接请求， 双方通过四次握手（建立连接是三次握手，
        当然可以通过优化TCP / IP协议栈来减少握手的次数来提高性能， 但这样会形成不规范或者不优雅的通信）来正常关闭连接

        三、TCP连接的异常中断

        导致TCP连接异常中断的因素有： 物理连接被中断、操作系统down机、程序崩溃等等。
      </remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket._LocalPort">
      <summary>
        Socket对象监听的端口号
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.LocalPort">
      <summary>
        The server services listening on this local port.(当前的这个服务器对象实例所监听的本地端口号)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.#ctor(System.Int32,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>
        消息处理的方法接口： Public Delegate Function DataResponseHandler(str As String, RemotePort As Integer) As String
      </summary>
      <param name="LocalPort">
        监听的本地端口号，假若需要进行端口映射的话，则可以在<see cref="M:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.Run"></see>方法之中设置映射的端口号
      </param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.Run">
      <summary>
        This server waits for a connection and then uses  asychronous operations to
        accept the connection, get data from the connected client,
        echo that data back to the connected client.
        It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.Run(System.Net.IPEndPoint)">
      <summary>
        This server waits for a connection and then uses  asychronous operations to
        accept the connection, get data from the connected client,
        echo that data back to the connected client.
        It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.__initSocket(System.Net.IPEndPoint)">
      <summary>
        Bind the socket to the local endpoint and listen for incoming connections.
      </summary>
      <param name="localEndPoint"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.AcceptCallback(System.IAsyncResult)">
      <summary>
        Get the socket that handles the client request.
      </summary>
      <param name="ar"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.__initSocketThread(System.Net.Sockets.Socket)">
      <summary>
        Create the state object for the async receive.
      </summary>
      <param name="handler"></param>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.disposedValue">
      <summary>
        退出监听线程所需要的
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.Persistent.Socket.ServicesSocket.Dispose">
      <summary>
        Stop the server socket listening threads.(终止服务器Socket监听线程)
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.wGetTools">
      <summary>
        提供一些比较详细的数据信息和事件处理
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.wGetTools.CurrentSize">
      <summary>
        Size that has been downloaded
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.wGetTools.TotalSize">
      <summary>
        Total size of the file that has to be downloaded
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.wGetTools.DownloadSpeed">
      <summary>
        KB/sec
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.wGetTools.Downloading">
      <summary>
        Client status
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.StateObject">
      <summary>
        State object for reading client data asynchronously
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.StateObject.workSocket">
      <summary>
        Client  socket.
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.StateObject.BufferSize">
      <summary>
        Size of receive buffer.
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.StateObject.readBuffer">
      <summary>
        Receive buffer.
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.StateObject.ChunkBuffer">
      <summary>
        Received data.
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.IPEndPoint">
      <summary>
        The object of <see cref="T:System.Net.IPEndPoint"/> can not be Xml serialization.
        (系统自带的<see cref="T:System.Net.IPEndPoint"></see>不能够进行Xml序列化)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.IPEndPoint.uid">
      <summary>
        Guid value of this portal information on the server registry.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.IPEndPoint.IPAddress">
      <summary>
        IPAddress of the services instance.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.IPEndPoint.Port">
      <summary>
        Data port of the services instance.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.IPEndPoint.#ctor">
      <summary>
        This parameterless constructor is required for the xml serialization.(XML序列化所需要的)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.IPEndPoint.#ctor(System.String,System.Int32)">
      <summary>

      </summary>
      <param name="IPAddress">
        IPAddress string using for create object using method <see cref="M:System.Net.IPAddress.Parse(System.String)"/>
      </param>
      <param name="Port">
        <see cref="P:System.Net.IPEndPoint.Port"/>
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.IPEndPoint.#ctor(System.String)">
      <summary>

      </summary>
      <param name="str">Required format string: ``IPAddress:Port``</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.IPEndPoint.ToString">
      <summary>
        http://IPAddress:&lt;Port>/
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.IPEndPoint.GetIPEndPoint">
      <summary>
        Convert this networking end point DDM into the <see cref="T:System.Net.IPEndPoint"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.IPEndPoint.IsValid">
      <summary>
        格式是否正确
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.LANTools">
      <summary>
        http://www.codeproject.com/Tips/358946/Retrieving-IP-and-MAC-addresses-for-a-LAN
      </summary>
      <code>
        ' Get my PC IP address
        Call Console.WriteLine("My IP : {0}", GetIPAddress())

        ' Get My PC MAC address
        Call Console.WriteLine("My MAC: {0}", GetMacAddress())

        ' Get all devices on network
        Dim all As Dictionary(Of IPAddress, PhysicalAddress) = GetAllDevicesOnLAN()
        For Each kvp As KeyValuePair(Of IPAddress, PhysicalAddress) In all
        Console.WriteLine("IP : {0}" &amp; vbLf &amp; " MAC {1}", kvp.Key, kvp.Value)
        Next
      </code>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.LANTools.MIB_IPNETROW">
      <summary>
        MIB_IPNETROW structure returned by GetIpNetTable
        DO NOT MODIFY THIS STRUCTURE.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.LANTools.GetIpNetTable(System.IntPtr,System.Int32@,System.Boolean)">
      <summary>
        GetIpNetTable external method
      </summary>
      <param name="pIpNetTable"></param>
      <param name="pdwSize"></param>
      <param name="bOrder"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.LANTools.ERROR_INSUFFICIENT_BUFFER">
      <summary>
        Error codes GetIpNetTable returns that we recognise
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.LANTools.GetAllDevicesOnLAN">
      <summary>
        Get the IP and MAC addresses of all known devices on the LAN
      </summary>
      <remarks>
        1) This table is not updated often - it can take some human-scale time
        to notice that a device has dropped off the network, or a new device
        has connected.
        2) This discards non-local devices if they are found - these are multicast
        and can be discarded by IP address range.
      </remarks>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.LANTools.GetIPAddress">
      <summary>
        Gets the IP address of the current PC
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.LANTools.GetMacAddress">
      <summary>
        Gets the MAC address of the current PC.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.LANTools.IsMulticast(System.Net.IPAddress)">
      <summary>
        Returns true if the specified IP address is a multicast address
      </summary>
      <param name="ip"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.DomainName.TLD">
      <summary>
        顶级域名
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.DomainParser">
      <summary>
        http://sub.domain.com/somefolder/index.html -> domain.com
        somedomain.info -> somedomain.info
        http://anotherdomain.org/home -> anotherdomain.org
        www.subdomain.anothersubdomain.maindomain.com/something/ -> maindomain.com
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.DomainParser.TryParse(System.String,System.Boolean)">
      <summary>
        解析错误会返回空字符串
      </summary>
      <param name="url"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.PingUtility">
      <summary>
        http://www.codeproject.com/Articles/18635/Ping-exe-replica-in-C

        Ping.exe replica in C# 2.0

        Stefan Prodan, 3 May 2007 CPOL
        Usage example of the System.Net.NetworkInformation.Ping.
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.PingUtility.Ping(System.Net.IPAddress,System.UInt32,System.IO.StreamWriter)">
      <summary>
        返回与目标远程机器之间的平均通信时间长度
      </summary>
      <param name="IP"></param>
      <param name="out">Default is console.</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket">
      <summary>
        Socket listening object which is running at the server side asynchronous able multiple threading.
        (运行于服务器端上面的Socket监听对象，多线程模型)
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.LocalPort">
      <summary>
        The server services listening on this local port.(当前的这个服务器对象实例所监听的本地端口号)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.Responsehandler">
      <summary>
        This function pointer using for the data request handling of the data request from the client socket.
        [Public Delegate Function DataResponseHandler(str As <see cref="T:System.String"/>, RemoteAddress As <see cref="T:System.Net.IPEndPoint"/>) As <see cref="T:System.String"/>]
        (这个函数指针用于处理来自于客户端的请求)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.#ctor(System.Int32,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>
        消息处理的方法接口： Public Delegate Function DataResponseHandler(str As String, RemotePort As Integer) As String
      </summary>
      <param name="LocalPort">
        监听的本地端口号，假若需要进行端口映射的话，则可以在<see cref="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.Run"></see>方法之中设置映射的端口号
      </param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.#ctor(Microsoft.VisualBasic.Net.Abstract.DataRequestHandler,System.Int32,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>
        短连接socket服务端
      </summary>
      <param name="DataArrivalEventHandler"></param>
      <param name="LocalPort"></param>
      <param name="exHandler"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.BeginListen(Microsoft.VisualBasic.Net.Abstract.DataRequestHandler,System.Int32,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>
        函数返回Socket的注销方法
      </summary>
      <param name="DataArrivalEventHandler">Public Delegate Function DataResponseHandler(str As String, RemotePort As Integer) As String</param>
      <param name="LocalPort"></param>
      <param name="exHandler"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.Run">
      <summary>
        This server waits for a connection and then uses  asychronous operations to
        accept the connection, get data from the connected client,
        echo that data back to the connected client.
        It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.Run(System.Net.IPEndPoint)">
      <summary>
        This server waits for a connection and then uses  asychronous operations to
        accept the connection, get data from the connected client,
        echo that data back to the connected client.
        It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.HandleRequest(System.Net.Sockets.Socket,Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        All the data has been read from the client. Display it on the console.
        Echo the data back to the client.
      </summary>
      <param name="handler"></param>
      <param name="requestData"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.Send(System.Net.Sockets.Socket,System.String)">
      <summary>
        Server reply the processing result of the request from the client.
      </summary>
      <param name="handler"></param>
      <param name="data"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.IsServerInternalException(System.String)">
      <summary>
        SERVER_INTERNAL_EXCEPTION，Server encounter an internal exception during processing
        the data request from the remote device.
        (判断是否服务器在处理客户端的请求的时候，发生了内部错误)
      </summary>
      <param name="replyData"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.disposedValue">
      <summary>
        退出监听线程所需要的
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket.Dispose">
      <summary>
        Stop the server socket listening threads.(终止服务器Socket监听线程)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TCPExtensions.Ping(System.Net.IPEndPoint,System.Int32)">
      <summary>
        -1标识Ping不通
      </summary>
      <param name="operationTimeOut">ms</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TCPExtensions.Ping(Microsoft.VisualBasic.Net.AsynInvoke,System.Int32)">
      <summary>
        -1 ping failure
      </summary>
      <param name="invoke"></param>
      <param name="timeout"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TCPExtensions.ConnectSocket(System.String,System.Int32)">
      <summary>
        假若不能成功的建立起连接的话，则会抛出错误
      </summary>
      <param name="server"></param>
      <param name="port"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TCPExtensions.GetFirstAvailablePort(System.Int32)">
      <summary>
        Get the first available TCP port on this local machine.
        (获取第一个可用的端口号，请注意，在高并发状态下可能会出现端口被占用的情况，
        所以这时候建议将<paramref name="BEGIN_PORT"/>设置为-1，则本函数将会尝试使用随机数来分配可用端口，从而避免一些系统崩溃的情况产生)
      </summary>
      <param name="BEGIN_PORT">Check the local port available from this port value.(从这个端口开始检测)</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TCPExtensions.PortIsUsed">
      <summary>
        获取操作系统已用的端口号
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.TCPExtensions.PortIsAvailable(System.Int32)">
      <summary>
        检查指定端口是否已用
      </summary>
      <param name="port"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Net.AsynInvoke">
      <summary>
        The server socket should returns some data string to this client or this client will stuck at the <see cref="M:Microsoft.VisualBasic.Net.AsynInvoke.SendMessage(Microsoft.VisualBasic.Net.Protocols.RequestStream)"></see> function.
        (服务器端<see cref="T:Microsoft.VisualBasic.Net.TcpSynchronizationServicesSocket"></see>必须要返回数据，否则本客户端会在<see cref="M:Microsoft.VisualBasic.Net.AsynInvoke.SendMessage(Microsoft.VisualBasic.Net.Protocols.RequestStream)"></see>函数位置一直处于等待的状态)
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.AsynInvoke.port">
      <summary>
        The port number for the remote device.
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.AsynInvoke.response">
      <summary>
        The response from the remote device.
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.AsynInvoke.connectDone">
      <summary>
        ' ManualResetEvent instances signal completion.
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Net.AsynInvoke.remoteEP">
      <summary>
        Remote End Point
      </summary>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Net.AsynInvoke.LocalIPAddress">
      <summary>
        Gets the IP address of this local machine.
        (获取本机对象的IP地址，请注意这个属性获取得到的仅仅是本机在局域网内的ip地址，假若需要获取得到公网IP地址，还需要外部服务器的帮助才行)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.#ctor(Microsoft.VisualBasic.Net.AsynInvoke,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>

      </summary>
      <param name="Client">Copy the TCP client connection profile data from this object.(从本客户端对象之中复制出连接配置参数以进行初始化操作)</param>
      <param name="ExceptionHandler"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.#ctor(System.String,System.Int32,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>

      </summary>
      <param name="remotePort"></param>
      <param name="ExceptionHandler">Public Delegate Sub ExceptionHandler(ex As Exception)</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.LocalConnection(System.Int32,Microsoft.VisualBasic.Net.Abstract.ExceptionHandler)">
      <summary>
        初始化一个在本机进行进程间通信的Socket对象
      </summary>
      <param name="LocalPort"></param>
      <param name="ExceptionHandler"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.OperationTimeOut(System.String)">
      <summary>
        判断服务器所返回来的数据是否为操作超时
      </summary>
      <param name="str"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.SendMessage(System.String,System.Int32,System.Action)">
      <summary>
        Returns the server reply.(假若操作超时的话，则会返回<see cref="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_REQUEST_TIMEOUT"></see>)
      </summary>
      <param name="Message"></param>
      <param name="OperationTimeOut">操作超时的时间长度，默认为30秒</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.SendMessage(Microsoft.VisualBasic.Net.Protocols.RequestStream,System.Int32,System.Action)">
      <summary>
        Returns the server reply.(假若操作超时的话，则会返回<see cref="P:Microsoft.VisualBasic.Net.Http.NetResponse.RFC_REQUEST_TIMEOUT"></see>，
        请注意，假若目标服务器启用了ssl加密服务的话，假若这个请求是明文数据，则服务器会直接拒绝请求返回<see cref="F:Microsoft.VisualBasic.Net.Http.HTTP_RFC.RFC_NO_CERT"/> 496错误代码，
        所以调用前请确保参数<paramref name="Message"/>已经使用证书加密)
      </summary>
      <param name="Message"></param>
      <param name="timeOut">操作超时的时间长度，默认为30秒</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.SendMessage(System.String)">
      <summary>
        This function returns the server reply for this request <paramref name="Message"></paramref>.
      </summary>
      <param name="Message">The client request to the server.</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.SendMessage(Microsoft.VisualBasic.Net.Protocols.RequestStream)">
      <summary>
        Send a request message to the remote server.
      </summary>
      <param name="Message"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.SendMessage(Microsoft.VisualBasic.Net.Protocols.RequestStream,Microsoft.VisualBasic.Net.SSL.Certificate,System.Boolean)">
      <summary>
        发送一段使用证书对象<paramref name="CA"/>进行数据加密操作的消息请求<paramref name="Message"/>
      </summary>
      <param name="Message"></param>
      <param name="CA"></param>
      <param name="isPublicToken"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.SendMessage(System.Byte[])">
      <summary>
        最底层的消息发送函数
      </summary>
      <param name="Message"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.Receive(System.Net.Sockets.Socket)">
      <summary>
        An exception of type '<see cref="T:System.Net.Sockets.SocketException"/>' occurred in System.dll but was not handled in user code
        Additional information: A request to send or receive data was disallowed because the socket is not connected and
        (when sending on a datagram socket using a sendto call) no address was supplied
      </summary>
      <param name="client"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Net.AsynInvoke.__send(System.Net.Sockets.Socket,System.Byte[])">
      <summary>
        ????
        An exception of type 'System.Net.Sockets.SocketException' occurred in System.dll but was not handled in user code
        Additional information: A request to send or receive data was disallowed because the socket is not connected and
        (when sending on a datagram socket using a sendto call) no address was supplied
      </summary>
      <param name="client"></param>
      <param name="byteData"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.IEnumerations.CreateDictionary``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        将目标集合对象转换为一个字典对象
      </summary>
      <typeparam name="T"></typeparam>
      <param name="Collection"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.IEnumerations.Takes``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)">
      <summary>
        这个函数假设参数<paramref name="source"/>之中是有重复的对象，则可以使用uniqueID数据提取出一个集合
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="uniqueId"></param>
      <param name="strict">是否大小写敏感，默认大小写敏感</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.IEnumerations.Takes``1(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0})">
      <summary>
        按照uniqueId列表来筛选出目标集合，这个函数是使用字典来进行查询操作的，故而效率会比较高
      </summary>
      <typeparam name="T"></typeparam>
      <param name="list">
        The list of ID value for <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key"/>
      </param>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.IEnumerations.Take``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)">
      <summary>
        使用<paramref name="uniqueId"/>唯一标识符从集合之中取出一个目标对象。
        小集合推荐使用这个函数，但是对于大型集合或者需要查询的次数非常多的话，则推荐使用字典操作来提升性能
        请注意这个函数会完全匹配字符串的，即大小写敏感
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="uniqueId"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.IEnumerations.ToDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="distinct">
        True: 这个参数会去处重复项
      </param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Tasks.Actor`2">
      <summary>
        This Actor class can be used to call a function which has one
        parameter, object (T) and returns the result, object (V). The
        result is returned in a delegate.
      </summary>
      <typeparam name="T">Input type</typeparam>
      <typeparam name="V">Output type</typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.Actor`2.State.parameter">
      <summary>
        This is the parameter which is passed to the function
        defined as job.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.Actor`2.State.result">
      <summary>
        This will be the response and will be sent back to the
        calling thread using the delegate (a).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Parallel.Tasks.Actor`2.State.job">
      <summary>
        Actual method to run.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.Actor`2.State.error">
      <summary>
        Capture any errors and send back to the calling thread.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.Actor`2.State.Run">
      <summary>
        Set as an internal types void so only the Actor class can
        invoke this method.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.IParallelTask.WaitForExit">
      <summary>
        这个函数会检查<see cref="P:Microsoft.VisualBasic.Parallel.Tasks.IParallelTask.TaskComplete"/>属性来判断任务是否执行完毕
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Tasks.IBackgroundTask`1">
      <summary>
        背景线程的任务抽象
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.__backgroundTask`1.Value">
      <summary>
        获取得到任务线程执行的输出结果
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.__backgroundTask`1.Abort">
      <summary>
        取消当前的任务的执行，在线程内部产生的异常可以在<see cref="P:Microsoft.VisualBasic.Parallel.Tasks.__backgroundTask`1.ExecuteException"/>获取得到
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Tasks.CallbackTask">
      <summary>
        When the task job complete, then the program will notify user code through callback function.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Tasks.TaskQueue`1">
      <summary>
        这个只有一条线程来执行
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.TaskQueue`1.Tasks">
      <summary>
        返回当前的任务池之中的任务数量
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.TaskQueue`1.#ctor">
      <summary>
        会单独启动一条新的线程来用来执行任务队列
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.TaskQueue`1.Join(System.Func{`0})">
      <summary>
        函数会被插入一个队列之中，之后线程会被阻塞在这里直到函数执行完毕，这个主要是用来控制服务器上面的任务并发的
        一般情况下不会使用这个方法，这个方法主要是控制服务器资源的利用程序的，当线程处于忙碌的状态的时候，
        当前线程会被一直阻塞，直到线程空闲
      </summary>
      <param name="handle"></param>
      <returns>假若本对象已经开始Dispose了，则为完成的任务都会返回Nothing</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.TaskQueue`1.Enqueue(System.Func{`0},System.Action{`0})">
      <summary>
        这个函数只会讲任务添加到队列之中，而不会阻塞线程
      </summary>
      <param name="handle"></param>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.TaskQueue`1.RunningTask">
      <summary>
        当这个属性为False的时候说明没有任务在执行，此时为空闲状态
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.TaskQueue`1.__taskQueueEXEC">
      <summary>
        有一条线程单独执行这个任务队列
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Tasks.AsyncHandle`1">
      <summary>
        Represents the status of an asynchronous operation.(背景线程加载数据)
      </summary>
      <typeparam name="TOut"></typeparam>
      <remarks>
        这个后台任务模块是为了更加方便的构建出匿名方法的调用过程，因为这个对象的
        工作原理是基于匿名方法的``BeginInvoke``函数来工作的。
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.AsyncHandle`1.Task">
      <summary>
        封装一个方法，该方法不具有参数，且返回由<typeparamref name="TOut"></typeparamref>参数指定的类型的值。
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.AsyncHandle`1.Handle">
      <summary>
        对后台任务的访问
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.AsyncHandle`1.IsCompleted">
      <summary>
        Gets a value that indicates whether the asynchronous operation has completed.
        (获取一个值，该值指示异步操作是否已完成。)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.AsyncHandle`1.#ctor(System.Func{`0})">
      <summary>
        Creates a new background task from a function handle.
      </summary>
      <param name="Task"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.AsyncHandle`1.Run">
      <summary>
        Start the background task thread.(启动后台背景线程)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.AsyncHandle`1.GetValue">
      <summary>
        Current thread will be blocked at here if the background task not finished.
        (没有完成的时候会一直在这里阻塞当前的线程)
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Tasks.UpdateThread">
      <summary>
        Running a specific <see cref="T:System.Action"/> in the background periodically.
        (比较适合用于在服务器上面执行周期性的计划任务)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.UpdateThread.Periods">
      <summary>
        Sleeps n **ms** interval
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.UpdateThread.ErrHandle">
      <summary>
        If this exception handler is null, then when the unhandled exception occurring,
        this thread object will throw the exception and then stop working.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.UpdateThread.Running">
      <summary>
        指示当前的这个任务处理对象是否处于运行状态
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.UpdateThread.Caller">
      <summary>
        The caller stack name
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.UpdateThread.#ctor(System.Int32,System.Action,System.String)">
      <summary>
        Running a specific action in the background periodically. The time unit of the parameter <paramref name="Periods"/> is ms or Ticks.
      </summary>
      <param name="Periods">ms for update thread sleeps</param>
      <param name="updates"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.UpdateThread.Start">
      <summary>
        运行这条线程，假若更新线程已经在运行了，则会自动忽略这次调用
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.UpdateThread.Stop">
      <summary>
        停止更新线程的运行
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.UpdateThread.GetTicks(System.Int32,System.Int32,System.Int32)">
      <summary>
        获取得到总的毫秒数
      </summary>
      <param name="hh"></param>
      <param name="mm"></param>
      <param name="ss%"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Tasks.Task`2">
      <summary>
        更加底层的线程模式，和LINQ相比不会受到CPU核心数目的限制
      </summary>
      <typeparam name="T">后台任务的执行参数</typeparam>
      <typeparam name="TOut">后台任务的执行结果</typeparam>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Tasks.Task`2.Value">
      <summary>
        假若任务已经完成，则会返回计算值，假若没有完成，则只会返回空值，假若想要在任何情况之下都会得到后台任务所执行的计算结果，请使用<see cref="M:Microsoft.VisualBasic.Parallel.Tasks.Task`2.GetValue"/>方法
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Tasks.Task`2.GetValue">
      <summary>
        假若后台任务还没有完成，则函数会一直阻塞在这里直到任务执行完毕，假若任务早已完成，则函数会立即返回数据
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Tasks.Task">
      <summary>
        这个是带有<see cref="E:Microsoft.VisualBasic.Parallel.Tasks.Task.TaskJobComplete"/>事件的任务对象
      </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Parallel.Tasks.Task.TaskJobComplete">
      <summary>
        当所请求的任务执行完毕之后触发
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Threads.ThreadPool">
      <summary>
        使用多条线程来执行任务队列，推荐在编写Web服务器的时候使用这个模块来执行任务
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Parallel.Threads.ThreadPool.__pendings">
      <summary>
        临时的句柄缓存
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Threads.ThreadPool.NumOfThreads">
      <summary>
        线程池之中的线程数量
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Threads.ThreadPool.WorkingThreads">
      <summary>
        返回当前正在处于工作状态的线程数量
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Threads.ThreadPool.ServerLoad">
      <summary>
        Returns the server load.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Threads.ThreadPool.FullCapacity">
      <summary>
        是否所有的线程都是处于工作状态的
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Threads.ThreadPool.GetStatus">
      <summary>
        获取当前的这个线程池对象的状态的摘要信息
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Threads.ThreadPool.RunTask(System.Action,System.Action{System.Int64})">
      <summary>
        使用线程池里面的空闲线程来执行任务
      </summary>
      <param name="task"></param>
      <param name="callback">回调函数里面的参数是任务的执行的时间长度</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Threads.ThreadPool.__taskInvoke.Run">
      <summary>
        不清楚是不是因为lambda有问题，所以导致计时器没有正常的工作，所以在这里使用内部类来工作
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Threads.ThreadPool.GetAvaliableThread">
      <summary>
        这个函数总是会返回一个线程对象的

        + 当有空闲的线程，会返回第一个空闲的线程
        + 当没有空闲的线程，则会返回任务队列最短的线程
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Threads.BatchTasks">
      <summary>
        Parallel batch task tool for processor
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Threads.BatchTasks.BatchTask``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{System.String},System.Int32,System.Int32)">
      <summary>
        当所需要进行计算的数据量比较大的时候，建议分块使用本函数生成多个进程进行批量计算以获得较好的计算效率
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="getCLI"></param>
      <param name="getExe"></param>
      <param name="numThreads">-1表示使用系统自动配置的参数，一次性提交所有的计算任务可能会是计算效率变得很低，所以需要使用这个参数来控制计算的线程数量</param>
      <param name="TimeInterval">默认的任务提交时间间隔是一秒钟提交一个新的计算任务</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Threads.BatchTasks.BatchTask``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Int32,System.Int32)">
      <summary>

      </summary>
      <typeparam name="TIn"></typeparam>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="getTask"></param>
      <param name="numThreads">可以在这里手动的控制任务的并发数，这个数值小于或者等于零则表示自动配置线程的数量，如果想要单线程，请将这个参数设置为1</param>
      <param name="TimeInterval"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Threads.BatchTasks.BatchTask``1(System.Func{``0}[],System.Int32,System.Int32,System.Double)">
      <summary>
        Using parallel linq that may stuck the program when a linq task partion wait a long time task to complete.
        By using this parallel function that you can avoid this problem from parallel linq, and also you can
        controls the task thread number manually by using this parallel task function.
        (由于LINQ是分片段来执行的，当某个片段有一个线程被卡住之后整个进程都会被卡住，所以执行大型的计算任务的时候效率不太好，
        使用这个并行化函数可以避免这个问题，同时也可以自己手动控制线程的并发数)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="actions">Tasks collection</param>
      <param name="numThreads">
        You can controls the parallel tasks number from this parameter, smaller or equals to ZERO means auto
        config the thread number, If want single thread, not parallel, set this value to 1, and positive
        value greater than 1 will makes the tasks parallel.
        (可以在这里手动的控制任务的并发数，这个数值小于或者等于零则表示自动配置线程的数量, 1为单线程)
      </param>
      <param name="TimeInterval">The task run loop sleep time, unit is **ms**</param>
      <param name="smart">
        ZERO or negative value will turn off this smart mode, default value is ZERO, mode was turn off.
        If this parameter value is set to any positive value, that means this smart mode will be turn on.
        then, if the CPU load is higher than the value of this parameter indicated, then no additional
        task thread would be added, if CPU load lower than this parameter value, then some additional
        task thread will be added for utilize the CPU resources and save the computing time.
        (假若开启smart模式的话，在CPU负载较高的时候会保持在限定的线程数量来执行批量任务，
        假若CPU的负载较低的话，则会开启超量的线程，以保持执行效率充分利用计算资源来节省总任务的执行时间
        任意正实数都将会开启smart模式
        小于等于零的数将不会开启，默认值为零，不开启)
      </param>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.ThreadQueue">
      <summary>
        任务线程队列
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Parallel.ThreadQueue.MyThread">
      <summary>
        Writer Thread ☺
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.ThreadQueue.MultiThreadSupport">
      <summary>
        If TRUE, the Writing process will be separated from the main thread.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Parallel.ThreadQueue.Queue">
      <summary>
        Just my queue
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Parallel.ThreadQueue.QSolverRunning">
      <summary>
        Is thread running?
        hum
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Parallel.ThreadQueue.dummy">
      <summary>
        lock
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ThreadQueue.AddToQueue(System.Action)">
      <summary>
        Add an Action to the queue.
      </summary>
      <param name="A">()=>{ .. }</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ThreadQueue.WaitQueue">
      <summary>
        Wait for all thread queue job done.(Needed if you are using multiThreaded queue)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ThreadQueue.exeQueue">
      <summary>
        Execute the queue list
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Linq.TaskPartitions">
      <summary>
        对大量的短时间的任务进行分区的操作是在这里完成的
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Linq.TaskPartitions.PartTokens(System.Int32,System.Int32)">
      <summary>
        根据任务总量计算出所需要的线程的数量
      </summary>
      <param name="source"></param>
      <param name="num_threads"></param>
      <returns></returns>
      <remarks>假设所有的任务都被平均的分配到每一个线程之上</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Linq.TaskPartitions.SplitIterator``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean)">
      <summary>
        Performance the partitioning operation on the input sequence.
        (请注意，这个函数适用于数量非常多的序列。对所输入的序列进行分区操作，<paramref name="parTokens"/>函数参数是每一个分区里面的元素的数量)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="parTokens">每一个分区之中的元素数量</param>
      <returns></returns>
      <remarks>
        对于数量较少的序列，可以使用<see cref="M:Microsoft.VisualBasic.Extensions.SplitIterator``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean)"/>进行分区操作，
        该函数使用数组的<see cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)"/>方法进行分区复制，效率较高

        由于本函数需要处理大量的数据，使用Array的方法会内存占用较厉害，所以在这里更改为List操作以降低内存的占用
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Linq.TaskPartitions.Partitioning``2(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,``1})">
      <summary>
        进行分区之后返回一个长时间的任务组合
      </summary>
      <typeparam name="T"></typeparam>
      <param name="parts">函数参数是每一个分区里面的元素的数量</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Linq.TaskPartitions.Partitioning``2(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,``1},System.Func{``0,System.Boolean})">
      <summary>
        进行分区之后返回一个长时间的任务组合
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>

    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Linq.TaskPartitions.__taskHelper`2">
      <summary>
        因为在上一层调用之中使用了并行化，所以在这里不能够使用并行化拓展了
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="out"></typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.Linq.LQuerySchedule">
      <summary>
        Parallel Linq query library for VisualBasic.
        (用于高效率执行批量查询操作和用于检测操作超时的工具对象，请注意，为了提高查询的工作效率，请尽量避免在查询操作之中生成新的临时对象
        并行版本的LINQ查询和原始的线程操作相比具有一些性能上面的局限性)
      </summary>
      <remarks>
        在使用``Parallel LINQ``的时候，请务必要注意不能够使用Let语句操作共享变量，因为排除死锁的开销比较大

        在设计并行任务的时候应该遵循的一些原则:

        1. 假若每一个任务之间都是相互独立的话，则才可以进行并行化调用
        2. 在当前程序域之中只能够通过线程的方式进行并行化，对于时间较短的任务而言，非并行化会比并行化更加有效率
        3. 但是对于这些短时间的任务，仍然可以将序列进行分区合并为一个大型的长时间任务来产生并行化
        4. 对于长时间的任务，可以直接使用并行化Linq拓展执行并行化

        这个模块主要是针对大量的短时间的任务序列的并行化的，用户可以在这里配置线程的数量自由的控制并行化的程度
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Linq.LQuerySchedule.CPU_NUMBER">
      <summary>
        Get the number of processors on the current machine.(获取当前的系统主机的CPU核心数)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Linq.LQuerySchedule.AutoConfig(System.Int32)">
      <summary>
        假如小于0，则认为是自动配置，0被认为是单线程，反之直接返回
      </summary>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.Linq.LQuerySchedule.Recommended_NUM_THREADS">
      <summary>
        The possible recommended threads of the linq based on you machine processors number, i'm not sure...
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Linq.LQuerySchedule.LQuery``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Int32)">
      <summary>
        将大量的短时间的任务进行分区，合并，然后再执行并行化，请注意，<paramref name="task"/>参数不能够使lambda表达式，否则会出现EntryNotFound的错误
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="TOut"></typeparam>
      <param name="inputs"></param>
      <param name="task"></param>
      <param name="parTokens">函数参数是每一个分区里面的元素的数量</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Linq.LQuerySchedule.LQuery``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,System.Boolean},System.Int32)">
      <summary>
        将大量的短时间的任务进行分区，合并，然后再执行并行化
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="TOut"></typeparam>
      <param name="inputs"></param>
      <param name="task"></param>
      <param name="where">Processing where test on the inputs</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.Linq.LQuerySchedule.LQuery``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Boolean},System.Int32)">
      <summary>
        将大量的短时间的任务进行分区，合并，然后再执行并行化
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="TOut"></typeparam>
      <param name="inputs"></param>
      <param name="task"></param>
      <param name="outWhere">Processing where test on the output</param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.GroupListNode`2.InitReads">
      <summary>
        由于<see cref="P:Microsoft.VisualBasic.Parallel.GroupListNode`2.Group"/>在分组之后的后续的操作的过程之中元素会发生改变，
        所以在这个属性之中存储了在初始化<see cref="P:Microsoft.VisualBasic.Parallel.GroupListNode`2.Group"/>列表的时候的原始的列表之中的元素的个数以满足一些其他的算法操作
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.GroupResult`2">
      <summary>
        分组操作的结果
      </summary>
      <typeparam name="T">Group的元素的类型</typeparam>
      <typeparam name="Itag">Group的Key的类型</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.GroupAPI.ParallelGroup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
        貌似使用LINQ进行Group操作的时候是没有并行化的，灰非常慢，则可以使用这个拓展函数来获取较好的性能
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="T_TAG"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.ServicesFolk">
      <summary>
        主服务和子服务之间的相互作用的特点是子服务不会知道主服务节点的数据接口，所有的交互都是通过子服务上面的一个模块来监听主服务来实现的
        当主服务有数据需要向子服务更新的时候，会主动发送数据请求至子服务节点
      </summary>
      <remarks>当前的用户规模还比较小这里仅仅是实现了本地的调用，后面考虑到业务吞吐量的问题，会将服务的调用分开到两台物理主机之上</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ServicesFolk.Folk(System.String,System.String@,System.Diagnostics.Process@)">
      <summary>
        函数返回子进程的交互数据通信的端口号
      </summary>
      <param name="assm"></param>
      <param name="CLI">命令行参数字符串，可以在这里加入一些其他的自定义数据</param>
      <returns>函数返回子服务的交互端口</returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Parallel.ServicesFolk.__getChildPortal.addArgs">
      <summary>
        所返回来的额外的参数信息
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ServicesFolk.ReturnPortal(Microsoft.VisualBasic.CommandLine.CommandLine,System.Int32,System.String)">
      <summary>
        子服务向服务主节点返回端口号数据，这个方法需要要在子服务上面的服务程序启动之后再调用
      </summary>
      <param name="CLI"></param>
      <param name="Port"></param>
      <param name="addArgs">额外返回的参数信息</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.ParallelLoading">
      <summary>

      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Parallel.ParallelLoading.LoadEntry.MethodEntryPoint">
      <summary>
        必须满足接口类型： Function(path As String) As T
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ParallelLoading.Load``1(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
        当目标数据集非常的大的时候，在单个应用程序里面进行加载已经回非常缓慢了，
        则这个时候可以使用这个函数将数据的加载任务分配到多个子进程之中以提高加载的时候的CPU的利用效率
      </summary>
      <typeparam name="T"></typeparam>
      <param name="sourceURL"></param>
      <returns></returns>
      <remarks>
        函数会自动从<typeparamref name="T"/>
      </remarks>泛型类型之中解析出加载的函数
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ParallelLoading.Load``1(System.String,System.String)">
      <summary>
        通过与并行进程进行内存共享来传输加载完毕的数据
      </summary>
      <typeparam name="T"></typeparam>
      <param name="url"></param>
      <param name="Process"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ParallelLoading.SendMessageAPI(System.Int32)">
      <summary>
        动态编译的加载进程的调用API来向主进程返回消息
      </summary>
      <param name="Port"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ParallelLoading.DynamicsVBCTask(Microsoft.VisualBasic.Parallel.ParallelLoading.LoadEntry)">
      <summary>
        动态编译
      </summary>
      <param name="LoadEntry"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Parallel.ParallelExtension">
      <summary>
        Parallel based on the threading
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ParallelExtension.RunTask(System.Threading.ThreadStart)">
      <summary>
        Start a new thread and then returns the background thread task handle.
      </summary>
      <param name="start"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.ParallelExtension.AsyncTask(System.Threading.ThreadStart)">
      <summary>
        运行一个后台任务
      </summary>
      <param name="start"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.TimeOutAPI.OperationTimeOut``2(System.Func{``0,``1},``0,``1@,System.Double)">
      <summary>
        The returns value of TRUE represent of the target operation has been time out.(返回真，表示操作超时)
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="TOut"></typeparam>
      <param name="handle"></param>
      <param name="Out"></param>
      <param name="TimeOut">The time unit of this parameter is second.(单位为秒)</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.TimeOutAPI.OperationTimeOut``1(System.Func{``0},``0@,System.Double)">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <param name="handle"></param>
      <param name="Out"></param>
      <param name="TimeOut">The time unit of this parameter is second.(单位为秒)</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.TimeOutAPI.OperationTimeOut(System.Action,System.Double)">
      <summary>

      </summary>
      <param name="handle"></param>
      <param name="TimeOut">The time unit of this parameter is second.(单位为秒)</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Parallel.InvokesHelper.Invoke(System.Action[],System.Int32)">
      <summary>

      </summary>
      <param name="tasks"></param>
      <param name="numOfThreads">同时执行的句柄的数目</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.PipelineCLI">
      <summary>
        a | b - 管道命令在读写方面更加适合于文本数据，由于省去了IO的时间，故而效率较高
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.PipelineCLI.Start(System.IO.Stream,System.String,System.String)">
      <summary>
        使用管道的方法启动下游的应用程序
      </summary>
      <param name="app"></param>
      <param name="args"></param>
      <remarks>
        http://stackoverflow.com/questions/30546522/how-to-use-a-pipe-between-two-processes-in-process-start

        let the OS do it. ``StartInfo.FileName = "cmd"`` then prepend ``executablepath`` to params so it looks
        the way you would enter it in a command window;
        ``StartInfo.Arguments = params`` then start the process

        – Plutonix May 30 '15 at 15:13
      </remarks>

    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.InnerQueue">
      <summary>
        Task action Queue for terminal QUEUE SOLVER 🙉
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.InnerQueue.AddToQueue(System.Action)">
      <summary>
        添加终端输出的任务到任务队列之中
      </summary>
      <param name="task"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.InnerQueue.WaitQueue">
      <summary>
        Wait for all thread queue job done.(Needed if you are using multiThreaded queue)
      </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Terminal.TerminalEvents.Resize">
      <summary>
        Terminal resize event for [<see cref="P:System.Console.WindowWidth"/>, <see cref="P:System.Console.WindowHeight"/>]
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.AbstractBar.PrintMessage(System.String)">
      <summary>
        Prints a simple message
      </summary>
      <param name="msg">Message to print</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.AnimatedBar.Step">
      <summary>
        prints the character found in the animation according to the current index
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.ProgressBar.ColorTheme">
      <summary>
        The <see cref="T:System.ConsoleColor"/> theme for the <see cref="T:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressBar"/>
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.ProgressBar.ColorTheme.IsEmpty">
      <summary>
        Test if all of the property value is equals to ZERO(<see cref="F:System.ConsoleColor.Black"/>).
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ColorTheme.DefaultTheme">
      <summary>
        Default value for optional parameter
      </summary>
      <returns></returns>
      <remarks>
        ###### 2017-11-5
        This property will cause bug in reflection.

        ###### 2017-11-6
        Change from property to function to avoid bug caused application crashed
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ColorTheme.Default">
      <summary>
        The default color theme values
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressBar">
      <summary>
        Progress bar for the <see cref="T:System.Console"/> Screen.
      </summary>
      <remarks>
        http://www.cnblogs.com/masonlu/p/4668232.html
      </remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressBar.current">
      <summary>
        The current progress percentage: [0, 100]
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressBar.#ctor(System.String,System.Int32,System.Boolean,Microsoft.VisualBasic.Terminal.ProgressBar.ColorTheme)">
      <summary>
        Create a console progress bar object with custom configuration.
      </summary>
      <param name="title">The title of the task which will takes long time for running.</param>
      <param name="Y">The row position number of the progress bar.</param>
      <param name="CLS">Clear the console screen?</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressBar.#ctor(System.String)">
      <summary>
        Create a console progress bar with default theme color <see cref="M:Microsoft.VisualBasic.Terminal.ProgressBar.ColorTheme.DefaultTheme"/>
        (在当前位置之后设置进度条，这个构造函数不会清除整个终端屏幕)
      </summary>
      <param name="title$">The task title</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressBar.SetToEchoLine">
      <summary>
        将终端的输出位置放置到详细信息的下一行
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressBar.ElapsedMilliseconds">
      <summary>
        获取当前实例测量得出的总运行时间（以毫秒为单位）。
      </summary>
      <returns>
        一个只读长整型，表示当前实例测量得出的总毫秒数。
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressBar.__tick(System.Int32,System.String)">
      <summary>
        更新进度条的当前状态信息
      </summary>
      <param name="p%"></param>
      <param name="details$"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressBar.SetProgress(System.Int32,System.String)">
      <summary>
        <paramref name="percent"/>是进度条的百分比
      </summary>
      <param name="percent">Percentage, 假设是从p到current</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressProvider.Target">
      <summary>
        整个工作的总的tick数
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressProvider.Current">
      <summary>
        当前已经完成的tick数
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressProvider.#ctor(System.Int32)">
      <summary>
        生成进度条的百分比值
      </summary>
      <param name="total"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressProvider.Step">
      <summary>
        返回来的百分比小数，还需要乘以100才能得到进度
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressProvider.StepProgress">
      <summary>
        百分比进度，不需要再乘以100了
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.ProgressProvider.ETA(System.Double,System.Double,System.Int64)">
      <summary>

      </summary>
      <param name="previous#">百分比</param>
      <param name="cur#">百分比</param>
      <param name="Elapsed#">当前的这个百分比差所经历过的时间</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.Program.Run(Microsoft.VisualBasic.Terminal.ProgressBar.AbstractBar,System.Int32,System.Int32)">
      <summary>

      </summary>
      <param name="bar"></param>
      <param name="wait">Sleep time of the thread</param>
      <param name="[end]">Ends at this iteration</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.SwayBar.BlankPointer">
      <summary>
        sets the atribute blankPointer with a empty string the same length that the pointer
      </summary>
      <returns>A string filled with space characters</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.SwayBar.ClearBar">
      <summary>
        reset the bar to its original state
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.SwayBar.PlacePointer(System.Int32,System.Int32)">
      <summary>
        remove the previous pointer and place it in a new possition
      </summary>
      <param name="start">start index</param>
      <param name="end">end index</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.ProgressBar.SwayBar.Step">
      <summary>
        prints the progress bar acorrding to pointers and current direction
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Utility.EventProc">
      <summary>
        Generates the task progress for the console output.(处理任务进度)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Utility.EventProc.Capacity">
      <summary>
        The total <see cref="M:Microsoft.VisualBasic.Terminal.Utility.EventProc.Tick"/>
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.EventProc.#ctor(System.Int32,System.String,System.IO.StreamWriter)">
      <summary>

      </summary>
      <param name="n"></param>
      <param name="tag"></param>
      <param name="out">
        Default is <see cref="T:System.Console"/>
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.EventProc.Tick">
      <summary>
        会自动输出进度的
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.Utility.EventProc.percentage">
      <summary>
        Current progress percentage.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.Utility.EventProc.preElapsedMilliseconds">
      <summary>
        Previous <see cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds"/>
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.EventProc.ToString">
      <summary>
        Generates progress output
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Utility.Constants">
      <summary>
        Constants used with PInvoke methods
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.Utility.Constants.KEY_EVENT">
      <summary>
        EventType flags.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.Utility.Constants.MOUSE_EVENT">
      <summary>
        Event contains key event record
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.Utility.Constants.WINDOW_BUFFER_SIZE_EVENT">
      <summary>
        Event contains mouse event record
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.Utility.Constants.MENU_EVENT">
      <summary>
        Event contains window change event record
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.Utility.Constants.FOCUS_EVENT">
      <summary>
        Event contains menu event record
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.Utility.Constants.INVALID_HANDLE_VALUE">
      <summary>
        Event contains focus change
        Returned by GetStdHandle when an error occurs
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Utility.uCharUnion">
      <summary>
        ' Struct uChar is meant to support the Windows Console API's uChar union.
        ' Unions do not exist in the pure .NET world. We have to use the regular
        ' C# struct and the StructLayout and FieldOffset Attributes to preserve
        ' the memory layout of the unmanaged union.
        '
        ' We specify the "LayoutKind.Explicit" value for the StructLayout attribute
        ' to specify that every field of the struct uChar is marked with a byte offset.
        '
        ' This byte offset is specified by the FieldOffsetAttribute and it indicates
        ' the number of bytes between the beginning of the struct in memory and the
        ' beginning of the field.
        '
        ' As you can see in the struct uChar (below), the fields "UnicodeChar"
        ' and "AsciiChar" have been marked as being of offset 0. This is the only
        ' way that an unmanaged C/C++ union can be represented in C#.
        '
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Utility.KEY_EVENT_RECORD">
      <summary>
        ' The struct KEY_EVENT_RECORD is used to report keyboard input events
        ' in a console INPUT_RECORD structure.
        '
        ' Internally, it uses the structure uChar which is treated as a union
        ' in the unmanaged world.
        '
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Utility.ConsolePasswordInput">
      <summary>
        Summary description for ConsolePasswordInput.
      </summary>
      <remarks>
        .NET Console Password Input By Masking Keyed-In Characters
        http://www.codeproject.com/Articles/8110/NET-Console-Password-Input-By-Masking-Keyed-In-Ch
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.ConsolePasswordInput.PasswordInput(System.String@,System.Int32)">
      <summary>

      </summary>
      <param name="refPasswordToBuild"></param>
      <param name="iMaxNumberOfCharactersSet">The password max length limits.</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.ManualPages.ShowManual(System.Int32,System.Int32)">
      <summary>
        使用回车键或者箭头下显示下一行，字母q或者ESC键退出Manual
      </summary>
      <param name="initLines">最开始显示的行数</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.ManualPages.FromFile(System.String)">
      <summary>
        从文本文件之中加载Manual数据
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Utility.IndexedManual">
      <summary>
        有显示标题的
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.IndexedManual.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>
        与<see cref="T:Microsoft.VisualBasic.Terminal.Utility.ManualPages"></see>所不同的是，本对象之中的这个字符串数组表示的是一页帮助，而不是一行帮助信息
      </summary>
      <param name="Pages"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.IndexedManual.ShowManual(System.Int32,System.Int32)">
      <summary>
        使用[Enter][Down_arrow][pagedown]翻下一页[Up_arrow][Pageup]翻上一页，[q]或者[esc]结束，[home]第一页[end]最后一页
      </summary>
      <param name="initLines">无用的参数</param>
      <param name="printLines">无用的参数</param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.IndexedManual.PrintPrompted(System.Int32,System.Int32,System.Int32)">
      <summary>

      </summary>
      <param name="p">Current page index</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Utility.CBusyIndicator">
      <summary>
        The console BusyIndicator
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Utility.CBusyIndicator.Start(System.Int32)">
      <summary>
        运行进度条
      </summary>
      <param name="Ticks">The total ticking counts of the indicator, Unit is [second].</param>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Helpers">
      <summary>
        Console helper. http://blogs.microsoft.co.il/blogs/pavely/archive/2009/07/23/changing-console-fonts.aspx
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Helpers.ConsoleFont">
      <summary>
        http://blogs.microsoft.co.il/blogs/pavely/archive/2009/07/23/changing-console-fonts.aspx
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.xConsole">
      <summary>
        Allows you to color and animate the console. ~ overpowered.it ~ TheTrigger - 💸
      </summary>
      <remarks>http://www.codeproject.com/Tips/626856/xConsole-Project</remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.xConsole.CoolWriteSettings.CoolWriting">
      <summary>
        Gradual typing the output into console
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.xConsole.CoolWriteSettings.CoolWritingDelay">
      <summary>
        Write speed
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.xConsole.CoolWriteSettings.CWRDDelay">
      <summary>
        Set the delay when write a new line or dots. (Default = 200).
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.CoolWrite(System.Object)">
      <summary>
        Gradual output animation 👍👍
      </summary>
      <param name="obj">The object to convert</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.CoolWrite(System.String,System.Object[])">
      <summary>
        Gradual output animation 👍👍
      </summary>
      <param name="format">The input string</param>
      <param name="args"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.CoolWriteLine(System.String,System.Object[])">
      <summary>
        Gradual output animation
      </summary>
      <param name="format">The input string</param>
      <param name="args">Arguments</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.WriteLine">
      <summary>
        Allows you to write in the console-output with custom colors, followed by the current line terminator
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.WriteLine(System.Object)">
      <summary>
        Allows you to write in the console-output with custom colors, followed by the current line terminator
      </summary>
      <param name="obj">The object to convert</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.WriteLine(System.String,System.Object[])">
      <summary>
        Allows you to write in the console-output with custom colors, followed by the current line terminator
      </summary>
      <param name="format">The input string</param>
      <param name="args">Arguments</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Write(System.String,System.Object[])">
      <summary>
        Allows you to write in the console-output with custom colors
      </summary>
      <param name="format">The input string</param>
      <param name="args">Arguments</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Implode(Microsoft.VisualBasic.Language.List{System.String},System.String,System.Int32)">
      <summary>
        (php-like) Implode function
      </summary>
      <param name="args">The list input</param>
      <param name="delimiter">Delimiter</param>
      <param name="start">Index offset</param>
      <returns>Imploded string</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Implode(Microsoft.VisualBasic.Language.List{System.String},System.Int32)">
      <summary>
        (php-like) Implode a List of strings
      </summary>
      <param name="args">The list input</param>
      <param name="start">Index offset</param>
      <returns>Imploded string</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Wait(System.Int32)">
      <summary>
        Just wait. in milliseconds
      </summary>
      <param name="time"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.RestoreColors">
      <summary>
        Restore default colors
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Credits">
      <summary>
        Show credits
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.ReadLine(System.Boolean)">
      <summary>
        Read the line, then parse it.
      </summary>
      <param name="ClearInput">Clear the buffer input</param>
      <returns>Return a List of strings</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.ClearInput(System.Boolean)">
      <summary>
        Give back a ConsoleKeyInfo list
      </summary>
      <param name="Return"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.ClearInput">
      <summary>
        Clear the user input in stack
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.ParseLine(System.String)">
      <summary>
        Parse the input string
      </summary>
      <param name="s">Input string</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.ReadKeys(System.Boolean)">
      <summary>
        Read EACH keys from the buffer input (visible and hidden chars)
      </summary>
      <param name="ClearInput">Clear the buffer input</param>
      <returns>string with all chars</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.getColor(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})">
      <summary>
        Convert input to color
      </summary>
      <param name="s">Input string</param>
      <returns>👽👽👽👾</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Print(System.String)">
      <summary>
        The Parser
      </summary>
      <param name="input">Input string</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.xConsole.Comparer">
      <summary>
        This can compute the input then return back the most appropriate word.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.Comparer.Word">
      <summary>
        This is the word to find
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.Comparer.Description">
      <summary>
        Descrizione
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.Comparer.Points">
      <summary>
        Init to 0!
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Comparer.#ctor(System.String,System.Int32)">
      <summary>
        Initliaze a new instance
      </summary>
      <param name="w">The word to find</param>
      <param name="p">It's should be 0</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Comparer.#ctor(System.String)">
      <summary>
        Initliaze a new instance
      </summary>
      <param name="w">The word to find</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Comparer.#ctor(System.String,System.String)">
      <summary>
        Initliaze a new instance
      </summary>
      <param name="w">The word to find</param>
      <param name="desc">Description (do nothing)</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Comparer.Find(System.String,Microsoft.VisualBasic.Language.List{Microsoft.VisualBasic.Terminal.xConsole.Comparer}@)">
      <summary>
        Find a word from an input abbreviation (es n > name)
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.xConsole.Spinner">
      <summary>
        A list of spinners for your console ❤
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.Spinner.Spinners">
      <summary>
        List of available spinners (you can add new)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.Spinner.inLoop">
      <summary>
        looplooplooplooplooplooplooplooplooploop[...]
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.Spinner.SpinText">
      <summary>
        The base string for spinning. {0} will display the spinner. COLOR is SUPPORTED! 🆒
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Spinner.#ctor(System.Int32,System.String)">
      <summary>
        Initialize the spinner
      </summary>
      <param name="i">Index of the spinner to use</param>
      <param name="txt">Base string. `{0} show the spinner`</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Spinner.#ctor(System.Char[])">
      <summary>
        Initialize a custom spinner
      </summary>
      <param name="spinner">Set a custom spinner, no size limit.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Spinner.Break">
      <summary>
        Breaks the spinner
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.Spinner.Turn(System.Int32)">
      <summary>
        Turn the spin!
      </summary>
      <param name="time">Waiting time. Default 130 ms</param>
      <returns>False if it has been stopped</returns>
      <example>while(spinner.Turn());</example>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.ListFonts">
      <summary>
        Show list of fonts
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.SetFont(System.UInt32)">
      <summary>
        Change console font
      </summary>
      <param name="i"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.SetWindowPos(System.Int32,System.Int32)">
      <summary>
        Set new window position
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.MyASM">
      <summary>
        My ASM FILE
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.RDN">
      <summary>
        Random number Generator
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.FONT_COLOR">
      <summary>
        This value is used when restoring the colors of the console.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.BACKGROUND_COLOR">
      <summary>
        This value is used when restoring the colors of the console.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.NEW_LINE">
      <summary>
        Default line terminator
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.CheckForUpdatesEnabled">
      <summary>
        Check for updates every 7days. False to disable. (Default = true);
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.xConsole.ClearColorsAtEnd">
      <summary>
        Clear colors automatically at the end of each Writeline. (Default = false);
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.ClosestConsoleColor(System.Byte,System.Byte,System.Byte)">
      <summary>
        Convert rgb color to ConsoleColor. From stackoverflow
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.RetrieveLinkerTimestamp">
      <summary>
        Linker Timestamp
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.xConsole.ConvertHexStringToByteArray(System.String)">
      <summary>
        Convert String to byte array
      </summary>
      <param name="hexString"></param>
      <returns></returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Terminal.InteractiveDevice.NewOutputMessage">
      <summary>

      </summary>
      <param name="s"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.InteractiveDevice.#ctor(System.String)">
      <summary>

      </summary>
      <param name="HistoryFile">历史数据文件的存放位置，假若为空，则使用默认文件路径</param>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.InteractiveDevice.HistoryCallerStack">
      <summary>
        ReadLine函数的递归返回值
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.InteractiveDevice.Save(System.String,System.Text.Encoding)">
      <summary>
        保存历史数据
      </summary>
      <param name="Path"></param>
      <param name="encoding"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.HistoryStacks.p">
      <summary>
        指向<see cref="F:Microsoft.VisualBasic.Terminal.HistoryStacks._historyList"></see>
      </summary>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.Terminal">
      <summary>
        Represents the standard input, output, and error streams for console applications. 交互式的命令行终端
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Beep">
      <summary>
        Plays the sound of a beep through the console speaker.
      </summary>
      <remarks></remarks>
      <exception cref="T:System.Security.HostProtectionException">System.Security.HostProtectionException: This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Beep(System.Int32,System.Int32)">
      <summary>
        Plays the sound of a beep of a specified frequency and duration through the console speaker.
      </summary>
      <param name="frequency">The frequency of the beep, ranging from 37 to 32767 hertz.</param>
      <param name="duration">The duration of the beep measured in milliseconds.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">frequency is less than 37 or more than 32767 hertz.-or-duration is less than or equal to zero.</exception>
      <exception cref="T:System.Security.HostProtectionException">This method was executed on a server, such as SQL Server, that does not permit access to the console.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Clear">
      <summary>
        Clears the console buffer and corresponding console window of display information.
      </summary>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        Copies a specified source area of the screen buffer to a specified destination area.
      </summary>
      <param name="sourceLeft">The leftmost column of the source area.</param>
      <param name="sourceTop">The topmost row of the source area.</param>
      <param name="sourceWidth">The number of columns in the source area.</param>
      <param name="sourceHeight">The number of rows in the source area.</param>
      <param name="targetLeft">The leftmost column of the destination area.</param>
      <param name="targetTop">The topmost row of the destination area.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the parameters is less than zero.-or- sourceLeft or targetLeft is greater than or equal to System.Console.BufferWidth.-or- sourceTop or targetTop is greater than or equal to System.Console.BufferHeight.-or- sourceTop + sourceHeight is greater than or equal to System.Console.BufferHeight.-or- sourceLeft + sourceWidth is greater than or equal to System.Console.BufferWidth.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
      <summary>
        Copies a specified source area of the screen buffer to a specified destination area.
      </summary>
      <param name="sourceLeft">The leftmost column of the source area.</param>
      <param name="sourceTop">The topmost row of the source area.</param>
      <param name="sourceWidth">The number of columns in the source area.</param>
      <param name="sourceHeight">The number of rows in the source area.</param>
      <param name="targetLeft">The leftmost column of the destination area.</param>
      <param name="targetTop">The topmost row of the destination area.</param>
      <param name="sourceChar">The character used to fill the source area.</param>
      <param name="sourceForeColor">The foreground color used to fill the source area.</param>
      <param name="sourceBackColor">The background color used to fill the source area.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the parameters is less than zero.-or- sourceLeft or targetLeft is greater than or equal to System.Console.BufferWidth.-or- sourceTop or targetTop is greater than or equal to System.Console.BufferHeight.-or- sourceTop + sourceHeight is greater than or equal to System.Console.BufferHeight.-or- sourceLeft + sourceWidth is greater than or equal to System.Console.BufferWidth.</exception>
      <exception cref="T:System.ArgumentException">One or both of the color parameters is not a member of the System.ConsoleColor enumeration.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.ResetColor">
      <summary>
        Sets the foreground and background console colors to their defaults.
      </summary>
      <remarks></remarks>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.SetBufferSize(System.Int32,System.Int32)">
      <summary>
        Sets the height and width of the screen buffer area to the specified values.
      </summary>
      <param name="width">The width of the buffer area measured in columns.</param>
      <param name="height">The height of the buffer area measured in rows.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">height or width is less than or equal to zero.-or- height or width is greater than or equal to System.Int16.MaxValue.-or- width is less than System.Console.WindowLeft + System.Console.WindowWidth.-or- height is less than System.Console.WindowTop + System.Console.WindowHeight.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.SetCursorPosition(System.Int32,System.Int32)">
      <summary>
        Sets the position of the cursor.
      </summary>
      <param name="left">The column position of the cursor.</param>
      <param name="top">The row position of the cursor.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">left or top is less than zero.-or- left is greater than or equal to System.Console.BufferWidth.-or- top is greater than or equal to System.Console.BufferHeight.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.SetError(System.IO.TextWriter)">
      <summary>
        Sets the System.Console.Error property to the specified System.IO.TextWriter object.
      </summary>
      <param name="newError">A stream that is the new standard error output.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentNullException">newError is null.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.SetIn(System.IO.TextReader)">
      <summary>
        Sets the System.Console.In property to the specified System.IO.TextReader object.
      </summary>
      <param name="newIn">A stream that is the new standard input.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentNullException">newIn is null.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.SetOut(System.IO.TextWriter)">
      <summary>
        Sets the System.Console.Out property to the specified System.IO.TextWriter object.
      </summary>
      <param name="newOut">A stream that is the new standard output.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentNullException">newOut is null.</exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.SetWindowPosition(System.Int32,System.Int32)">
      <summary>
        Sets the position of the console window relative to the screen buffer.
      </summary>
      <param name="left">The column position of the upper left corner of the console window.</param>
      <param name="top">The row position of the upper left corner of the console window.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">left or top is less than zero.-or- left + System.Console.WindowWidth is greater than System.Console.BufferWidth.-or- top + System.Console.WindowHeight is greater than System.Console.BufferHeight.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.SetWindowSize(System.Int32,System.Int32)">
      <summary>
        Sets the height and width of the console window to the specified values.
      </summary>
      <param name="width">The width of the console window measured in columns.</param>
      <param name="height">The height of the console window measured in rows.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">width or height is less than or equal to zero.-or- width plus System.Console.WindowLeft or height plus System.Console.WindowTop is greater than or equal to System.Int16.MaxValue. -or-width or height is greater than the largest possible window width or height for the current screen resolution and console font.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Boolean)">
      <summary>
        Writes the text representation of the specified Boolean value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Char[])">
      <summary>
        Writes the specified array of Unicode characters to the standard output stream.
      </summary>
      <param name="buffer">A Unicode character array.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Char[],System.Int32,System.Int32)">
      <summary>
        Writes the specified subarray of Unicode characters to the standard output stream.
      </summary>
      <param name="buffer">An array of Unicode characters.</param>
      <param name="index">The starting position in buffer.</param>
      <param name="count">The number of characters to write.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">index or count is less than zero.</exception>
      <exception cref="T:System.ArgumentException">index plus count specify a position that is not within buffer.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Char)">
      <summary>
        Writes the specified Unicode character value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Decimal)">
      <summary>
        Writes the text representation of the specified System.Decimal value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Double)">
      <summary>
        Writes the text representation of the specified double-precision floating-point value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Int32)">
      <summary>
        Writes the text representation of the specified 32-bit signed integer value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Int64)">
      <summary>
        Writes the text representation of the specified 64-bit signed integer value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Object)">
      <summary>
        Writes the text representation of the specified object to the standard output stream.
      </summary>
      <param name="value">The value to write, or null.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.Single)">
      <summary>
        Writes the text representation of the specified single-precision floating-point value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.String)">
      <summary>
        Writes the specified string value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.String,System.Object)">
      <summary>
        Writes the text representation of the specified object to the standard output stream using the specified format information.
      </summary>
      <param name="format">A composite format string (see Remarks).</param>
      <param name="arg0">An object to write using format.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">format is null.</exception>
      <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.String,System.Object,System.Object)">
      <summary>
        Writes the text representation of the specified objects to the standard output stream using the specified format information.
      </summary>
      <param name="format">A composite format string (see Remarks).</param>
      <param name="arg0">The first object to write using format.</param>
      <param name="arg1">The second object to write using format.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">format is null.</exception>
      <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>
        Writes the text representation of the specified objects to the standard output stream using the specified format information.
      </summary>
      <param name="format">A composite format string (see Remarks).</param>
      <param name="arg0">The first object to write using format.</param>
      <param name="arg1">The second object to write using format.</param>
      <param name="arg2">The third object to write using format.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">format is null.</exception>
      <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.String,System.Object[])">
      <summary>
        Writes the text representation of the specified array of objects to the standard output stream using the specified format information.
      </summary>
      <param name="format">A composite format string (see Remarks).</param>
      <param name="arg">An array of objects to write using format.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
      <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.String,System.String[])">
      <summary>
        Writes the text representation of the specified array of objects to the standard output stream using the specified format information.
      </summary>
      <param name="format">A composite format string (see Remarks).</param>
      <param name="args">An array of objects to write using format.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
      <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.UInt32)">
      <summary>
        Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Write(System.UInt64)">
      <summary>
        Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine">
      <summary>
        Writes the current line terminator to the standard output stream.
      </summary>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Boolean)">
      <summary>
        Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Char[])">
      <summary>
        Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="buffer">A Unicode character array.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>
        Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="buffer">An array of Unicode characters.</param>
      <param name="index">The starting position in buffer.</param>
      <param name="count">The number of characters to write.</param>
      <remarks></remarks>
      <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">index or count is less than zero.</exception>
      <exception cref="T:System.ArgumentException">index plus count specify a position that is not within buffer.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Char)">
      <summary>
        Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Decimal)">
      <summary>
        Writes the text representation of the specified System.Decimal value, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Double)">
      <summary>
        Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Int32)">
      <summary>
        Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Int64)">
      <summary>
        Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Object)">
      <summary>
        Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.Single)">
      <summary>
        Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.String)">
      <summary>
        Writes the specified string value, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.String,System.Object)">
      <summary>
        Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.
      </summary>
      <param name="format">A composite format string (see Remarks).</param>
      <param name="arg0">An object to write using format.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">format is null.</exception>
      <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.String,System.Object,System.Object)">
      <summary>
        Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.
      </summary>
      <param name="format">A composite format string (see Remarks).</param>
      <param name="arg0">The first object to write using format.</param>
      <param name="arg1">The second object to write using format.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">format is null.</exception>
      <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>
        Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.
      </summary>
      <param name="format">A composite format string (see Remarks).</param>
      <param name="arg0">The first object to write using format.</param>
      <param name="arg1">The second object to write using format.</param>
      <param name="arg2">The third object to write using format.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">format is null.</exception>
      <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.String,System.Object[])">
      <summary>
        Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.
      </summary>
      <param name="format">A composite format string (see Remarks).</param>
      <param name="arg">An array of objects to write using format.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
      <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.UInt32)">
      <summary>
        Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.WriteLine(System.UInt64)">
      <summary>
        Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.
      </summary>
      <param name="value">The value to write.</param>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.OpenStandardError">
      <summary>
        Acquires the standard error stream.
      </summary>
      <returns>The standard error stream.</returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.OpenStandardError(System.Int32)">
      <summary>
        Acquires the standard error stream, which is set to a specified buffer size.
      </summary>
      <param name="bufferSize">The internal stream buffer size.</param>
      <returns>The standard error stream.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is less than or equal to zero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.OpenStandardInput">
      <summary>
        Acquires the standard input stream.
      </summary>
      <returns>The standard input stream.</returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.OpenStandardInput(System.Int32)">
      <summary>
        Acquires the standard input stream, which is set to a specified buffer size.
      </summary>
      <param name="bufferSize">The internal stream buffer size.</param>
      <returns>The standard input stream.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is less than or equal to zero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.OpenStandardOutput">
      <summary>
        Acquires the standard output stream.
      </summary>
      <returns>The standard output stream.</returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.OpenStandardOutput(System.Int32)">
      <summary>
        Acquires the standard output stream, which is set to a specified buffer size.
      </summary>
      <param name="bufferSize">The internal stream buffer size.</param>
      <returns>The standard output stream.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is less than or equal to zero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.Read">
      <summary>
        Reads the next character from the standard input stream.
      </summary>
      <returns>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</returns>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.ReadKey">
      <summary>
        Obtains the next character or function key pressed by the user. The pressed key is displayed in the console window.
      </summary>
      <returns>A System.ConsoleKeyInfo object that describes the System.ConsoleKey constant and Unicode character, if any, that correspond to the pressed console key. The System.ConsoleKeyInfo object also describes, in a bitwise combination of System.ConsoleModifiers values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</returns>
      <remarks></remarks>
      <exception cref="T:System.InvalidOperationException">The System.Console.In property is redirected from some stream other than the console.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.ReadKey(System.Boolean)">
      <summary>
        Obtains the next character or function key pressed by the user. The pressed key is optionally displayed in the console window.
      </summary>
      <param name="intercept">Determines whether to display the pressed key in the console window. true to not display the pressed key; otherwise, false.</param>
      <returns>A System.ConsoleKeyInfo object that describes the System.ConsoleKey constant and Unicode character, if any, that correspond to the pressed console key. The System.ConsoleKeyInfo object also describes, in a bitwise combination of System.ConsoleModifiers values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</returns>
      <remarks></remarks>
      <exception cref="T:System.InvalidOperationException">The System.Console.In property is redirected from some stream other than the console.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.Terminal.ReadLine">
      <summary>
        Reads the next line of characters from the standard input stream.
      </summary>
      <returns>The next line of characters from the input stream, or null if no more lines are available.</returns>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.OutOfMemoryException">There is insufficient memory to allocate a buffer for the returned string.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The number of characters in the next line of characters is greater than System.Int32.MaxValue.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.BackgroundColor">
      <summary>
        Gets or sets the background color of the console.
      </summary>
      <value></value>
      <returns>A System.ConsoleColor that specifies the background color of the console; that is, the color that appears behind each character. The default is black.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentException">The color specified in a set operation is not a valid Color.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.BufferHeight">
      <summary>
        Gets or sets the height of the buffer area.
      </summary>
      <value></value>
      <returns>The current height, in rows, of the buffer area.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than or equal to zero.-or- The value in a set operation is greater than or equal to System.Int16.MaxValue.-or- The value in a set operation is less than System.Console.WindowTop + System.Console.WindowHeight.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.BufferWidth">
      <summary>
        Gets or sets the width of the buffer area.
      </summary>
      <value></value>
      <returns>The current width, in columns, of the buffer area.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than or equal to zero.-or- The value in a set operation is greater than or equal to System.Int16.MaxValue.-or- The value in a set operation is less than System.Console.WindowLeft + System.Console.WindowWidth.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.CapsLock">
      <summary>
        Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.
      </summary>
      <value></value>
      <returns>true if CAPS LOCK is turned on; false if CAPS LOCK is turned off.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.CursorLeft">
      <summary>
        Gets or sets the column position of the cursor within the buffer area.
      </summary>
      <value></value>
      <returns>The current position, in columns, of the cursor.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than zero.-or- The value in a set operation is greater than or equal to System.Console.BufferWidth.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.CursorSize">
      <summary>
        Gets or sets the height of the cursor within a character cell.
      </summary>
      <value></value>
      <returns>The size of the cursor expressed as a percentage of the height of a character cell. The property value ranges from 1 to 100.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified in a set operation is less than 1 or greater than 100.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.CursorTop">
      <summary>
        Gets or sets the row position of the cursor within the buffer area.
      </summary>
      <value></value>
      <returns>The current position, in rows, of the cursor.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than zero.-or- The value in a set operation is greater than or equal to System.Console.BufferHeight.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.CursorVisible">
      <summary>
        Gets or sets a value indicating whether the cursor is visible.
      </summary>
      <value></value>
      <returns>true if the cursor is visible; otherwise, false.</returns>
      <remarks></remarks>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.Error">
      <summary>
        Gets the standard error output stream.
      </summary>
      <value></value>
      <returns>A System.IO.TextWriter that represents the standard error output stream.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.ForegroundColor">
      <summary>
        Gets or sets the foreground color of the console.
      </summary>
      <value></value>
      <returns>A System.ConsoleColor that specifies the foreground color of the console; that is, the color of each character that is displayed. The default is gray.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentException">The color specified in a set operation is not a valid Color.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.In">
      <summary>
        Gets the standard input stream.
      </summary>
      <value></value>
      <returns>A System.IO.TextReader that represents the standard input stream.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.InputEncoding">
      <summary>
        Gets or sets the encoding the console uses to read input.
      </summary>
      <value></value>
      <returns>The encoding used to read console input.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentNullException">The property value in a set operation is null.</exception>
      <exception cref="T:System.IO.IOException">An error occurred during the execution of this operation.</exception>
      <exception cref="T:System.Security.SecurityException">Your application does not have permission to perform this operation.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.IsErrorRedirected">
      <summary>
        Gets a value that indicates whether the error output stream has been redirected from the standard error stream.
      </summary>
      <value></value>
      <returns>true if error output is redirected; otherwise, false.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.IsInputRedirected">
      <summary>
        Gets a value that indicates whether input has been redirected from the standard input stream.
      </summary>
      <value></value>
      <returns>true if input is redirected; otherwise, false.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.IsOutputRedirected">
      <summary>
        Gets a value that indicates whether output has been redirected from the standard output stream.
      </summary>
      <value></value>
      <returns>true if output is redirected; otherwise, false.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.KeyAvailable">
      <summary>
        Gets a value indicating whether a key press is available in the input stream.
      </summary>
      <value></value>
      <returns>true if a key press is available; otherwise, false.</returns>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      <exception cref="T:System.InvalidOperationException">Standard input is redirected to a file instead of the keyboard.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.LargestWindowHeight">
      <summary>
        Gets the largest possible number of console window rows, based on the current font and screen resolution.
      </summary>
      <value></value>
      <returns>The height of the largest possible console window measured in rows.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.LargestWindowWidth">
      <summary>
        Gets the largest possible number of console window columns, based on the current font and screen resolution.
      </summary>
      <value></value>
      <returns>The width of the largest possible console window measured in columns.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.NumberLock">
      <summary>
        Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.
      </summary>
      <value></value>
      <returns>true if NUM LOCK is turned on; false if NUM LOCK is turned off.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.Out">
      <summary>
        Gets the standard output stream.
      </summary>
      <value></value>
      <returns>A System.IO.TextWriter that represents the standard output stream.</returns>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.OutputEncoding">
      <summary>
        Gets or sets the encoding the console uses to write output.
      </summary>
      <value></value>
      <returns>The encoding used to write console output.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentNullException">The property value in a set operation is null.</exception>
      <exception cref="T:System.IO.IOException">An error occurred during the execution of this operation.</exception>
      <exception cref="T:System.Security.SecurityException">Your application does not have permission to perform this operation.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.Title">
      <summary>
        Gets or sets the title to display in the console title bar.
      </summary>
      <value></value>
      <returns>The string to be displayed in the title bar of the console. The maximum length of the title string is 24500 characters.</returns>
      <remarks></remarks>
      <exception cref="T:System.InvalidOperationException">In a get operation, the retrieved title is longer than 24500 characters.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the specified title is longer than 24500 characters.</exception>
      <exception cref="T:System.ArgumentNullException">In a set operation, the specified title is null.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.TreatControlCAsInput">
      <summary>
        Gets or sets a value indicating whether the combination of the System.ConsoleModifiers.Control modifier key and System.ConsoleKey.C console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.
      </summary>
      <value></value>
      <returns>true if Ctrl+C is treated as ordinary input; otherwise, false.</returns>
      <remarks></remarks>
      <exception cref="T:System.IO.IOException">Unable to get or set the input mode of the console input buffer.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.WindowHeight">
      <summary>
        Gets or sets the height of the console window area.
      </summary>
      <value></value>
      <returns>The height of the console window measured in rows.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the System.Console.WindowWidth property or the value of the System.Console.WindowHeight property is less than or equal to 0.-or-The value of the System.Console.WindowHeight property plus the value of the System.Console.WindowTop property is greater than or equal to System.Int16.MaxValue.-or-The value of the System.Console.WindowWidth property or the value of the System.Console.WindowHeight property is greater than the largest possible window width or height for the current screen resolution and console font.</exception>
      <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.WindowLeft">
      <summary>
        Gets or sets the leftmost position of the console window area relative to the screen buffer.
      </summary>
      <value></value>
      <returns>The leftmost console window position measured in columns.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the value to be assigned is less than zero.-or-As a result of the assignment, System.Console.WindowLeft plus System.Console.WindowWidth would exceed System.Console.BufferWidth.</exception>
      <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.WindowTop">
      <summary>
        Gets or sets the top position of the console window area relative to the screen buffer.
      </summary>
      <value></value>
      <returns>The uppermost console window position measured in rows.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the value to be assigned is less than zero.-or-As a result of the assignment, System.Console.WindowTop plus System.Console.WindowHeight would exceed System.Console.BufferHeight.</exception>
      <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Terminal.Terminal.WindowWidth">
      <summary>
        Gets or sets the width of the console window.
      </summary>
      <value></value>
      <returns>The width of the console window measured in columns.</returns>
      <remarks></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the System.Console.WindowWidth property or the value of the System.Console.WindowHeight property is less than or equal to 0.-or-The value of the System.Console.WindowHeight property plus the value of the System.Console.WindowTop property is greater than or equal to System.Int16.MaxValue.-or-The value of the System.Console.WindowWidth property or the value of the System.Console.WindowHeight property is greater than the largest possible window width or height for the current screen resolution and console font.</exception>
      <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
    </member>
    <member name="E:Microsoft.VisualBasic.Terminal.Terminal.CancelKeyPress">
      <summary>
        Occurs when the System.ConsoleModifiers.Control modifier key (Ctrl) and either the System.ConsoleKey.C console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).
      </summary>
      <param name="sender"></param>
      <param name="e"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO__.Shell.AllocConsole">
      <summary>
        You can create a console window In a Windows Forms project.  Project + properties, turn off "Enable application framework"
        And Set Startup Object To "Sub Main".

        Modify the Application.Run() statement To create the proper startup form, If necessary.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO__.Shell.ShowConsoleWindows">
      <summary>
        为WinForm应用程序分配一个终端窗口，这个函数一般是在Debug模式之下进行程序调试所使用的
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO__.Shell.Shell(System.String,System.Diagnostics.ProcessWindowStyle,System.Boolean)">
      <summary>

      </summary>
      <param name="CommandLine"></param>
      <param name="WindowStyle"></param>
      <param name="WaitForExit">If NOT, then the function returns the associated process id value. Else returns the process exit code.</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.STDIO__.I_ConsoleDeviceHandle">
      <summary>
        Represents the standard input, output, and error streams for console applications.(表示一个输入输出流控制台界面接口)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO__.I_ConsoleDeviceHandle.WriteLine(System.String)">
      <summary>
        Writes the specified string value, followed by the current line terminator, to the standard output stream.
        (将指定的字符串值（后跟当前行终止符）写入输出流。)
      </summary>
      <param name="s"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO__.I_ConsoleDeviceHandle.WriteLine(System.String,System.String[])">
      <summary>
        Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.
        (将指定的字符串值（后跟当前行终止符）写入输出流。)
      </summary>
      <param name="s"></param>
      <param name="args"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO__.I_ConsoleDeviceHandle.ReadLine">
      <summary>
        Reads the next line of characters from the standard input stream.(从输入流读取下一行字符)
      </summary>
      <returns>The next line of characters from the input stream, or null if no more lines are available.</returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO__.I_ConsoleDeviceHandle.Read">
      <summary>
        Reads the next character from the standard input stream.(从输入流读取下一个字符)
      </summary>
      <returns>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Terminal.STDIO">
      <summary>
        A standard input/output compatibility package that makes VisualBasic console
        program easily running on the Linux server or mac osx operating system.
        (一个用于让VisualBasic应用程序更加容易的运行于Linux服务器或者MAC系统之上的标准输入输出流的系统兼容包)
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Terminal.STDIO.escapings">
      <summary>
        A dictionary list of the escape characters.(转义字符列表)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO.printf(System.String,System.Object[])">
      <summary>
        Output the string to the console using a specific formation.(按照指定的格式将字符串输出到终端窗口之上，请注意，这个函数除了将数据流输出到标准终端之外，还会输出到调试终端)
      </summary>
      <param name="s">A string to print on the console window.(输出到终端窗口之上的字符串)</param>
      <param name="args">Formation parameters.(格式化参数)</param>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO.cat(System.String[])">
      <summary>
        Alias for the <see cref="M:System.Console.Write(System.Boolean)"/>.(不换行)
      </summary>
      <param name="out"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO.scanf(System.String@,System.ConsoleColor)">
      <summary>
        Read the string that user input on the console to the function paramenter.
        (将用户在终端窗口之上输入的数据赋值给一个字符串变量)
      </summary>
      <param name="s"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO.ZeroFill(System.String,System.Int32)">
      <summary>
        Fill the number string with specific length of ZERO sequence to generates the fixed width string.
      </summary>
      <param name="sn"></param>
      <param name="len"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO.MsgBox(System.String,Microsoft.VisualBasic.MsgBoxStyle)">
      <summary>

      </summary>
      <param name="prompt"></param>
      <param name="style">
        Value just allow:
        <see cref="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore"/>,
        <see cref="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel"/>,
        <see cref="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly"/>,
        <see cref="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel"/>,
        <see cref="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo"/>,
        <see cref="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel"/>
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO.__testEquals(System.String,System.Char)">
      <summary>

      </summary>
      <param name="input"></param>
      <param name="compare">大写的</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO.Read``1(System.String,Microsoft.VisualBasic.Terminal.STDIO.TryParseDelegate{``0},System.String)">
      <summary>
        Read Method with Generics &amp; Delegate

        In a console application there is often the need to ask (and validate) some data from users.
        For this reason I have created a function that make use of generics and delegates to
        speed up programming.

        > http://www.codeproject.com/Tips/1108772/Read-Method-with-Generics-Delegate
      </summary>
      <typeparam name="T"></typeparam>
      <param name="msg"></param>
      <param name="parser"></param>
      <param name="_default"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO.Write(System.Object)">
      <summary>
        Writes the text representation of the specified object to the standard output
        stream.
      </summary>
      <param name="o">The value to write, or null.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Terminal.STDIO.WriteLine(System.Object)">
      <summary>
        Writes the text representation of the specified object, followed by the current
        line terminator, to the standard output stream.
      </summary>
      <param name="o">The value to write.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Data.Trinity.NLP.TextTokens">
      <summary>
        应用于字符串分析的，自然语言处理
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ValueTypes.DateTimeHelper.MonthList">
      <summary>
        List of month names and its <see cref="T:System.Int32"/> value in a year
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ValueTypes.DateTimeHelper.GetMonthInteger(System.String)">
      <summary>
        从全称或者简称解析出月份的数字
      </summary>
      <param name="mon">大小写不敏感</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ValueTypes.DateTimeHelper.FillDateZero(System.Int32)">
      <summary>
        00
      </summary>
      <param name="d"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ValueTypes.DateTimeHelper.DateSeq(System.DateTime,System.DateTime)">
      <summary>
        枚举出在<paramref name="start"/>到<paramref name="ends"/>这个时间窗里面的所有日期
      </summary>
      <param name="start"></param>
      <param name="ends"></param>
      <returns>返回值里面包含有起始和结束的日期</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ValueTypes.DateTimeHelper.YYMMDD(System.DateTime)">
      <summary>
        yyyy-mm-dd
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.PathMatch.__pairs(System.String[],System.String[],System.Func{System.String,System.String})">
      <summary>
        <paramref name="paths1"/>的元素要比<paramref name="path2"/>多
      </summary>
      <param name="paths1"></param>
      <param name="path2"></param>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.RegexPythonRawString">
      <summary>
        模拟python的raw字符串的正则表达式，多行的
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.RegexExtensions.NameOf">
      <summary>
        Name of <see cref="T:System.Text.RegularExpressions.RegexOptions"/>
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.None">
      <summary>
        Specifies that no options are set. For more information about the default behavior
        of the regular expression engine, see the "Default Options" section in the Regular
        Expression Options topic.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.IgnoreCase">
      <summary>
        Specifies case-insensitive matching. For more information, see the "Case-Insensitive
        Matching " section in the Regular Expression Options topic.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.Multiline">
      <summary>
        Multiline mode. Changes the meaning of ^ and $ so they match at the beginning
        and end, respectively, of any line, and not just the beginning and end of the
        entire string. For more information, see the "Multiline Mode" section in the
        Regular Expression Options topic.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.ExplicitCapture">
      <summary>
        Specifies that the only valid captures are explicitly named or numbered groups
        of the form (?&lt;name>…). This allows unnamed parentheses to act as noncapturing
        groups without the syntactic clumsiness of the expression (?:…). For more information,
        see the "Explicit Captures Only" section in the Regular Expression Options topic.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.Compiled">
      <summary>
        Specifies that the regular expression is compiled to an assembly. This yields
        faster execution but increases startup time. This value should not be assigned
        to the System.Text.RegularExpressions.RegexCompilationInfo.Options property when
        calling the System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)
        method. For more information, see the "Compiled Regular Expressions" section
        in the Regular Expression Options topic.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.Singleline">
      <summary>
        Specifies single-line mode. Changes the meaning of the dot (.) so it matches
        every character (instead of every character except \n). For more information,
        see the "Single-line Mode" section in the Regular Expression Options topic.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.IgnorePatternWhitespace">
      <summary>
        Eliminates unescaped white space from the pattern and enables comments marked
        with #. However, this value does not affect or eliminate white space in character
        classes, numeric quantifiers, or tokens that mark the beginning of individual
        regular expression language elements. For more information, see the "Ignore White
        Space" section of the Regular Expression Options topic.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.RightToLeft">
      <summary>
        Specifies that the search will be from right to left instead of from left to
        right. For more information, see the "Right-to-Left Mode" section in the Regular
        Expression Options topic.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.ECMAScript">
      <summary>
        Enables ECMAScript-compliant behavior for the expression. This value can be used
        only in conjunction with the System.Text.RegularExpressions.RegexOptions.IgnoreCase,
        System.Text.RegularExpressions.RegexOptions.Multiline, and System.Text.RegularExpressions.RegexOptions.Compiled
        values. The use of this value with any other values results in an exception.For
        more information on the System.Text.RegularExpressions.RegexOptions.ECMAScript
        option, see the "ECMAScript Matching Behavior" section in the Regular Expression
        Options topic.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.RegexExtensions.NameOf.CultureInvariant">
      <summary>
        Specifies that cultural differences in language is ignored. For more information,
        see the "Comparison Using the Invariant Culture" section in the Regular Expression
        Options topic.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.RegexExtensions.EachValue(System.Text.RegularExpressions.MatchCollection)">
      <summary>
        Each match its value in the source match collection.
      </summary>
      <param name="m"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.RegexExtensions.ToArray(System.Text.RegularExpressions.MatchCollection)">
      <summary>
        Gets the matched strings from the regex match result as source
      </summary>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.RegexExtensions.ToArray``1(System.Text.RegularExpressions.MatchCollection,System.Func{System.String,``0})">
      <summary>
        Converts the <see cref="T:System.Text.RegularExpressions.Regex"/> string pattern match results to the objects.
        （这个函数是非并行化的，所以不需要担心会打乱顺序）
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="[ctype]">The object parser</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.RegexExtensions.IsPattern(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>
        The enitre string input equals to the pattern's matched.
      </summary>
      <param name="s"></param>
      <param name="pattern"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.RegexExtensions.PythonRawRegexp(System.String)">
      <summary>
        模拟python语言之中的从raw string构建正则表达式
      </summary>
      <param name="raw$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.RegexExtensions.Locates(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>
        函数返回以1为底的位置，当找不到的时候会返回零
      </summary>
      <param name="str$"></param>
      <param name="pattern$"></param>
      <param name="opt"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.LICENSE">
      <summary>
        Information about this VisualBasic App framework code module.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.LICENSE.GPL3">
      <summary>
        Looks up a localized string similar to                     GNU GENERAL PUBLIC LICENSE
        Version 3, 29 June 2007

        Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
        Everyone is permitted to copy and distribute verbatim copies
        of this license document, but changing it is not allowed.

        Preamble

        The GNU General Public License is a free, copyleft license for
        software and other kinds of works.

        The licenses for most software and other practical works are designed
        to take away yo [rest of string was truncated]&quot;;.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.LICENSE.GithubRepository">
      <summary>
        https://github.com/xieguigang/sciBASIC
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Win32.HardwareInfo">
      <summary>
        Get mother board serial numbers and CPU IDs in Visual Basic .NET
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.HardwareInfo.SystemSerialNumber">
      <summary>
        The following function gets a WMI object and then gets a collection of WMI_BaseBoard objects
        representing the system's mother boards. It loops through them getting their serial numbers.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.HardwareInfo.CPU_Id">
      <summary>
        The following code gets a WMI object and selects Win32_Processor objects. It loops through them getting their processor IDs.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.HardwareInfo.HarddriveInfo">
      <summary>
        How to Retrieve the REAL Hard Drive Serial Number.

        Shows you how to obtain the hardware serial number set by the manufacturer and
        not the Volume Serial Number that changes after you format a hard drive.
      </summary>
      <returns></returns>
      <remarks>
        http://www.codeproject.com/Articles/6077/How-to-Retrieve-the-REAL-Hard-Drive-Serial-Number
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Win32.GetLastErrorAPI">
      <summary>
        Wrapper for the returns value of api <see cref="M:Microsoft.VisualBasic.Win32.GetLastErrorAPI.GetLastError"/>
      </summary>
      <remarks>
        <see cref="T:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes"/> reference msdn:

        + https://support.microsoft.com/en-us/kb/155011
        + https://support.microsoft.com/EN-US/kb/155012
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.GetLastErrorAPI.GetLastError">
      <summary>
        针对之前调用的api函数，用这个函数取得扩展错误信息（在vb里使用：在vb中，用Err对象的``GetLastError``
        属性获取``GetLastError``的值。这样做是必要的，因为在api调用返回以及vb调用继续执行期间，
        vb有时会重设``GetLastError``的值）

        ``GetLastError``返回的值通过在api函数中调用``SetLastError``或``SetLastErrorEx``设置。函数
        并无必要设置上一次错误信息，所以即使一次``GetLastError``调用返回的是零值，也不能
        担保函数已成功执行。只有在函数调用返回一个错误结果时，这个函数指出的错误结果
        才是有效的。通常，只有在函数返回一个错误结果，而且已知函数会设置``GetLastError``
        变量的前提下，才应访问``GetLastError``；这时能保证获得有效的结果。``SetLastError``函
        数主要在对api函数进行模拟的dll函数中使用。
      </summary>
      <returns></returns>
      <remarks>
        ``GetLastError``返回的值通过在api函数中调用``SetLastError``或``SetLastErrorEx``设置。函数并无必要设置上一次错误信息，
        所以即使一次``GetLastError``调用返回的是零值，也不能担保函数已成功执行。只有在函数调用返回一个错误结果时，
        这个函数指出的错误结果才是有效的。通常，只有在函数返回一个错误结果，而且已知函数会设置``GetLastError``变量的前提下，
        才应访问``GetLastError``；这时能保证获得有效的结果。``SetLastError``函数主要在对api函数进行模拟的dll函数中使用，
        所以对vb应用程序来说是没有意义的
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.GetLastErrorAPI.GetLastErrorCode">
      <summary>
        Retrieves the calling thread's last-error code value. The last-error code is maintained on a per-thread basis.
        Multiple threads do not overwrite each other's last-error code.
      </summary>
      <returns>
        The return value is the calling thread's last-error code.

        The Return Value section of the documentation for each function that sets the last-error code notes the conditions
        under which the function sets the last-error code. Most functions that set the thread's last-error code set it
        when they fail. However, some functions also set the last-error code when they succeed. If the function is not
        documented to set the last-error code, the value returned by this function is simply the most recent last-error
        code to have been set; some functions set the last-error code to 0 on success and others do not.
      </returns>
      <remarks>
        Functions executed by the calling thread set this value by calling the SetLastError function. You should call the
        GetLastError function immediately when a function's return value indicates that such a call will return useful data.
        That is because some functions call SetLastError with a zero when they succeed, wiping out the error code set by
        the most recently failed function.
        To obtain an error string for system error codes, use the FormatMessage function. For a complete list of error codes
        provided by the operating system, see System Error Codes.
        The error codes returned by a function are Not part of the Windows API specification And can vary by operating system
        Or device driver. For this reason, we cannot provide the complete list of error codes that can be returned by each
        function. There are also many functions whose documentation does Not include even a partial list of error codes that
        can be returned.
        Error codes are 32-bit values (bit 31 Is the most significant bit). Bit 29 Is reserved For application-defined Error
        codes; no system Error code has this bit Set. If you are defining an Error code For your application, Set this bit
        To one. That indicates that the Error code has been defined by an application, And ensures that your Error code does
        Not conflict With any Error codes defined by the system.

        To convert a system error into an HRESULT value, use the HRESULT_FROM_WIN32 macro.
      </remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes">
      <summary>
        This article lists the error codes you may encounter in Windows NT. For the remaining error codes,
        please see the following article(s) in the Microsoft Knowledge Base:

        + [155011](https://support.microsoft.com/en-us/kb/155011) Error Codes in Windows NT Part 1 of 2
        + [155012](https://support.microsoft.com/EN-US/kb/155012) Error Codes in Windows NT Part 2 of 2
        (<see cref="M:Microsoft.VisualBasic.Win32.GetLastErrorAPI.GetLastError"/>的返回值的含义)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.LZERROR_UNKNOWNALG">
      <summary>
        Compression algorithm not
        recognized.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.LZERROR_BADVALUE">
      <summary>
        Input parameter out of
        acceptable range.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.LZERROR_GLOBLOCK">
      <summary>
        Bad global handle.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.LZERROR_GLOBALLOC">
      <summary>
        Insufficient memory for LZFile
        structure.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.LZERROR_WRITE">
      <summary>
        Out of space for output file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.LZERROR_READ">
      <summary>
        Corrupt compressed file
        format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.LZERROR_BADOUTHANDLE">
      <summary>
        Invalid output handle.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.LZERROR_BADINHANDLE">
      <summary>
        Invalid input handle.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.NO_ERROR">
      <summary>
        No error.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SUCCESS">
      <summary>
        The operation was successfully
        completed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_FUNCTION">
      <summary>
        The function is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FILE_NOT_FOUND">
      <summary>
        The system cannot find the
        file specified.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PATH_NOT_FOUND">
      <summary>
        The system cannot find the
        specified path.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_OPEN_FILES">
      <summary>
        The system cannot open the
        file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ACCESS_DENIED">
      <summary>
        Access is denied.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_HANDLE">
      <summary>
        The internal file identifier
        is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ARENA_TRASHED">
      <summary>
        The storage control blocks
        were destroyed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_ENOUGH_MEMORY">
      <summary>
        Not enough storage is
        available to process this
        command.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_BLOCK">
      <summary>
        The storage control block
        address is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_ENVIRONMENT">
      <summary>
        The environment is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_FORMAT">
      <summary>
        An attempt was made to load a
        program with an incorrect
        format.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_ACCESS">
      <summary>
        The access code is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_DATA">
      <summary>
        The data is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_OUTOFMEMORY">
      <summary>
        Not enough storage is
        available to complete this
        operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_DRIVE">
      <summary>
        The system cannot find the
        specified drive.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CURRENT_DIRECTORY">
      <summary>
        The directory cannot be
        removed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_SAME_DEVICE">
      <summary>
        The system cannot move the
        file to a different disk
        drive.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_MORE_FILES">
      <summary>
        There are no more files.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WRITE_PROTECT">
      <summary>
        The media is write protected.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_UNIT">
      <summary>
        The system cannot find the
        specified device.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_READY">
      <summary>
        The drive is not ready.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_COMMAND">
      <summary>
        The device does not recognize
        the command.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CRC">
      <summary>
        Data error (cyclic redundancy
        check).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_LENGTH">
      <summary>
        The program issued a command
        but the command length is
        incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SEEK">
      <summary>
        The drive cannot locate a
        specific area or track on the
        disk.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_DOS_DISK">
      <summary>
        The specified disk cannot be
        accessed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SECTOR_NOT_FOUND">
      <summary>
        The drive cannot find the
        requested sector.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_OUT_OF_PAPER">
      <summary>
        The printer is out of paper.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WRITE_FAULT">
      <summary>
        The system cannot write to the
        specified device.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_READ_FAULT">
      <summary>
        The system cannot read from
        the specified device.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_GEN_FAILURE">
      <summary>
        A device attached to the
        system is not functioning.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SHARING_VIOLATION">
      <summary>
        The process cannot access the
        file because it is being used
        by another process.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOCK_VIOLATION">
      <summary>
        The process cannot access the
        file because another process
        has locked a portion of the
        file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WRONG_DISK">
      <summary>
        The wrong disk is in the
        drive. Insert %2 (Volume
        Serial Number: %3) into drive
        %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SHARING_BUFFER_EXCEEDED">
      <summary>
        Too many files opened for
        sharing.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_HANDLE_EOF">
      <summary>
        Reached End Of File.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_HANDLE_DISK_FULL">
      <summary>
        The disk is full.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_SUPPORTED">
      <summary>
        The network request is not
        supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REM_NOT_LIST">
      <summary>
        The remote computer is not
        available.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DUP_NAME">
      <summary>
        A duplicate name exists on the
        network.

      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_NETPATH">
      <summary>
        The network path was not
        found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NETWORK_BUSY">
      <summary>
        The network is busy.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DEV_NOT_EXIST">
      <summary>
        The specified network resource
        is no longer available.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_CMDS">
      <summary>
        The network BIOS command limit
        has been reached.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ADAP_HDW_ERR">
      <summary>
        A network adapter hardware
        error occurred.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_NET_RESP">
      <summary>
        The specified server cannot
        perform the requested
        operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNEXP_NET_ERR">
      <summary>
        An unexpected network error
        occurred.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_REM_ADAP">
      <summary>
        The remote adapter is not
        compatible.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINTQ_FULL">
      <summary>
        The printer queue is full.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SPOOL_SPACE">
      <summary>
        Space to store the file
        waiting to be printed is not
        available on the server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINT_CANCELLED">
      <summary>
        File waiting to be printed was
        deleted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NETNAME_DELETED">
      <summary>
        The specified network name is
        no longer available.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NETWORK_ACCESS_DENIED">
      <summary>
        Network access is denied.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_DEV_TYPE">
      <summary>
        The network resource type is
        incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_NET_NAME">
      <summary>
        The network name cannot be
        found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_NAMES">
      <summary>
        The name limit for the local
        computer network adapter card
        exceeded.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_SESS">
      <summary>
        The network BIOS session limit
        exceeded.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SHARING_PAUSED">
      <summary>
        The remote server is paused or
        is in the process of being
        started.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REQ_NOT_ACCEP">
      <summary>
        The network request was not
        accepted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REDIR_PAUSED">
      <summary>
        The specified printer or disk
        device has been paused.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FILE_EXISTS">
      <summary>
        The file exists.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANNOT_MAKE">
      <summary>
        The directory or file cannot
        be created.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FAIL_I24">
      <summary>
        Fail on INT 24.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_OUT_OF_STRUCTURES">
      <summary>
        Storage to process this
        request is not available.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ALREADY_ASSIGNED">
      <summary>
        The local device name is
        already in use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PASSWORD">
      <summary>
        The specified network password
        is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PARAMETER">
      <summary>
        The parameter is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NET_WRITE_FAULT">
      <summary>
        A write fault occurred on the
        network.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_PROC_SLOTS">
      <summary>
        The system cannot start
        another process at this time.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_SEMAPHORES">
      <summary>
        Cannot create another system
        semaphore.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EXCL_SEM_ALREADY_OWNED">
      <summary>
        The exclusive semaphore is
        owned by another process.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SEM_IS_SET">
      <summary>
        The semaphore is set and
        cannot be closed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_SEM_REQUESTS">
      <summary>
        The semaphore cannot be set
        again.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_AT_INTERRUPT_TIME">
      <summary>
        Cannot request exclusive
        semaphores at interrupt time.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SEM_OWNER_DIED">
      <summary>
        The previous ownership of this
        semaphore has ended.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SEM_USER_LIMIT">
      <summary>
        Insert the disk for drive 1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DISK_CHANGE">
      <summary>
        Program stopped because
        alternate disk was not
        inserted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DRIVE_LOCKED">
      <summary>
        The disk is in use or locked
        by another process.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BROKEN_PIPE">
      <summary>
        The pipe was ended.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_OPEN_FAILED">
      <summary>
        The system cannot open the
        specified device or file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BUFFER_OVERFLOW">
      <summary>
        The file name is too long.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DISK_FULL">
      <summary>
        There is not enough space on
        the disk.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_MORE_SEARCH_HANDLES">
      <summary>
        No more internal file
        identifiers available.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_TARGET_HANDLE">
      <summary>
        The target internal file
        identifier is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_CATEGORY">
      <summary>
        The IOCTL call made by the
        application program is
        incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_VERIFY_SWITCH">
      <summary>
        The verify-on-write switch
        parameter value is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_DRIVER_LEVEL">
      <summary>
        The system does not support
        the requested command.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CALL_NOT_IMPLEMENTED">
      <summary>
        The Application Program
        Interface (API) entered will
        only work in Windows/NT mode.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SEM_TIMEOUT">
      <summary>
        The semaphore timeout period
        has expired.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INSUFFICIENT_BUFFER">
      <summary>
        The data area passed to a
        system call is too small.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_NAME">
      <summary>
        The file name, directory name,
        or volume label is
        syntactically incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_LEVEL">
      <summary>
        The system call level is
        incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_VOLUME_LABEL">
      <summary>
        The disk has no volume label.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MOD_NOT_FOUND">
      <summary>
        The specified module cannot be
        found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PROC_NOT_FOUND">
      <summary>
        The specified procedure could
        not be found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WAIT_NO_CHILDREN">
      <summary>
        There are no child processes
        to wait for.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CHILD_NOT_COMPLETE">
      <summary>
        The %1 application cannot be
        run in Windows mode.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DIRECT_ACCESS_HANDLE">
      <summary>
        Attempt to use a file handle
        to an open disk partition for
        an operation other than raw
        disk I/O.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NEGATIVE_SEEK">
      <summary>
        An attempt was made to move
        the file pointer before the
        beginning of the file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SEEK_ON_DEVICE">
      <summary>
        The file pointer cannot be set
        on the specified device or
        file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IS_JOIN_TARGET">
      <summary>
        A JOIN or SUBST command cannot
        be used for a drive that
        contains previously joined
        drives.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IS_JOINED">
      <summary>
        An attempt was made to use a
        JOIN or SUBST command on a
        drive that is already joined.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IS_SUBSTED">
      <summary>
        An attempt was made to use a
        JOIN or SUBST command on a
        drive already substituted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_JOINED">
      <summary>
        The system attempted to delete
        the JOIN of a drive not
        previously joined.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_SUBSTED">
      <summary>
        The system attempted to delete
        the substitution of a drive
        not previously substituted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_JOIN_TO_JOIN">
      <summary>
        The system tried to join a
        drive to a directory on a
        joined drive.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SUBST_TO_SUBST">
      <summary>
        The system attempted to
        substitute a drive to a
        directory on a substituted
        drive.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_JOIN_TO_SUBST">
      <summary>
        The system tried to join a
        drive to a directory on a
        substituted drive.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SUBST_TO_JOIN">
      <summary>
        The system attempted to SUBST
        a drive to a directory on a
        joined drive.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BUSY_DRIVE">
      <summary>
        The system cannot perform a
        JOIN or SUBST at this time.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SAME_DRIVE">
      <summary>
        The system cannot join or
        substitute a drive to or for a
        directory on the same drive.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DIR_NOT_ROOT">
      <summary>
        The directory is not a
        subdirectory of the root
        directory.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DIR_NOT_EMPTY">
      <summary>
        The directory is not empty.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IS_SUBST_PATH">
      <summary>
        The path specified is being
        used in a substitute.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IS_JOIN_PATH">
      <summary>
        Not enough resources are
        available to process this
        command.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PATH_BUSY">
      <summary>
        The specified path cannot be
        used at this time.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IS_SUBST_TARGET">
      <summary>
        An attempt was made to join or
        substitute a drive for which a
        directory on the drive is the
        target of a previous
        substitute.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SYSTEM_TRACE">
      <summary>
        System trace information not
        specified in your CONFIG.SYS
        file, or tracing is not
        allowed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_EVENT_COUNT">
      <summary>
        The number of specified
        semaphore events is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_MUXWAITERS">
      <summary>
        Too many semaphores are
        already set.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_LIST_FORMAT">
      <summary>
        The list is not correct.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LABEL_TOO_LONG">
      <summary>
        The volume label entered
        exceeds the 11 character
        limit. The first 11 characters
        were written to disk. Any
        characters that exceeded the
        11 character limit were
        automatically deleted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_TCBS">
      <summary>
        Cannot create another thread.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SIGNAL_REFUSED">
      <summary>
        The recipient process has
        refused the signal.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DISCARDED">
      <summary>
        The segment is already
        discarded and cannot be
        locked.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_LOCKED">
      <summary>
        The segment is already
        unlocked.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_THREADID_ADDR">
      <summary>
        The address for the thread ID
        is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_ARGUMENTS">
      <summary>
        The argument string passed to
        DosExecPgm is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_PATHNAME">
      <summary>
        The specified path name is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SIGNAL_PENDING">
      <summary>
        A signal is already pending.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MAX_THRDS_REACHED">
      <summary>
        No more threads can be created
        in the system.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOCK_FAILED">
      <summary>
        Attempt to lock a region of a
        file failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BUSY">
      <summary>
        The requested resource is in
        use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANCEL_VIOLATION">
      <summary>
        A lock request was not
        outstanding for the supplied
        cancel region.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ATOMIC_LOCKS_NOT_SUPPORTED">
      <summary>
        The file system does not
        support atomic changing of the
        lock type.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SEGMENT_NUMBER">
      <summary>
        The system detected a segment
        number that is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_ORDINAL">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ALREADY_EXISTS">
      <summary>
        Attempt to create file that
        already exists.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_FLAG_NUMBER">
      <summary>
        The flag passed is incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SEM_NOT_FOUND">
      <summary>
        The specified system semaphore
        name was not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_STARTING_CODESEG">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_STACKSEG">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_MODULETYPE">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_EXE_SIGNATURE">
      <summary>
        %1 cannot be run in Windows/NT
        mode.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EXE_MARKED_INVALID">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_EXE_FORMAT">
      <summary>
        %1 is not a valid Windows-
        based application.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ITERATED_DATA_EXCEEDS_64k">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_MINALLOCSIZE">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DYNLINK_FROM_INVALID_RING">
      <summary>
        The operating system cannot
        run this application program.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IOPL_NOT_ENABLED">
      <summary>
        The operating system is not
        presently configured to run
        this application.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SEGDPL">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_AUTODATASEG_EXCEEDS_64k">
      <summary>
        The operating system cannot
        run this application program.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RING2SEG_MUST_BE_MOVABLE">
      <summary>
        The code segment cannot be
        greater than or equal to 64KB.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RELOC_CHAIN_XEEDS_SEGLIM">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INFLOOP_IN_RELOC_CHAIN">
      <summary>
        The operating system cannot
        run %1.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ENVVAR_NOT_FOUND">
      <summary>
        The system could not find the
        environment option entered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SIGNAL_SENT">
      <summary>
        No process in the command
        subtree has a signal handler.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FILENAME_EXCED_RANGE">
      <summary>
        The file name or extension is
        too long.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RING2_STACK_IN_USE">
      <summary>
        The ring 2 stack is in use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_META_EXPANSION_TOO_LONG">
      <summary>
        The global filename characters
        * or ? are entered
        incorrectly, or too many
        global filename characters are
        specified.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SIGNAL_NUMBER">
      <summary>
        The signal being posted is
        incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_THREAD_1_INACTIVE">
      <summary>
        The signal handler cannot be
        set.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOCKED">
      <summary>
        The segment is locked and
        cannot be reallocated.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_MODULES">
      <summary>
        Too many dynamic link modules
        are attached to this program
        or dynamic link module.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NESTING_NOT_ALLOWED">
      <summary>
        Can't nest calls to
        LoadModule.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_PIPE">
      <summary>
        The pipe state is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PIPE_BUSY">
      <summary>
        All pipe instances busy.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_DATA">
      <summary>
        Pipe close in progress.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PIPE_NOT_CONNECTED">
      <summary>
        No process on other end of
        pipe.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MORE_DATA">
      <summary>
        More data is available.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_VC_DISCONNECTED">
      <summary>
        The session was canceled.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_EA_NAME">
      <summary>
        The specified EA name is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EA_LIST_INCONSISTENT">
      <summary>
        The EAs are inconsistent.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_MORE_ITEMS">
      <summary>
        No more data is available.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANNOT_COPY">
      <summary>
        The Copy API cannot be used.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DIRECTORY">
      <summary>
        The directory name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EAS_DIDNT_FIT">
      <summary>
        The EAs did not fit in the
        buffer.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EA_FILE_CORRUPT">
      <summary>
        The EA file on the mounted
        file system is damaged.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EA_TABLE_FULL">
      <summary>
        The EA table in the EA file on
        the mounted file system is
        full.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_EA_HANDLE">
      <summary>
        The specified EA handle is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EAS_NOT_SUPPORTED">
      <summary>
        The mounted file system does
        not support extended
        attributes.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_OWNER">
      <summary>
        Attempt to release mutex not
        owned by caller.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_POSTS">
      <summary>
        Too many posts made to a
        semaphore.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PARTIAL_COPY">
      <summary>
        Only part of a
        Read/WriteProcessMemory
        request was completed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MR_MID_NOT_FOUND">
      <summary>
        The system cannot find message
        for message number 0x%1 in
        message file for %2.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_ADDRESS">
      <summary>
        Attempt to access invalid
        address.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ARITHMETIC_OVERFLOW">
      <summary>
        Arithmetic result exceeded 32-
        bits.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PIPE_CONNECTED">
      <summary>
        There is a process on other
        end of the pipe.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PIPE_LISTENING">
      <summary>
        Waiting for a process to open
        the other end of the pipe.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EA_ACCESS_DENIED">
      <summary>
        Access to the EA is denied.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_OPERATION_ABORTED">
      <summary>
        The I/O operation was aborted
        due to either thread exit or
        application request.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IO_INCOMPLETE">
      <summary>
        Overlapped IO event not in
        signaled state.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IO_PENDING">
      <summary>
        Overlapped IO operation in
        progress.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOACCESS">
      <summary>
        Invalid access to memory
        location.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SWAPERROR">
      <summary>
        Error accessing paging file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_STACK_OVERFLOW">
      <summary>
        Recursion too deep, stack
        overflowed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_MESSAGE">
      <summary>
        Window can't handle sent
        message.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CAN_NOT_COMPLETE">
      <summary>
        Cannot complete function for
        some reason.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_FLAGS">
      <summary>
        The flags are invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNRECOGNIZED_VOLUME">
      <summary>
        The volume does not contain a
        recognized file system. Make
        sure that all required file
        system drivers are loaded and
        the volume is not damaged.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FILE_INVALID">
      <summary>
        The volume for a file was
        externally altered and the
        opened file is no longer
        valid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FULLSCREEN_MODE">
      <summary>
        The requested operation cannot
        be performed in full-screen
        mode.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_TOKEN">
      <summary>
        An attempt was made to
        reference a token that does
        not exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BADDB">
      <summary>
        The configuration registry
        database is damaged.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BADKEY">
      <summary>
        The configuration registry key
        is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANTOPEN">
      <summary>
        The configuration registry key
        cannot be opened.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANTREAD">
      <summary>
        The configuration registry key
        cannot be read.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANTWRITE">
      <summary>
        The configuration registry key
        cannot be written.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REGISTRY_RECOVERED">
      <summary>
        One of the files containing
        the system's registry data had
        to be recovered by use of a
        log or alternate copy. The
        recovery succeeded.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REGISTRY_CORRUPT">
      <summary>
        The registry is damaged. The
        structure of one of the files
        that contains registry data is
        damaged, or the system's in
        memory image of the file is
        damaged, or the file could not
        be recovered because its
        alternate copy or log was
        absent or damaged.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REGISTRY_IO_FAILED">
      <summary>
        The registry initiated an I/O
        operation that had an
        unrecoverable failure. The
        registry could not read in, or
        write out, or flush, one of
        the files that contain the
        system's image of the
        registry.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_REGISTRY_FILE">
      <summary>
        The system attempted to load
        or restore a file into the
        registry, and the specified
        file is not in the format of a
        registry file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_KEY_DELETED">
      <summary>
        Illegal operation attempted on
        a registry key that has been
        marked for deletion.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_LOG_SPACE">
      <summary>
        System could not allocate
        required space in a registry
        log.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_KEY_HAS_CHILDREN">
      <summary>
        An attempt was made to create
        a symbolic link in a registry
        key that already has subkeys
        or values.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CHILD_MUST_BE_VOLATILE">
      <summary>
        An attempt was made to create
        a stable subkey under a
        volatile parent key.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOTIFY_ENUM_DIR">
      <summary>
        This indicates that a notify
        change request is being
        completed and the information
        is not being returned in the
        caller's buffer. The caller
        now needs to enumerate the
        files to find the changes.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DEPENDENT_SERVICES_RUNNING">
      <summary>
        A stop control has been sent
        to a service which other
        running services are dependent
        on.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SERVICE_CONTROL">
      <summary>
        The requested control is not
        valid for this service.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_REQUEST_TIMEOUT">
      <summary>
        The service did not respond to
        the start or control request
        in a timely fashion.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_NO_THREAD">
      <summary>
        A thread could not be created
        for the service.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_DATABASE_LOCKED">
      <summary>
        The service database is
        locked.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_ALREADY_RUNNING">
      <summary>
        An instance of the service is
        already running.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SERVICE_ACCOUNT">
      <summary>
        The account name is invalid or
        does not exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_DISABLED">
      <summary>
        The specified service is
        disabled and cannot be
        started.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CIRCULAR_DEPENDENCY">
      <summary>
        Circular service dependency
        was specified.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_DOES_NOT_EXIST">
      <summary>
        The specified service does not
        exist as an installed service.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_CANNOT_ACCEPT_CTRL">
      <summary>
        The service cannot accept
        control messages at this time.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_NOT_ACTIVE">
      <summary>
        The service has not been
        started.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FAILED_SERVICE_CONTROLLER_CONNECT">
      <summary>
        The service process could
        not connect to the service
        controller.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EXCEPTION_IN_SERVICE">
      <summary>
        An exception occurred in the
        service when handling the
        control request.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DATABASE_DOES_NOT_EXIST">
      <summary>
        The database specified does
        not exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_SPECIFIC_ERROR">
      <summary>
        The service has returned a
        service-specific error code.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PROCESS_ABORTED">
      <summary>
        The process terminated
        unexpectedly.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_DEPENDENCY_FAIL">
      <summary>
        The dependency service or
        group failed to start.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_LOGON_FAILED">
      <summary>
        The service did not start due
        to a logon failure.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_START_HANG">
      <summary>
        After starting, the service
        hung in a start-pending state.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SERVICE_LOCK">
      <summary>
        The specified service database
        lock is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_MARKED_FOR_DELETE">
      <summary>
        The specified service has been
        marked for deletion.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_EXISTS">
      <summary>
        The specified service already
        exists.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ALREADY_RUNNING_LKG">
      <summary>
        The system is currently
        running with the last-known-
        good configuration.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_DEPENDENCY_DELETED">
      <summary>
        The dependency service does
        not exist or has been marked
        for deletion.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BOOT_ALREADY_ACCEPTED">
      <summary>
        The current boot has already
        been accepted for use as the
        last-known-good control set.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_NEVER_STARTED">
      <summary>
        No attempts to start the
        service have been made since
        the last boot.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DUPLICATE_SERVICE_NAME">
      <summary>
        The name is already in use as
        either a service name or a
        service display name.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DIFFERENT_SERVICE_ACCOUNT">
      <summary>
        The account specified for this
        service is different from the
        account specified for other
        services running in the same
        process.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_END_OF_MEDIA">
      <summary>
        The physical end of the tape
        has been reached.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FILEMARK_DETECTED">
      <summary>
        A tape access reached a
        filemark.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BEGINNING_OF_MEDIA">
      <summary>
        The beginning of the tape or
        partition was encountered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SETMARK_DETECTED">
      <summary>
        A tape access reached a
        setmark.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_DATA_DETECTED">
      <summary>
        During a tape access, the end
        of the data marker was
        reached.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PARTITION_FAILURE">
      <summary>
        Tape could not be partitioned.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_BLOCK_LENGTH">
      <summary>
        When accessing a new tape of a
        multivolume partition, the
        current block size is
        incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DEVICE_NOT_PARTITIONED">
      <summary>
        Tape partition information
        could not be found when
        loading a tape.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNABLE_TO_LOCK_MEDIA">
      <summary>
        Attempt to lock the eject
        media mechanism failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNABLE_TO_UNLOAD_MEDIA">
      <summary>
        Unload media failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MEDIA_CHANGED">
      <summary>
        Media in drive may have
        changed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BUS_RESET">
      <summary>
        The I/O bus was reset.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_MEDIA_IN_DRIVE">
      <summary>
        Tape query failed because of
        no media in drive.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_UNICODE_TRANSLATION">
      <summary>
        No mapping for the Unicode
        character exists in the target
        multi-byte code page.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DLL_INIT_FAILED">
      <summary>
        A DLL initialization routine
        failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SHUTDOWN_IN_PROGRESS">
      <summary>
        A system shutdown is in
        progress.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SHUTDOWN_IN_PROGRESS">
      <summary>
        An attempt to abort the
        shutdown of the system failed
        because no shutdown was in
        progress.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IO_DEVICE">
      <summary>
        The request could not be
        performed because of an I/O
        device error.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERIAL_NO_DEVICE">
      <summary>
        No serial device was
        successfully initialized. The
        serial driver will unload.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_IRQ_BUSY">
      <summary>
        Unable to open a device that
        was sharing an interrupt
        request (IRQ) with other
        devices. At least one other
        device that uses that IRQ was
        already opened.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MORE_WRITES">
      <summary>
        A serial I/O operation was
        completed by another write to
        the serial port. (The
        IOCTL_SERIAL_XOFF_COUNTER
        reached zero.)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_COUNTER_TIMEOUT">
      <summary>
        A serial I/O operation
        completed because the time-out
        period expired. (The
        IOCTL_SERIAL_XOFF_COUNTER did
        not reach zero.)
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FLOPPY_ID_MARK_NOT_FOUND">
      <summary>
        No ID address mark was found
        on the floppy disk.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FLOPPY_WRONG_CYLINDER">
      <summary>
        Mismatch between the floppy
        disk sector ID field and the
        floppy disk controller track
        address.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FLOPPY_UNKNOWN_ERROR">
      <summary>
        The floppy disk controller
        reported an error that is not
        recognized by the floppy disk
        driver.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FLOPPY_BAD_REGISTERS">
      <summary>
        The floppy disk controller
        returned inconsistent results
        in its registers.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DISK_RECALIBRATE_FAILED">
      <summary>
        While accessing the hard disk,
        a recalibrate operation
        failed, even after retries.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DISK_OPERATION_FAILED">
      <summary>
        While accessing the hard disk,
        a disk operation failed even
        after retries.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DISK_RESET_FAILED">
      <summary>
        While accessing the hard disk,
        a disk controller reset was
        needed, but even that failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EOM_OVERFLOW">
      <summary>
        Physical end of tape
        encountered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_ENOUGH_SERVER_MEMORY">
      <summary>
        Not enough server storage is
        available to process this
        command.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_POSSIBLE_DEADLOCK">
      <summary>
        A potential deadlock condition
        has been detected.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MAPPED_ALIGNMENT">
      <summary>
        The base address or the file
        offset specified does not have
        the proper alignment.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SET_POWER_STATE_VETOED">
      <summary>
        An attempt to change the
        system power state was vetoed
        by another application or
        driver.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SET_POWER_STATE_FAILED">
      <summary>
        The system BIOS failed an
        attempt to change the system
        power state.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_LINKS">
      <summary>
        An attempt was made to create
        more links on a file than the
        file system supports.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_OLD_WIN_VERSION">
      <summary>
        The specified program requires
        a newer version of Windows.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_APP_WRONG_OS">
      <summary>
        The specified program is not a
        Windows or MS-DOS program.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SINGLE_INSTANCE_APP">
      <summary>
        Cannot start more than one
        instance of the specified
        program.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RMODE_APP">
      <summary>
        The specified program was
        written for an older version
        of Windows.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_DLL">
      <summary>
        One of the library files
        needed to run this application
        is damaged.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_ASSOCIATION">
      <summary>
        No application is associated
        with the specified file for
        this operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DDE_FAIL">
      <summary>
        An error occurred in sending
        the command to the
        application.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DLL_NOT_FOUND">
      <summary>
        One of the library files
        needed to run this application
        cannot be found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_DEVICE">
      <summary>
        The specified device name is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CONNECTION_UNAVAIL">
      <summary>
        The device is not currently
        connected but is a remembered
        connection.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DEVICE_ALREADY_REMEMBERED">
      <summary>
        An attempt was made to
        remember a device that was
        previously remembered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_NET_OR_BAD_PATH">
      <summary>
        No network provider accepted
        the given network path.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_PROVIDER">
      <summary>
        The specified network provider
        name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANNOT_OPEN_PROFILE">
      <summary>
        Unable to open the network
        connection profile.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_PROFILE">
      <summary>
        The network connection profile
        is damaged.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_CONTAINER">
      <summary>
        Cannot enumerate a non-
        container.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EXTENDED_ERROR">
      <summary>
        An extended error has
        occurred.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_GROUPNAME">
      <summary>
        The format of the specified
        group name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_COMPUTERNAME">
      <summary>
        The format of the specified
        computer name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_EVENTNAME">
      <summary>
        The format of the specified
        event name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_DOMAINNAME">
      <summary>
        The format of the specified
        domain name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SERVICENAME">
      <summary>
        The format of the specified
        service name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_NETNAME">
      <summary>
        The format of the specified
        network name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SHARENAME">
      <summary>
        The format of the specified
        share name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PASSWORDNAME">
      <summary>
        The format of the specified
        password is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_MESSAGENAME">
      <summary>
        The format of the specified
        message name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_MESSAGEDEST">
      <summary>
        The format of the specified
        message destination is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SESSION_CREDENTIAL_CONFLICT">
      <summary>
        The credentials supplied
        conflict with an existing set
        of credentials.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REMOTE_SESSION_LIMIT_EXCEEDED">
      <summary>
        An attempt was made to
        establish a session to a LAN
        Manager server, but there are
        already too many sessions
        established to that server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DUP_DOMAINNAME">
      <summary>
        The workgroup or domain name
        is already in use by another
        computer on the network.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_NETWORK">
      <summary>
        The network is not present or
        not started.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANCELLED">
      <summary>
        The operation was cancelled by
        the user.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_USER_MAPPED_FILE">
      <summary>
        The requested operation cannot
        be performed on a file with a
        user mapped section open.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CONNECTION_REFUSED">
      <summary>
        The remote system refused the
        network connection.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_GRACEFUL_DISCONNECT">
      <summary>
        The network connection was
        gracefully closed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ADDRESS_ALREADY_ASSOCIATED">
      <summary>
        The network transport endpoint
        already has an address
        associated with it.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ADDRESS_NOT_ASSOCIATED">
      <summary>
        An address has not yet been
        associated with the network
        endpoint.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CONNECTION_INVALID">
      <summary>
        An operation was attempted on
        a non-existent network
        connection.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CONNECTION_ACTIVE">
      <summary>
        An invalid operation was
        attempted on an active network
        connection.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NETWORK_UNREACHABLE">
      <summary>
        The remote network is not
        reachable by the transport.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_HOST_UNREACHABLE">
      <summary>
        The remote system is not
        reachable by the transport.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PROTOCOL_UNREACHABLE">
      <summary>
        The remote system does not
        support the transport
        protocol.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PORT_UNREACHABLE">
      <summary>
        No service is operating at the
        destination network endpoint
        on the remote system.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REQUEST_ABORTED">
      <summary>
        The request was aborted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CONNECTION_ABORTED">
      <summary>
        The network connection was
        aborted by the local system.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RETRY">
      <summary>
        The operation could not be
        completed. A retry should be
        performed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CONNECTION_COUNT_LIMIT">
      <summary>
        A connection to the server
        could not be made because the
        limit on the number of
        concurrent connections for
        this account has been reached.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOGIN_TIME_RESTRICTION">
      <summary>
        Attempting to login during an
        unauthorized time of day for
        this account.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOGIN_WKSTA_RESTRICTION">
      <summary>
        The account is not authorized
        to login from this station.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INCORRECT_ADDRESS">
      <summary>
        The network address could not
        be used for the operation
        requested.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ALREADY_REGISTERED">
      <summary>
        The service is already
        registered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVICE_NOT_FOUND">
      <summary>
        The specified service does not
        exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_AUTHENTICATED">
      <summary>
        The operation being requested
        was not performed because the
        user has not been
        authenticated.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_LOGGED_ON">
      <summary>
        The operation being requested
        was not performed because the
        user has not logged on to the
        network.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CONTINUE">
      <summary>
        Return that wants caller to
        continue with work in
        progress.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ALREADY_INITIALIZED">
      <summary>
        An attempt was made to perform
        an initialization operation
        when initialization has
        already been completed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_MORE_DEVICES">
      <summary>
        No more local devices.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_ALL_ASSIGNED">
      <summary>
        Indicates not all privileges
        referenced are assigned to the
        caller. This allows, for
        example, all privileges to be
        disabled without having to
        know exactly which privileges
        are assigned.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SOME_NOT_MAPPED">
      <summary>
        Some of the information to be
        mapped has not been
        translated.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_QUOTAS_FOR_ACCOUNT">
      <summary>
        No system quota limits are
        specifically set for this
        account.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOCAL_USER_SESSION_KEY">
      <summary>
        A user session key was
        requested for a local RPC
        connection. The session key
        returned is a constant value
        and not unique to this
        connection.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NULL_LM_PASSWORD">
      <summary>
        The Windows NT password is too
        complex to be converted to a
        Windows-networking password.
        The Windows-networking
        password returned is a NULL
        string.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNKNOWN_REVISION">
      <summary>
        Indicates an encountered or
        specified revision number is
        not one known by the service.
        The service may not be aware
        of a more recent revision.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REVISION_MISMATCH">
      <summary>
        Indicates two revision levels
        are incompatible.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_OWNER">
      <summary>
        Indicates a particular
        Security ID cannot be assigned
        as the owner of an object.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PRIMARY_GROUP">
      <summary>
        Indicates a particular
        Security ID cannot be assigned
        as the primary group of an
        object.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_IMPERSONATION_TOKEN">
      <summary>
        An attempt was made to operate
        on an impersonation token by a
        thread was not currently
        impersonating a client.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANT_DISABLE_MANDATORY">
      <summary>
        A mandatory group cannot be
        disabled.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_LOGON_SERVERS">
      <summary>
        There are currently no logon
        servers available to service
        the logon request.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SUCH_LOGON_SESSION">
      <summary>
        A specified logon session does
        not exist. It may already have
        been terminated.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SUCH_PRIVILEGE">
      <summary>
        A specified privilege does not
        exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRIVILEGE_NOT_HELD">
      <summary>
        A required privilege is not
        held by the client.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_ACCOUNT_NAME">
      <summary>
        The name provided is not a
        properly formed account name.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_USER_EXISTS">
      <summary>
        The specified user already
        exists.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SUCH_USER">
      <summary>
        The specified user does not
        exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_GROUP_EXISTS">
      <summary>
        The specified group already
        exists.

      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SUCH_GROUP">
      <summary>
        The specified group does not
        exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MEMBER_IN_GROUP">
      <summary>
        The specified user account is
        already in the specified group
        account. Also used to indicate
        a group can not be deleted
        because it contains a member.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MEMBER_NOT_IN_GROUP">
      <summary>
        The specified user account is
        not a member of the specified
        group account.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LAST_ADMIN">
      <summary>
        Indicates the requested
        operation would disable or
        delete the last remaining
        administration account. This
        is not allowed to prevent
        creating a situation where the
        system will not be
        administrable.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WRONG_PASSWORD">
      <summary>
        When trying to update a
        password, this return status
        indicates the value provided
        as the current password is
        incorrect.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ILL_FORMED_PASSWORD">
      <summary>
        When trying to update a
        password, this return status
        indicates the value provided
        for the new password contains
        values not allowed in
        passwords.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PASSWORD_RESTRICTION">
      <summary>
        When trying to update a
        password, this status
        indicates that some password
        update rule was violated. For
        example, the password may not
        meet length criteria.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOGON_FAILURE">
      <summary>
        The attempted logon is
        invalid. This is due to either
        a bad user name or
        authentication information.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ACCOUNT_RESTRICTION">
      <summary>
        Indicates a referenced user
        name and authentication
        information are valid, but
        some user account restriction
        has prevented successful
        authentication (such as time-
        of-day restrictions).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_LOGON_HOURS">
      <summary>
        The user account has time
        restrictions and cannot be
        logged onto at this time.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_WORKSTATION">
      <summary>
        The user account is restricted
        and cannot be used to log on
        from the source workstation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PASSWORD_EXPIRED">
      <summary>
        The user account's password
        has expired.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ACCOUNT_DISABLED">
      <summary>
        The referenced account is
        currently disabled and cannot
        be logged on to.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NONE_MAPPED">
      <summary>
        None of the information to be
        mapped has been translated.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_LUIDS_REQUESTED">
      <summary>
        The number of LUID requested
        cannot be allocated with a
        single allocation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LUIDS_EXHAUSTED">
      <summary>
        Indicates there are no more
        LUID to allocate.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SUB_AUTHORITY">
      <summary>
        Indicates the sub-authority
        value is invalid for the
        particular use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_ACL">
      <summary>
        Indicates the ACL structure is
        not valid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SID">
      <summary>
        Indicates the SID structure is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SECURITY_DESCR">
      <summary>
        Indicates the
        SECURITY_DESCRIPTOR structure
        is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_INHERITANCE_ACL">
      <summary>
        Indicates that an attempt to
        build either an inherited ACL
        or ACE did not succeed. One of
        the more probable causes is
        the replacement of a CreatorId
        with an SID that didn't fit
        into the ACE or ACL.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVER_DISABLED">
      <summary>
        The GUID allocation server is
        already disabled at the
        moment.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVER_NOT_DISABLED">
      <summary>
        The GUID allocation server is
        already enabled at the moment.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_ID_AUTHORITY">
      <summary>
        The value provided is an
        invalid value for an
        identifier authority.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ALLOTTED_SPACE_EXCEEDED">
      <summary>
        When a block of memory is
        allotted for future updates,
        such as the memory allocated
        to hold discretionary access
        control and primary group
        information, successive
        updates may exceed the amount
        of memory originally allotted.
        Since quota may already have
        been charged to several
        processes that have handles of
        the object, it is not
        reasonable to alter the size
        of the allocated memory.
        Instead, a request that
        requires more memory than has
        been allotted must fail and
        the
        ERROR_ALLOTTED_SPACE_EXCEEDED
        error returned.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_GROUP_ATTRIBUTES">
      <summary>
        The specified attributes are
        invalid, or incompatible with
        the attributes for the group
        as a whole.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_IMPERSONATION_LEVEL">
      <summary>
        A specified impersonation
        level is invalid. Also used to
        indicate a required
        impersonation level was not
        provided.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANT_OPEN_ANONYMOUS">
      <summary>
        An attempt was made to open an
        anonymous level token.
        Anonymous tokens cannot be
        opened.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_VALIDATION_CLASS">
      <summary>
        The requested validation
        information class is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_TOKEN_TYPE">
      <summary>
        The type of token object is
        inappropriate for its
        attempted use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SECURITY_ON_OBJECT">
      <summary>
        Indicates an attempt was made
        to operate on the security of
        an object that does not have
        security associated with it.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANT_ACCESS_DOMAIN_INFO">
      <summary>
        Indicates a domain controller
        could not be contacted or that
        objects within the domain are
        protected and necessary
        information could not be
        retrieved.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SERVER_STATE">
      <summary>
        Indicates the Sam Server was
        in the wrong state to perform
        the desired operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_DOMAIN_STATE">
      <summary>
        Indicates the domain is in the
        wrong state to perform the
        desired operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_DOMAIN_ROLE">
      <summary>
        Indicates the requested
        operation cannot be completed
        with the domain in its present
        role.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SUCH_DOMAIN">
      <summary>
        The specified domain does not
        exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DOMAIN_EXISTS">
      <summary>
        The specified domain already
        exists.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DOMAIN_LIMIT_EXCEEDED">
      <summary>
        An attempt to exceed the limit
        on the number of domains per
        server for this release.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INTERNAL_DB_CORRUPTION">
      <summary>
        This error indicates the
        requested operation cannot be
        completed due to a
        catastrophic media failure or
        on-disk data structure
        corruption.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INTERNAL_ERROR">
      <summary>
        This error indicates the SAM
        server has encounterred an
        internal consistency error in
        its database. This
        catastrophic failure prevents
        further operation of SAM.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_GENERIC_NOT_MAPPED">
      <summary>
        Indicates generic access types
        were contained in an access
        mask that should already be
        mapped to non-generic access
        types.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_DESCRIPTOR_FORMAT">
      <summary>
        Indicates a security
        descriptor is not in the
        required format (absolute or
        self-relative).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_LOGON_PROCESS">
      <summary>
        The requested action is
        restricted for use by logon
        processes only. The calling
        process has not registered as
        a logon process.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOGON_SESSION_EXISTS">
      <summary>
        An attempt was made to start a
        new session manager or LSA
        logon session with an ID
        already in use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SUCH_PACKAGE">
      <summary>
        A specified authentication
        package is unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_LOGON_SESSION_STATE">
      <summary>
        The logon session is not in a
        state consistent with the
        requested operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOGON_SESSION_COLLISION">
      <summary>
        The logon session ID is
        already in use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_LOGON_TYPE">
      <summary>
        Indicates an invalid value has
        been provided for LogonType
        has been requested.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANNOT_IMPERSONATE">
      <summary>
        Indicates that an attempt was
        made to impersonate via a
        named pipe was not yet read
        from.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RXACT_INVALID_STATE">
      <summary>
        Indicates that the transaction
        state of a registry sub-tree
        is incompatible with the
        requested operation. For
        example, a request has been
        made to start a new
        transaction with one already
        in progress, or a request to
        apply a transaction when one
        is not currently in progress.
        This status value is returned
        by the runtime library (RTL)
        registry transaction package
        (RXact).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RXACT_COMMIT_FAILURE">
      <summary>
        Indicates an error occurred
        during a registry transaction
        commit. The database has been
        left in an unknown state. The
        state of the registry
        transaction is left as
        COMMITTING. This status value
        is returned by the runtime
        library (RTL) registry
        transaction package (RXact).
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SPECIAL_ACCOUNT">
      <summary>
        Indicates an operation was
        attempted on a built-in
        (special) SAM account that is
        incompatible with built-in
        accounts. For example, built-
        in accounts cannot be renamed
        or deleted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SPECIAL_GROUP">
      <summary>
        The requested operation cannot
        be performed on the specified
        group because it is a built-in
        special group.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SPECIAL_USER">
      <summary>
        The requested operation cannot
        be performed on the specified
        user because it is a built-in
        special user.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MEMBERS_PRIMARY_GROUP">
      <summary>
        Indicates a member cannot be
        removed from a group because
        the group is currently the
        member's primary group.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOKEN_ALREADY_IN_USE">
      <summary>
        An attempt was made to
        establish a token for use as a
        primary token but the token is
        already in use. A token can
        only be the primary token of
        one process at a time.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SUCH_ALIAS">
      <summary>
        The specified alias does not
        exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MEMBER_NOT_IN_ALIAS">
      <summary>
        The specified account name is
        not a member of the alias.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MEMBER_IN_ALIAS">
      <summary>
        The specified account name is
        not a member of the alias.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ALIAS_EXISTS">
      <summary>
        The specified alias already
        exists.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOGON_NOT_GRANTED">
      <summary>
        A requested type of logon,
        such as Interactive, Network,
        or Service, is not granted by
        the target system's local
        security policy. The system
        administrator can grant the
        required form of logon.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_SECRETS">
      <summary>
        The maximum number of secrets
        that can be stored in a single
        system was exceeded.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SECRET_TOO_LONG">
      <summary>
        The length of a secret exceeds
        the maximum length allowed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INTERNAL_DB_ERROR">
      <summary>
        The Local Security Authority
        (LSA) database contains in
        internal inconsistency.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_CONTEXT_IDS">
      <summary>
        During a logon attempt, the
        user's security context
        accumulated too many security
        IDs. Remove the user from some
        groups or aliases to reduce
        the number of security ids to
        incorporate into the security
        context.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOGON_TYPE_NOT_GRANTED">
      <summary>
        A user has requested a type of
        logon, such as interactive or
        network, that was not granted.
        An administrator has control
        over who may logon
        interactively and through the
        network.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NT_CROSS_ENCRYPTION_REQUIRED">
      <summary>
        An attempt was made to change
        a user password in the
        security account manager
        without providing the
        necessary NT cross-encrypted
        password.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SUCH_MEMBER">
      <summary>
        A new member cannot be added
        to an alias because the member
        does not exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_MEMBER">
      <summary>
        A new member could not be
        added to an alias because the
        member has the wrong account
        type.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TOO_MANY_SIDS">
      <summary>
        Too many SIDs specified.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LM_CROSS_ENCRYPTION_REQUIRED">
      <summary>
        An attempt was made to change
        a user password in the
        security account manager
        without providing the required
        LM cross-encrypted password.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_INHERITANCE">
      <summary>
        Indicates an ACL contains no
        inheritable components.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FILE_CORRUPT">
      <summary>
        The file or directory is
        damaged and nonreadable.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DISK_CORRUPT">
      <summary>
        The disk structure is damaged
        and nonreadable.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_USER_SESSION_KEY">
      <summary>
        There is no user session key
        for the specified logon
        session.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LICENSE_QUOTA_EXCEEDED">
      <summary>
        The service being accessed is
        licensed for a particular
        number of connections. No more
        connections can be made to the
        service at this time because
        there are already as many
        connections as the service can
        accept.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_WINDOW_HANDLE">
      <summary>
        The window handle invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_MENU_HANDLE">
      <summary>
        The menu handle is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_CURSOR_HANDLE">
      <summary>
        The cursor handle is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_ACCEL_HANDLE">
      <summary>
        Invalid accelerator-table
        handle.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_HOOK_HANDLE">
      <summary>
        The hook handle is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_DWP_HANDLE">
      <summary>
        The DeferWindowPos handle is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TLW_WITH_WSCHILD">
      <summary>
        CreateWindow failed, creating
        top-level window with WS_CHILD
        style.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CANNOT_FIND_WND_CLASS">
      <summary>
        Cannot find window class.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WINDOW_OF_OTHER_THREAD">
      <summary>
        Invalid window, belongs to
        other thread.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_HOTKEY_ALREADY_REGISTERED">
      <summary>
        Hotkey is already registered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CLASS_ALREADY_EXISTS">
      <summary>
        Class already exists.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CLASS_DOES_NOT_EXIST">
      <summary>
        Class does not exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CLASS_HAS_WINDOWS">
      <summary>
        Class still has open windows.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_INDEX">
      <summary>
        The index is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_ICON_HANDLE">
      <summary>
        The icon handle is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRIVATE_DIALOG_INDEX">
      <summary>
        Using private DIALOG window
        words.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LISTBOX_ID_NOT_FOUND">
      <summary>
        List box ID not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_WILDCARD_CHARACTERS">
      <summary>
        No wildcard characters found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CLIPBOARD_NOT_OPEN">
      <summary>
        Thread doesn't have clipboard
        open.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_HOTKEY_NOT_REGISTERED">
      <summary>
        Hotkey is not registered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WINDOW_NOT_DIALOG">
      <summary>
        The window is not a valid
        dialog window.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CONTROL_ID_NOT_FOUND">
      <summary>
        Control ID not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_COMBOBOX_MESSAGE">
      <summary>
        Invalid Message, combo box
        doesn't have an edit control.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WINDOW_NOT_COMBOBOX">
      <summary>
        The window is not a combo box.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_EDIT_HEIGHT">
      <summary>
        Height must be less than 256.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DC_NOT_FOUND">
      <summary>
        Invalid HDC passed to
        ReleaseDC.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_HOOK_FILTER">
      <summary>
        The hook filter type is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_FILTER_PROC">
      <summary>
        The filter proc is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_HOOK_NEEDS_HMOD">
      <summary>
        Cannot set non-local hook
        without an module handle.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_GLOBAL_ONLY_HOOK">
      <summary>
        This hook can only be set
        globally.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_JOURNAL_HOOK_SET">
      <summary>
        The journal hook is already
        installed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_HOOK_NOT_INSTALLED">
      <summary>
        Hook is not installed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_LB_MESSAGE">
      <summary>
        The message for single-
        selection list box is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SETCOUNT_ON_BAD_LB">
      <summary>
        LB_SETCOUNT sent to non-lazy
        list box.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LB_WITHOUT_TABSTOPS">
      <summary>
        This list box doesn't support
        tab stops.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DESTROY_OBJECT_OF_OTHER_THREAD">
      <summary>
        Cannot destroy object created
        by another thread.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CHILD_WINDOW_MENU">
      <summary>
        Child windows can't have
        menus.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SYSTEM_MENU">
      <summary>
        Window does not have system
        menu.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_MSGBOX_STYLE">
      <summary>
        The message box style is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SPI_VALUE">
      <summary>
        The SPI_* parameter is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SCREEN_ALREADY_LOCKED">
      <summary>
        Screen already locked.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_HWNDS_HAVE_DIFFERENT_PARENT">
      <summary>
        All DeferWindowPos HWNDs must
        have same parent.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_CHILD_WINDOW">
      <summary>
        Window is not a child window.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_GW_COMMAND">
      <summary>
        The GW_* command is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_THREAD_ID">
      <summary>
        The thread ID is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NON_MDICHILD_WINDOW">
      <summary>
        DefMDIChildProc called with a
        non-MDI child window.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_POPUP_ALREADY_ACTIVE">
      <summary>
        Pop-up menu already active.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SCROLLBARS">
      <summary>
        Window does not have scroll
        bars.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SCROLLBAR_RANGE">
      <summary>
        Scrollbar range greater than
        0x7FFF.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SHOWWIN_COMMAND">
      <summary>
        The ShowWindow command is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_SYSTEM_RESOURCES">
      <summary>
        Insufficient system resources
        exist to complete the
        requested service.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NONPAGED_SYSTEM_RESOURCES">
      <summary>
        Insufficient system resources
        exist to complete the
        requested service.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PAGED_SYSTEM_RESOURCES">
      <summary>
        Insufficient system resources
        exist to complete the
        requested service.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WORKING_SET_QUOTA">
      <summary>
        Insufficient quota to complete
        the requested service.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PAGEFILE_QUOTA">
      <summary>
        Insufficient quota to complete
        the requested service.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_COMMITMENT_LIMIT">
      <summary>
        The paging file is too small
        for this operation to
        complete.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_MENU_ITEM_NOT_FOUND">
      <summary>
        A menu item was not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_KEYBOARD_HANDLE">
      <summary>
        Invalid keyboard layout
        handle.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_HOOK_TYPE_NOT_ALLOWED">
      <summary>
        Hook type not allowed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EVENTLOG_FILE_CORRUPT">
      <summary>
        One of the Eventlog logfiles
        is damaged.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EVENTLOG_CANT_START">
      <summary>
        No event log file could be
        opened, so the event logging
        service did not start.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_LOG_FILE_FULL">
      <summary>
        The event log file is full.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_EVENTLOG_FILE_CHANGED">
      <summary>
        The event log file has changed
        between reads.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_STRING_BINDING">
      <summary>
        The string binding is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_WRONG_KIND_OF_BINDING">
      <summary>
        The binding handle is the
        incorrect type.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_BINDING">
      <summary>
        The binding handle is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_PROTSEQ_NOT_SUPPORTED">
      <summary>
        The RPC protocol sequence is
        not supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_RPC_PROTSEQ">
      <summary>
        The RPC protocol sequence is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_STRING_UUID">
      <summary>
        The string UUID is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_ENDPOINT_FORMAT">
      <summary>
        The endpoint format is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_NET_ADDR">
      <summary>
        The network address is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_ENDPOINT_FOUND">
      <summary>
        No endpoint was found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_TIMEOUT">
      <summary>
        The timeout value is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_OBJECT_NOT_FOUND">
      <summary>
        The object UUID was not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_ALREADY_REGISTERED">
      <summary>
        The object UUID already
        registered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_TYPE_ALREADY_REGISTERED">
      <summary>
        The type UUID is already
        registered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_ALREADY_LISTENING">
      <summary>
        The server is already
        listening.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_PROTSEQS_REGISTERED">
      <summary>
        No protocol sequences were
        registered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NOT_LISTENING">
      <summary>
        The server is not listening.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNKNOWN_MGR_TYPE">
      <summary>
        The manager type is unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNKNOWN_IF">
      <summary>
        The interface is unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_BINDINGS">
      <summary>
        There are no bindings.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_PROTSEQS">
      <summary>
        There are no protocol
        sequences.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_CANT_CREATE_ENDPOINT">
      <summary>
        The endpoint cannot be
        created.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_OUT_OF_RESOURCES">
      <summary>
        Not enough resources are
        available to complete this
        operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_SERVER_UNAVAILABLE">
      <summary>
        The server is unavailable.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_SERVER_TOO_BUSY">
      <summary>
        The server is too busy to
        complete this operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_NETWORK_OPTIONS">
      <summary>
        The network options are
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_CALL_ACTIVE">
      <summary>
        There is not a remote
        procedure call active in this
        thread.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_CALL_FAILED">
      <summary>
        The remote procedure call
        failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_CALL_FAILED_DNE">
      <summary>
        The remote procedure call
        failed and did not execute.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_PROTOCOL_ERROR">
      <summary>
        An RPC protocol error
        occurred.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNSUPPORTED_TRANS_SYN">
      <summary>
        The transfer syntax is not
        supported by the server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_SERVER_OUT_OF_MEMORY">
      <summary>
        The server has insufficient
        memory to complete this
        operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNSUPPORTED_TYPE">
      <summary>
        The type UUID is not
        supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_TAG">
      <summary>
        The tag is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_BOUND">
      <summary>
        The array bounds are invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_ENTRY_NAME">
      <summary>
        The binding does not contain
        an entry name.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_NAME_SYNTAX">
      <summary>
        The name syntax is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNSUPPORTED_NAME_SYNTAX">
      <summary>
        The name syntax is not
        supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UUID_NO_ADDRESS">
      <summary>
        No network address is
        available to use to construct
        a UUID.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_DUPLICATE_ENDPOINT">
      <summary>
        The endpoint is a duplicate.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNKNOWN_AUTHN_TYPE">
      <summary>
        The authentication type is
        unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_MAX_CALLS_TOO_SMALL">
      <summary>
        The maximum number of calls is
        too small.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_STRING_TOO_LONG">
      <summary>
        The string is too long.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_PROTSEQ_NOT_FOUND">
      <summary>
        The RPC protocol sequence was
        not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_PROCNUM_OUT_OF_RANGE">
      <summary>
        The procedure number is out of
        range.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_BINDING_HAS_NO_AUTH">
      <summary>
        The binding does not contain
        any authentication
        information.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNKNOWN_AUTHN_SERVICE">
      <summary>
        The authentication service is
        unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNKNOWN_AUTHN_LEVEL">
      <summary>
        The authentication level is
        unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_AUTH_IDENTITY">
      <summary>
        The security context is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNKNOWN_AUTHZ_SERVICE">
      <summary>
        The authorization service is
        unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.EPT_S_INVALID_ENTRY">
      <summary>
        The entry is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.EPT_S_CANT_PERFORM_OP">
      <summary>
        The operation cannot be
        performed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.EPT_S_NOT_REGISTERED">
      <summary>
        There are no more endpoints
        available from the endpoint
        mapper.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INCOMPLETE_NAME">
      <summary>
        The entry name is incomplete.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_VERS_OPTION">
      <summary>
        The version option is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_MORE_MEMBERS">
      <summary>
        There are no more members.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NOT_ALL_OBJS_UNEXPORTED">
      <summary>
        There is nothing to unexport.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INTERFACE_NOT_FOUND">
      <summary>
        The interface was not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_ENTRY_ALREADY_EXISTS">
      <summary>
        The entry already exists.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_ENTRY_NOT_FOUND">
      <summary>
        The entry is not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NAME_SERVICE_UNAVAILABLE">
      <summary>
        The name service is
        unavailable.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_CANNOT_SUPPORT">
      <summary>
        The requested operation is not
        supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_CONTEXT_AVAILABLE">
      <summary>
        No security context is
        available to allow
        impersonation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INTERNAL_ERROR">
      <summary>
        An internal error occurred in
        RPC.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_ZERO_DIVIDE">
      <summary>
        The server attempted an
        integer divide by zero.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_ADDRESS_ERROR">
      <summary>
        An addressing error occurred
        in the server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_FP_DIV_ZERO">
      <summary>
        A floating point operation at
        the server caused a divide by
        zero.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_FP_UNDERFLOW">
      <summary>
        A floating point underflow
        occurred at the server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_FP_OVERFLOW">
      <summary>
        A floating point overflow
        occurred at the server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_NO_MORE_ENTRIES">
      <summary>
        The list of servers available
        for auto_handle binding was
        exhausted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_SS_CHAR_TRANS_OPEN_FAIL">
      <summary>
        The file designated by
        DCERPCCHARTRANS cannot be
        opened.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_SS_CHAR_TRANS_SHORT_FILE">
      <summary>
        The file containing the
        character translation table
        has fewer than 512 bytes.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_SS_IN_NULL_CONTEXT">
      <summary>
        A null context handle is
        passed as an [in] parameter.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_SS_CONTEXT_MISMATCH">
      <summary>
        The context handle does not
        match any known context
        handles.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_SS_CONTEXT_DAMAGED">
      <summary>
        The context handle changed
        during a call.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_SS_HANDLES_MISMATCH">
      <summary>
        The binding handles passed to
        a remote procedure call do not
        match.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_SS_CANNOT_GET_CALL_HANDLE">
      <summary>
        The stub is unable to get the
        call handle.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_NULL_REF_POINTER">
      <summary>
        A null reference pointer was
        passed to the stub.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_ENUM_VALUE_OUT_OF_RANGE">
      <summary>
        The enumeration value is out
        of range.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_BYTE_COUNT_TOO_SMALL">
      <summary>
        The byte count is too small.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_BAD_STUB_DATA">
      <summary>
        The stub received bad data.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_USER_BUFFER">
      <summary>
        The supplied user buffer is
        invalid for the requested
        operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNRECOGNIZED_MEDIA">
      <summary>
        The disk media is not
        recognized. It may not be
        formatted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_TRUST_LSA_SECRET">
      <summary>
        The workstation does not have
        a trust secret.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_TRUST_SAM_ACCOUNT">
      <summary>
        The domain controller does not
        have an account for this
        workstation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TRUSTED_DOMAIN_FAILURE">
      <summary>
        The trust relationship between
        the primary domain and the
        trusted domain failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TRUSTED_RELATIONSHIP_FAILURE">
      <summary>
        The trust relationship between
        this workstation and the
        primary domain failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TRUST_FAILURE">
      <summary>
        The network logon failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_CALL_IN_PROGRESS">
      <summary>
        A remote procedure call is
        already in progress for this
        thread.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NETLOGON_NOT_STARTED">
      <summary>
        An attempt was made to logon,
        but the network logon service
        was not started.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ACCOUNT_EXPIRED">
      <summary>
        The user's account has
        expired.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REDIRECTOR_HAS_OPEN_HANDLES">
      <summary>
        The redirector is in use and
        cannot be unloaded.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINTER_DRIVER_ALREADY_INSTALLED">
      <summary>
        The specified printer driver
        is already installed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNKNOWN_PORT">
      <summary>
        The specified port is unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNKNOWN_PRINTER_DRIVER">
      <summary>
        The printer driver is unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNKNOWN_PRINTPROCESSOR">
      <summary>
        The print processor is
        unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_SEPARATOR_FILE">
      <summary>
        The specified separator file
        is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PRIORITY">
      <summary>
        The specified priority is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PRINTER_NAME">
      <summary>
        The printer name is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINTER_ALREADY_EXISTS">
      <summary>
        The printer already exists.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PRINTER_COMMAND">
      <summary>
        The printer command is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_DATATYPE">
      <summary>
        The specified datatype is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_ENVIRONMENT">
      <summary>
        The Environment specified is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_MORE_BINDINGS">
      <summary>
        There are no more bindings.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT">
      <summary>
        The account used is an
        interdomain trust account. Use
        your normal user account or
        remote user account to access
        this server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT">
      <summary>
        The account used is a
        workstation trust account. Use
        your normal user account or
        remote user account to access
        this server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOLOGON_SERVER_TRUST_ACCOUNT">
      <summary>
        The account used is an server
        trust account. Use your normal
        user account or remote user
        account to access this server.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DOMAIN_TRUST_INCONSISTENT">
      <summary>
        The name or security ID (SID)
        of the domain specified is
        inconsistent with the trust
        information for that domain.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SERVER_HAS_OPEN_HANDLES">
      <summary>
        The server is in use and
        cannot be unloaded.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RESOURCE_DATA_NOT_FOUND">
      <summary>
        The specified image file did
        not contain a resource
        section.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RESOURCE_TYPE_NOT_FOUND">
      <summary>
        The specified resource type
        can not be found in the image
        file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RESOURCE_NAME_NOT_FOUND">
      <summary>
        The specified resource name
        can not be found in the image
        file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RESOURCE_LANG_NOT_FOUND">
      <summary>
        The specified resource
        language ID cannot be found in
        the image file.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_ENOUGH_QUOTA">
      <summary>
        Not enough quota is available
        to process this command.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_INTERFACES">
      <summary>

      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_CALL_CANCELLED">
      <summary>
        The server was altered while
        processing this call.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_BINDING_INCOMPLETE">
      <summary>
        The binding handle does not
        contain all required
        information.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_COMM_FAILURE">
      <summary>
        Communications failure.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UNSUPPORTED_AUTHN_LEVEL">
      <summary>
        The requested authentication
        level is not supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NO_PRINC_NAME">
      <summary>
        No principal name registered.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NOT_RPC_ERROR">
      <summary>
        The error specified is not a
        valid Windows RPC error code.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_UUID_LOCAL_ONLY">
      <summary>
        A UUID that is valid only on
        this computer has been
        allocated.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_SEC_PKG_ERROR">
      <summary>
        A security package specific
        error occurred.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_NOT_CANCELLED">
      <summary>
        Thread is not cancelled.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_INVALID_ES_ACTION">
      <summary>
        Invalid operation on the
        encoding/decoding handle.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_WRONG_ES_VERSION">
      <summary>
        Incompatible version of the
        serializing package.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_WRONG_STUB_VERSION">
      <summary>
        Incompatible version of the
        RPC stub.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_INVALID_PIPE_OBJECT">
      <summary>
        The idl pipe object is invalid
        or corrupted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_INVALID_PIPE_OPERATION">
      <summary>
        The operation is invalid for a
        given idl pipe object.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_X_WRONG_PIPE_VERSION">
      <summary>
        The idl pipe version is not
        supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_GROUP_MEMBER_NOT_FOUND">
      <summary>
        The group member was not
        found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.EPT_S_CANT_CREATE">
      <summary>
        The endpoint mapper database
        could not be created.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_INVALID_OBJECT">
      <summary>
        The object universal unique
        identifier (UUID) is the nil
        UUID.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_TIME">
      <summary>
        The specified time is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_FORM_NAME">
      <summary>
        The specified Form name is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_FORM_SIZE">
      <summary>
        The specified Form size is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ALREADY_WAITING">
      <summary>
        The specified Printer handle
        is already being waited on.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINTER_DELETED">
      <summary>
        The specified Printer has been
        deleted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PRINTER_STATE">
      <summary>
        The state of the Printer is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PASSWORD_MUST_CHANGE">
      <summary>
        The user must change his
        password before he logs on the
        first time.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DOMAIN_CONTROLLER_NOT_FOUND">
      <summary>
        Could not find the domain
        controller for this domain.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ACCOUNT_LOCKED_OUT">
      <summary>
        The referenced account is
        currently locked out and may
        not be logged on to.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.OR_INVALID_OXID">
      <summary>
        The object exporter specified
        was not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.OR_INVALID_OID">
      <summary>
        The object specified was not
        found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.OR_INVALID_SET">
      <summary>
        The object resolver set
        specified was not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.RPC_S_SEND_INCOMPLETE">
      <summary>
        Some data remains to be sent
        in the request buffer.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PIXEL_FORMAT">
      <summary>
        The pixel format is invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_DRIVER">
      <summary>
        The specified driver is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_WINDOW_STYLE">
      <summary>
        The window style or class
        attribute is invalid for this
        operation.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_METAFILE_NOT_SUPPORTED">
      <summary>
        The requested metafile
        operation is not supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_TRANSFORM_NOT_SUPPORTED">
      <summary>
        The requested transformation
        operation is not supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CLIPPING_NOT_SUPPORTED">
      <summary>
        The requested clipping
        operation is not supported.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_NETWORK2">
      <summary>
        The network is not present or
        not started.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_BAD_USERNAME">
      <summary>
        The specified user name is
        invalid.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NOT_CONNECTED">
      <summary>
        This network connection does
        not exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_OPEN_FILES">
      <summary>
        There are open files or
        requests pending on this
        connection.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_ACTIVE_CONNECTIONS">
      <summary>
        Active connections still
        exist.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_DEVICE_IN_USE">
      <summary>
        The device is in use by an
        active process and cannot be
        disconnected.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_UNKNOWN_PRINT_MONITOR">
      <summary>
        The specified print monitor is
        unknown.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINTER_DRIVER_IN_USE">
      <summary>
        The specified printer driver
        is currently in use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SPOOL_FILE_NOT_FOUND">
      <summary>
        The spool file was not found.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SPL_NO_STARTDOC">
      <summary>
        A StartDocPrinter call was not
        issued.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SPL_NO_ADDJOB">
      <summary>
        An AddJob call was not issued.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED">
      <summary>
        The specified print
        processor has already been
        installed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINT_MONITOR_ALREADY_INSTALLED">
      <summary>
        The specified print monitor
        has already been installed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INVALID_PRINT_MONITOR">
      <summary>
        The specified print monitor
        does not have the required
        functions.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINT_MONITOR_IN_USE">
      <summary>
        The specified print monitor is
        currently in use.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_PRINTER_HAS_JOBS_QUEUED">
      <summary>
        The requested operation is not
        allowed when there are jobs
        queued to the printer.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SUCCESS_REBOOT_REQUIRED">
      <summary>
        The requested operation is
        successful. Changes will not
        be effective until the system
        is rebooted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_SUCCESS_RESTART_REQUIRED">
      <summary>
        The requested operation is
        successful. Changes will not
        be effective until the service
        is restarted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_WINS_INTERNAL">
      <summary>
        WINS encountered an error
        while processing the command.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_CAN_NOT_DEL_LOCAL_WINS">
      <summary>
        The local WINS can not be
        deleted.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_STATIC_INIT">
      <summary>
        The importation from the file
        failed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_INC_BACKUP">
      <summary>
        The backup failed. Was a full
        backup done before?
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_FULL_BACKUP">
      <summary>
        The backup failed. Check the
        directory that you are backing
        the database to.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_REC_NON_EXISTENT">
      <summary>
        The name does not exist in the
        WINS database.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_RPL_NOT_ALLOWED">
      <summary>
        Replication with a non-
        configured partner is not
        allowed.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.GetLastErrorAPI.ErrorCodes.ERROR_NO_BROWSER_SERVERS_FOUND">
      <summary>
        The list of servers for this
        workgroup is not currently
        available.
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Win32.TaskManager">
      <summary>
        Windows的任务管理器的接口
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Win32.TaskManager.CPU_Usages">
      <summary>
        Using this property you can display the CPU usage (over all CPU usage like you would find on the task manager)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.TaskManager.ProcessUsageDetails">
      <summary>
        类似于任务管理器的函数：Memory, CPU, ProcessName, PID, CommandLine
      </summary>
      <returns>Memory, CPU</returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.TaskManager.ProcessUsage">
      <summary>
        获取CPU的使用率
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Win32.PriorityClass">
      <summary>
        Process priority class helper.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.PriorityClass.GetCurrentProcess">
      <summary>
        当前进程句柄
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.PriorityClass.IDLE_PRIORITY_CLASS">
      <summary>
        新进程应该有非常低的优先级——只有在系统空闲的时候才能运行。基本值是4
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.PriorityClass.HIGH_PRIORITY_CLASS">
      <summary>
        新进程有非常高的优先级，它优先于大多数应用程序。基本值是13。注意尽量避免采用这个优先级
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.PriorityClass.NORMAL_PRIORITY_CLASS">
      <summary>
        标准优先级。如进程位于前台，则基本值是9；如在后台，则优先值是7
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.PriorityClass.PriorityClass(System.Int32)">
      <summary>
        Set Priority Class for current process.
      </summary>
      <param name="priority">
        <see cref="F:Microsoft.VisualBasic.Win32.PriorityClass.IDLE_PRIORITY_CLASS"/>, <see cref="F:Microsoft.VisualBasic.Win32.PriorityClass.HIGH_PRIORITY_CLASS"/>, <see cref="F:Microsoft.VisualBasic.Win32.PriorityClass.NORMAL_PRIORITY_CLASS"/>
      </param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Win32.Win32File">
      <summary>
        .NET 2.0 Workaround for PathTooLongException
      </summary>
      <remarks>
        http://www.codeproject.com/Articles/22013/NET-Workaround-for-PathTooLongException
      </remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Win32.Win32File.ERROR_ALREADY_EXISTS">
      <summary>
        Error
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.Win32File.GetMode(System.IO.FileMode)">
      <summary>
        Converts the filemode constant to win32 constant
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.Win32File.GetAccess(System.IO.FileAccess)">
      <summary>
        Converts the FileAccess constant to win32 constant
      </summary>
      <param name="access"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.Win32File.GetShare(System.IO.FileShare)">
      <summary>
        Converts the FileShare constant to win32 constant
      </summary>
      <param name="share"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.Win32File.OpenRead(System.String)">
      <summary>
        Open readonly file mode open(String, FileMode.Open, FileAccess.Read, FileShare.Read)
      </summary>
      <param name="filepath"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.Win32File.OpenWrite(System.String)">
      <summary>
        open writable open(String, FileMode.OpenOrCreate, FileAccess.Write, FileShare.None).
      </summary>
      <param name="filepath"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.Win32.WindowsServices">
      <summary>
        Windows event logger services &amp; installer services.
        (这个模块主要的功能是日志服务，包括在安装阶段对日志记录的创建以及自定义url协议的创建等，
        请注意，这个模块之中的大部分的功能都需要你的应用程序是在管理员权限之下运行的)
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Win32.WindowsServices.ServicesLogs">
      <summary>
        Windows system logging services interface, you can viewing the application log events from Event Viewer:
        Explorer >> Manage >> Event Viewer >> Applications and Services Logs >> &lt;Your_Product>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Win32.WindowsServices.Initialized">
      <summary>
        Does component <see cref="P:Microsoft.VisualBasic.Win32.WindowsServices.ServicesLogs"/> have been initialized?
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.WindowsServices.Initialize">
      <summary>
        You should execute the log category entry creates job under the administrators privileges!
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.WindowsServices.Initialize(System.String)">
      <summary>
        You should execute the log category entry creates job under the administrators privileges!
      </summary>
      <param name="ServicesName"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.WindowsServices.Initialize(System.String,System.String)">
      <summary>
        You should execute the log category entry creates job under the administrators privileges!
      </summary>
      <param name="ServicesName"></param>
      <param name="Product">
        This value is usually the property value of <see cref="P:Microsoft.VisualBasic.App.AssemblyName"/>
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.WindowsServices.LogsInstaller(System.String,System.String[])">
      <summary>
        You should execute the log category entry creates job under the administrators privileges!
      </summary>
      <param name="ServicesName"></param>
      <param name="Products">
        This value is usually the property value of <see cref="P:Microsoft.VisualBasic.App.AssemblyName"/>
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Win32.WindowsServices.RegisterURLProtocol(System.String,System.String,System.String)">
      <summary>
        (**** Please notice, that the application has To have admin privileges To be able To write the needed stuff into registry. ****)

        Everyone knows HTTP-URLs. Windows Shell also enables to define own ``URL protocols``.
        Some programs (like Visual Studio Help ``ms-help://`` ... or Steam ``steam://`` ...) take advantage of this feature.
        By creating some registry entries one is able to set up a self-made URL protocol.
        This allows to access your applications by URL (originating from every software).

        Please notice, that **the application has To have admin privileges To be able To write the needed stuff into registry**.
        You can test your application very easy by opening Windows Explorer And typing ``yoururlprotocol://testdata``
        into the path/address field.

        Registers an user defined URL protocol for the usage with the Windows Shell, the Internet Explorer and Office.

        Example for an URL of an user defined URL protocol:

        ```
        rainbird://RemoteControl/OpenFridge/GetBeer
        ```
      </summary>
      <param name="protocolName">
        Name of the protocol (e.g. "rainbird" for "rainbird://...")
      </param>
      <param name="applicationPath">
        Complete file system path to the EXE file, which processes the URL being called (the complete URL is handed over as a Command Line Parameter).
      </param>
      <param name="description">
        Description (e.g. "URL:Rainbird Custom URL")
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Windows.Forms.ChromeUIRender.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
      <summary>
        Draw MenuItem Background of MBMenuStrip
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Windows.Forms.Extensions.AddFileHistory(System.Collections.Generic.List{System.String}@,System.String,System.Boolean)">
      <summary>

      </summary>
      <param name="files"></param>
      <param name="path$"></param>
      <param name="latestFirst">最近使用的文件被放在列表的头部，否则直接放在列表的尾部</param>

    </member>
    <member name="M:Microsoft.VisualBasic.Windows.Forms.MockForm.#ctor(System.String)">
      <summary>
        Construct mock from <see cref="M:Microsoft.VisualBasic.Windows.Forms.MockForm.FindWindow(System.String@,System.String@)"/>
      </summary>
      <param name="found"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Windows.Forms.MockTerminal.__init">
      <summary>
        Init by win32 API
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Windows.Forms.MockTerminal.__cmd">
      <summary>
        Start a new cmd.exe instance for the terminal mock
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Windows.Forms.SingleInstanceFormEntry`1">
      <summary>
        只打开一个窗体，当窗体已经打开的时候，就会忽略当前的这一次单击事件，反之没有窗体被打开的时候就会打开新的窗体
      </summary>
      <typeparam name="TForm"></typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Windows.Forms.SingleInstanceFormEntry`1.#ctor(System.Boolean)">
      <summary>
        不做任何位置的设置操作
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Windows.Forms.SingleInstanceFormEntry`1.__getDefaultPos(System.Windows.Forms.UserControl,System.Windows.Forms.Form)">
      <summary>
        默认位置是控件的中间
      </summary>
      <param name="Control"></param>
      <param name="Form"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.App">
      <summary>
        Provides information about, and means to manipulate, the current environment Application information collection.
        (More easily runtime environment information provider on <see cref="F:System.PlatformID.Unix"/>/LINUX server platform for VisualBasic program.)
        (从命令行之中使用``/@set``参数赋值环境变量的时候，每一个变量之间使用分号进行分隔)
      </summary>

    </member>
    <member name="P:Microsoft.VisualBasic.App.RunTimeDirectory">
      <summary>
        运行时环境所安装的文件夹的位置
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.NanoTime">
      <summary>
        Gets the number of ticks that represent the date and time of this instance.

        The number of ticks that represent the date and time of this instance. The value
        is between DateTime.MinValue.Ticks and DateTime.MaxValue.Ticks.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.CPUCoreNumbers">
      <summary>
        Numbers of the CPU kernels on the current machine.(获取当前的系统主机的CPU核心数)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.IsConsoleApp">
      <summary>
        判断当前运行的程序是否为Console类型的应用和程序，由于在执行初始化的时候，
        最先被初始化的是这个模块，所以没有任何代码能够先执行<see cref="P:System.Console.IsErrorRedirected"/>了，
        在这里使用<see cref="P:System.Console.IsErrorRedirected"/>这个来进行判断是可靠的
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.References">
      <summary>
        获取得到当前的这个所运行的应用程序所引用的dll文件列表
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.Desktop">
      <summary>
        Gets a path name pointing to the Desktop directory.
      </summary>
      <returns>The path to the Desktop directory.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.PID">
      <summary>
        Get the <see cref="T:System.Diagnostics.Process"/> id(PID) of the current program process.
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.App.Process">
      <summary>
        Gets a new <see cref="T:System.Diagnostics.Process"/> component and associates it with the currently active process.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.CommandLine">
      <summary>
        Gets the command-line arguments for this <see cref="P:Microsoft.VisualBasic.App.Process"/>.
      </summary>
      <returns>Gets the command-line arguments for this process.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.Argument``1(System.String)">
      <summary>
        Get argument value from <see cref="P:Microsoft.VisualBasic.App.CommandLine"/>.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="name$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.Argument(System.String)">
      <summary>
        Get argument value string from <see cref="P:Microsoft.VisualBasic.App.CommandLine"/>.
      </summary>
      <param name="name$"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.__CLI">
      <summary>
        Makes compatibility with git bash: <see cref="F:Microsoft.VisualBasic.App.gitBash"/> = ``C:/Program Files/Git``
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.Command">
      <summary>
        Returns the argument portion of the <see cref="T:Microsoft.VisualBasic.CommandLine.CommandLine"/> used to start Visual Basic or
        an executable program developed with Visual Basic. The My feature provides greater
        productivity and performance than the <see cref="M:Microsoft.VisualBasic.Interaction.Command"/> function. For more information,
        see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs"/>.
      </summary>
      <returns>Gets the command-line arguments for this process.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.ExecutablePath">
      <summary>
        The file path of the current running program executable file.(本应用程序的可执行文件的文件路径)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.AssemblyName">
      <summary>
        Gets the name, without the extension, of the assembly file for the application.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.HOME">
      <summary>
        The program directory of the current running program.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.UserHOME">
      <summary>
        Getting the path of the home directory
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.InputFile">
      <summary>
        Gets the ``/in`` commandline value as the input file path.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.OutFile">
      <summary>
        Gets the ``/out`` commandline value as the output file path.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.GetFile(System.String)">
      <summary>
        Found the file path based on the current application context.

        1. 直接查找(这个查找已经包含了在当前的文件夹之中查找)
        2. 从<see cref="P:Microsoft.VisualBasic.App.InputFile"/>所在的文件夹之中查找
        3. 从<see cref="P:Microsoft.VisualBasic.App.OutFile"/>所在的文件夹之中查找
        4. 从<see cref="P:Microsoft.VisualBasic.App.HOME"/>文件夹之中查找
        5. 从<see cref="P:Microsoft.VisualBasic.App.UserHOME"/>文件夹之中查找
        6. 从<see cref="P:Microsoft.VisualBasic.App.ProductProgramData"/>文件夹之中查找
      </summary>
      <param name="fileName$"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.CurrentDirectory">
      <summary>
        The currrent working directory of this application.(应用程序的当前的工作目录)
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.PreviousDirectory">
      <summary>
        -
        Linux里面的前一个文件夹
      </summary>
      <remarks>
        假设你之前好不容易进入了一个很深的目录，然后不小心敲了个 ``cd /``，是不是快气晕了啊，不用着急，通过下面的指令可以轻松的回到前一个指令：

        ```bash
        cd -
        ```
      </remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.App.StartupDirectory">
      <summary>
        Gets the path for the executable file that started the application, not including the executable name.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.ProductProgramData">
      <summary>
        The repository root of the product application program data.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.ProductSharedDIR">
      <summary>
        The shared program data directory for a group of app which have the same product series name.
        (同一產品程序集所共享的數據文件夾)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.JoinVariable(System.String,System.String)">
      <summary>
        添加参数到应用程序的环境变量之中
      </summary>
      <param name="name$"></param>
      <param name="value$"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.App.JoinVariables(Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}[])">
      <summary>
        添加参数集合到应用程序的环境变量之中
      </summary>
      <param name="vars"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.App.GetVariable(System.String)">
      <summary>
        If the parameter <paramref name="name"/> is ignored, then the value from <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>
        will be used as variable name.
        (这个函数只是会从设置的变量之中查找，本模块之中的变量请直接从属性进行引用，对于查找失败的变量，这个函数会返回空值
        假若忽略掉<paramref name="name"/>参数的话，则这个函数会使用<see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>来获取变量
        的名称)
      </summary>
      <param name="name$">
        因为由于是从命令行之中输入进来的，所以可能有些时候大小写会影响直接字典查找，在这里需要用字符串手工查找
      </param>
      <returns>当没有查找到相对应的环境变量的时候会返回空值</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.GetAppVariables">
      <summary>
        获取<see cref="T:Microsoft.VisualBasic.App"/>的可读属性值来作为环境变量
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.BufferSize">
      <summary>
        其他的模块可能也会依赖于这个初始化参数
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.SetBufferSize(System.Int32)">
      <summary>
        Set value of <see cref="P:Microsoft.VisualBasic.App.BufferSize"/>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.App.NullDevice(Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        假若有些时候函数的参数要求有一个输出流，但是并不想输出任何数据的话，则可以使用这个进行输出
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.println(System.String,System.Object[])">
      <summary>
        java <see cref="M:Microsoft.VisualBasic.Terminal.STDIO.printf(System.String,System.Object[])"/> + <see cref="M:System.Console.WriteLine(System.String)"/>
      </summary>
      <param name="s$"></param>
      <param name="args"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.App.FlushMemory">
      <summary>
        Rabbish collection to free the junk memory.(垃圾回收)
      </summary>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.App.Free``1(``0@)">
      <summary>
        Free this variable pointer in the memory.(销毁本对象类型在内存之中的指针)
      </summary>
      <typeparam name="T">
        假若该对象类型实现了<see cref="T:System.IDisposable"></see>接口，则函数还会在销毁前调用该接口的销毁函数
      </typeparam>
      <param name="obj"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.App.Pause(System.String)">
      <summary>
        Pause the console program.
      </summary>
      <param name="Prompted"></param>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.App.GetProductSharedDIR(System.Type)">
      <summary>
        使用<see cref="P:Microsoft.VisualBasic.App.ProductSharedDIR"/>的位置会变化的，则使用本函数则会使用获取当前的模块的文件夹，即使其不是exe程序而是一个dll文件
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.StartTime">
      <summary>
        The time tag of the application started.(应用程序的启动的时间)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.ElapsedMilliseconds">
      <summary>
        The distance of time that this application running from start and to current time.
        (当前距离应用程序启动所逝去的时间)
      </summary>
      <returns></returns>

    </member>
    <member name="P:Microsoft.VisualBasic.App.LocalData">
      <summary>
        The local data dir of the application in the %user%/&lt;CurrentUser>/Local/Product/App
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.LocalDataTemp">
      <summary>
        The temp directory in the application local data.
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.SysTemp">
      <summary>
        The directory path of the system temp data.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.__sysTEMP">
      <summary>
        <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)"/>(<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName"/>)
        当临时文件夹被删除掉了的时候，会出现崩溃。。。。所以弃用改用读取环境变量
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.AppSystemTemp">
      <summary>
        Application temp data directory in the system temp root: %<see cref="P:Microsoft.VisualBasic.App.SysTemp"/>%/<see cref="P:Microsoft.VisualBasic.App.AssemblyName"/>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.Version">
      <summary>
        Gets the product version associated with this application.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.LogException(System.Exception,System.String)">
      <summary>
        Simply log application exception data into a log file which saves at location: %<see cref="P:Microsoft.VisualBasic.App.LocalData"/>%/.logs/err/.
        (简单日志记录，函数返回空值)
      </summary>
      <param name="ex"></param>
      <param name="Trace">调用函数的位置，这个参数一般为空，编译器会自动生成Trace位点参数</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.TraceBugs(System.Exception,System.String)">
      <summary>
        Function returns the file path of the application log file.
        (函数返回的是日志文件的文件路径)
      </summary>
      <returns></returns>

    </member>
    <member name="P:Microsoft.VisualBasic.App.IsMicrosoftPlatform">
      <summary>
        Is this application running on a Microsoft OS platform.(是否是运行于微软的操作系统平台？)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.__isMicrosoftPlatform">
      <summary>
        这个主要是判断一个和具体的操作系统平台相关的Win32 API是否能够正常的工作？
      </summary>
      <returns></returns>
    </member>
    <member name="F:Microsoft.VisualBasic.App._tmpHash">
      <summary>
        Example: ``tmp2A10.tmp``
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.App.__getTEMP">
      <summary>
        由于可能会运行多个使用本模块的进程，单独考哈希来作为表示会产生冲突，所以这里使用应用程序的启动时间戳以及当前的哈希值来生成唯一标示
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.NextTempName">
      <summary>
        是名称，不是文件路径
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.LogErrDIR">
      <summary>
        Error default log fie location from function <see cref="M:Microsoft.VisualBasic.App.LogException(System.Exception,System.String)"/>.(存放自动存储的错误日志的文件夹)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.LogException(System.Exception,System.String,System.String)">
      <summary>
        Simply log application exception data into a log file which saves at a user defined location parameter: <paramref name="FileName"/>.
        (简单日志记录)
      </summary>
      <param name="ex"></param>
      <param name="Trace"></param>
      <param name="FileName"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.BugsFormatter(System.Exception,System.String)">
      <summary>
        Generates the formatted error log file content.(生成简单的日志板块的内容)
      </summary>
      <param name="ex"></param>
      <param name="Trace"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.LogException(System.String,System.String)">
      <summary>
        This is the custom message of the exception, not extract from the function <see cref="M:System.Exception.ToString"/>
      </summary>
      <param name="exMsg">
        This is the custom message of the exception, not extract from the function <see cref="M:System.Exception.ToString"/>
      </param>
      <param name="Trace"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.App.ExceptionLogFile">
      <summary>
        <see cref="P:Microsoft.VisualBasic.App.LocalData"/>/error.log
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.Exit(System.Int32)">
      <summary>
        Terminates this <see cref="T:System.Diagnostics.Process"/> and gives the underlying operating system the specified exit code.
        (这个方法还会终止本应用程序里面的自动GC线程)
      </summary>
      <param name="state">Exit code to be given to the operating system. Use 0 (zero) to indicate that the process completed successfully.</param>

    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,System.String,System.String)">
      <summary>
        Running the <see cref="T:System.String"/> as cli command line and the specific type define as a <see cref="T:Microsoft.VisualBasic.CommandLine.Interpreter"/>.
        (请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,Microsoft.VisualBasic.CommandLine.CommandLine,System.String)">
      <summary>
        Running the string as a cli command line.(请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,Microsoft.VisualBasic.CommandLine.CommandLine,Microsoft.VisualBasic.CommandLine.__ExecuteEmptyCLI,System.String)">
      <summary>
        Running the string as a cli command line.(请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,System.String,Microsoft.VisualBasic.CommandLine.__ExecuteEmptyCLI,System.String)">
      <summary>
        Running the string as a cli command line.(请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,System.String,Microsoft.VisualBasic.CommandLine.__ExecuteEmptyCLI,Microsoft.VisualBasic.CommandLine.__ExecuteNotFound,System.String)">
      <summary>
        Running the string as a cli command line.(请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,Microsoft.VisualBasic.CommandLine.CommandLine,Microsoft.VisualBasic.CommandLine.__ExecuteEmptyCLI,Microsoft.VisualBasic.CommandLine.__ExecuteNotFound,System.String)">
      <summary>
        Running the string as a cli command line.(请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,System.String,Microsoft.VisualBasic.CommandLine.__ExecuteFile,System.String)">
      <summary>
        Running the string as a cli command line.(请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,Microsoft.VisualBasic.CommandLine.CommandLine,Microsoft.VisualBasic.CommandLine.__ExecuteFile,System.String)">
      <summary>
        Running the string as a cli command line.(请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>
      <param name="executeFile">
        函数指针：
        ```vbnet
        Function ExecuteFile(path As <see cref="T:System.String"/>, args As <see cref="P:Microsoft.VisualBasic.App.CommandLine"/>) As <see cref="T:System.Int32"/>
        ```
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,System.String,Microsoft.VisualBasic.CommandLine.__ExecuteFile,Microsoft.VisualBasic.CommandLine.__ExecuteEmptyCLI,System.String)">
      <summary>
        Running the string as a cli command line.(请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.RunCLI(System.Type,Microsoft.VisualBasic.CommandLine.CommandLine,Microsoft.VisualBasic.CommandLine.__ExecuteFile,Microsoft.VisualBasic.CommandLine.__ExecuteEmptyCLI,System.String)">
      <summary>
        Running the string as a cli command line.(请注意，在调试模式之下，命令行解释器会在运行完命令之后暂停，而Release模式之下则不会。
        假若在调试模式之下发现程序有很长一段时间处于cpu占用为零的静止状态，则很有可能已经运行完命令并且等待回车退出)
      </summary>
      <param name="args">
        The command line arguments value, which its value can be gets from the <see cref="P:Microsoft.VisualBasic.App.Command"/> function.
      </param>
      <returns>Returns the function execute result to the operating system.</returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.CLICode(System.Boolean,System.Int32)">
      <summary>
        IF the flag is True, that means cli API execute successfully, function returns ZERO, or a negative integer(Default -100) for failures.
      </summary>
      <param name="b"></param>
      <param name="Failed"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.GetTempFile">
      <summary>
        Creates a uniquely named zero-byte temporary file on disk and returns the full
        path of that file.
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.GetAppSysTempFile(System.String,System.String)">
      <summary>
        Get temp file name in app system temp directory.
      </summary>
      <param name="ext"></param>
      <param name="sessionID"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.GenerateTemp(System.String,System.String)">
      <summary>

      </summary>
      <param name="sysTemp">临时文件路径</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.App.GetProductSharedTemp">
      <summary>
        Gets a temp file name which is located at directory <see cref="P:Microsoft.VisualBasic.App.ProductSharedDIR"/>.
        (获取位于共享文件夹<see cref="P:Microsoft.VisualBasic.App.ProductSharedDIR"/>里面的临时文件)
      </summary>
      <returns></returns>

    </member>
    <member name="P:Microsoft.VisualBasic.App.Platform">
      <summary>
        Gets a <see cref="T:System.PlatformID"/> enumeration value that identifies the operating system
        platform.
      </summary>
      <remarks>One of the System.PlatformID values.</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.App.SelfFolk(System.String)">
      <summary>
        Self call this program itself for batch parallel task calculation.
        (调用自身程序，这个通常是应用于批量的数据的计算任务的实现)
      </summary>
      <param name="CLI"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.Shell(System.String,System.String,System.Boolean)">
      <summary>
        Folk helper for running the other .NET application.
        (请注意，这个函数只能够运行.NET程序, 假若是在Linux系统之上，还需要安装mono运行时环境)
      </summary>
      <param name="app">External application file full path</param>
      <param name="CLI">
        Commandline string that running the application <paramref name="app$"/>
      </param>
      <param name="CLR">
        Is the calling external application is a .NET application?
        (是否为.NET程序?)
      </param>
      <returns></returns>
      <remarks>
        <see cref="T:Microsoft.VisualBasic.CommandLine.IORedirectFile"/>这个建议在进行外部调用的时候才使用
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.App.SelfFolks(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Double)">
      <summary>
        Folk this program itself for the large amount data batch processing.
      </summary>
      <param name="CLI">Self folk processing commandline collection.</param>
      <param name="parallel">
        If this parameter value less than 1, then will be a single
        thread task. Any positive value that greater than 1 will be parallel task.
        (小于等于零表示非并行化，单线程任务)
      </param>
      <param name="smart">
        Smart mode CPU load threshold, if the <paramref name="parallel"/>
        parameter value is less than or equals to 1, then this parameter will be disabled.
      </param>
      <returns>
        Returns the total executation time for running this task collection.
        (返回任务的执行的总时长)
      </returns>
    </member>
    <member name="F:Microsoft.VisualBasic.App.__GCThread">
      <summary>
        自动垃圾回收线程
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.App.AddExitCleanHook(System.Action)">
      <summary>
        这里添加在应用程序退出执行的时候所需要完成的任务
      </summary>
      <param name="hook"></param>

    </member>
    <member name="M:Microsoft.VisualBasic.App.__completeCLI(System.Int32)">
      <summary>
        自动停止GC当前程序的线程
      </summary>
      <param name="state"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.App.StartGC(System.Boolean)">
      <summary>
        Start the automatic garbage collection threads.
        (这条线程只会自动清理*.tmp临时文件，因为假若不清理临时文件的话，有时候临时文件比较多的时候，会严重影响性能，甚至无法运行应用程序框架里面的IO重定向操作)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.App.__GCThreadInvoke">
      <summary>
        自动垃圾回收线程
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.App.__removesTEMP(System.String)">
      <summary>
        The Windows file system have a limit of the numbers in a folder, so the long time running application
        required a thread to make the temp directory cleanup, or the application will no able to create temp
        file when the temp folder reach its file number upbound(This may caused the application crashed).
      </summary>
      <param name="TEMP"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.App.StopGC">
      <summary>
        Stop the automatic garbage collection threads.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.App.RunAsAdmin(System.String)">
      <summary>
        Restart the current process with administrator credentials.(以管理员的身份重启本应用程序)
      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ListExtensions">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>`1 class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.TopMostFrequent``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        查找出序列之中最频繁出现的对象
      </summary>
      <typeparam name="T"></typeparam>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.DoEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <summary>
        ForEach拓展的简化版本
      </summary>
      <typeparam name="T"></typeparam>
      <param name="collection"></param>
      <param name="[do]"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.Random``1(``0[])">
      <summary>
        返回数组集合之中的一个随机位置的元素
      </summary>
      <typeparam name="T"></typeparam>
      <param name="v"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.ReorderByKeys``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])">
      <summary>
        根据对象的键名来进行重排序，请注意，要确保对象<paramref name="getKey"/>能够从泛型对象之中获取得到唯一的键名
      </summary>
      <typeparam name="T"></typeparam>
      <param name="list"></param>
      <param name="getKey"></param>
      <param name="customOrder">可能会出现大小写不对的情况？</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.Takes``1(System.Collections.Generic.IEnumerable{``0},System.Int32[],System.Int32,System.Boolean)">
      <summary>
        Take elements by <paramref name="index"/> list.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="index">所要获取的目标对象的下表的集合</param>
      <param name="reversed">是否为反向选择，即返回所有不在目标index集合之中的元素列表</param>
      <param name="OffSet">当进行反选的时候，本参数将不会起作用</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.__reversedTake``1(System.Collections.Generic.IEnumerable{``0},System.Int32[])">
      <summary>
        反选，即将所有不出现在<paramref name="indexs"></paramref>之中的元素都选取出来
      </summary>
      <typeparam name="T"></typeparam>
      <param name="collection"></param>
      <param name="indexs"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.ToList``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean)">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>`1 class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
      </summary>
      <param name="source">The collection whose elements are copied to the new list.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.AsList``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/>`1 class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
      </summary>
      <param name="source">The collection whose elements are copied to the new list.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.HasKey(System.Collections.Hashtable,System.Object)">
      <summary>
        Function name alias of the function <see cref="M:System.Collections.Hashtable.ContainsKey(System.Object)"/>
      </summary>
      <param name="hashtable"></param>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.AsHashSet``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Just using for the element index in a large collection
      </summary>
      <typeparam name="T"></typeparam>
      <param name="collection">
        If the element in this collection have some duplicated member, then only the first element will be keeped.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ListExtensions.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Language.List`1"/> class that
        contains elements copied from the specified collection and has sufficient capacity
        to accommodate the number of elements copied.
      </summary>
      <param name="linq">The collection whose elements are copied to the new list.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.KeyValuePairExtensions">
      <summary>
        KeyValue pair data related extensions API.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.AsTable``2(System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}})">
      <summary>
        tuple set to dictionary table
      </summary>
      <typeparam name="K"></typeparam>
      <typeparam name="V"></typeparam>
      <param name="tuples"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.KeyItem``1(System.Collections.Generic.IEnumerable{``0},System.String)">
      <summary>
        Item selector by directly text equals match.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="key$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.Select``1(System.Collections.Generic.IEnumerable{``0},System.String)">
      <summary>
        Item selector by using regex expression.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="pattern$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.IsOneOfA``1(``0,Microsoft.VisualBasic.ComponentModel.Collection.Index{``0})">
      <summary>
        Target <paramref name="item"/> contains in <paramref name="define"/> list.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="item"></param>
      <param name="define"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.Subset``1(System.Collections.Generic.Dictionary{System.String,``0},System.String[])">
      <summary>
        函数会根据<see cref="M:Microsoft.VisualBasic.KeyValuePairExtensions.Keys``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)"/>参数来做排序
      </summary>
      <typeparam name="T"></typeparam>
      <param name="table"></param>
      <param name="keys$"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.RemoveAndGet``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
      <summary>
        Removes the target key in the dictionary table, and then gets the removed value.
        (删除字典之中的指定的键值对，然后返回被删除的数据值)
      </summary>
      <typeparam name="K"></typeparam>
      <typeparam name="V"></typeparam>
      <param name="table"></param>
      <param name="key"></param>
      <returns>
        The value of the removed <paramref name="key"/>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.IteratesAll``1(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection{``0}})">
      <summary>
        Iterates all of the values in the <paramref name="source"/> collection data.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.GroupByKey``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Groups source by <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key"/>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.Values``1(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{``0}})">
      <summary>
        Retrieve all items' value data.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.Keys``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <summary>
        gets all <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key"/> values
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="distinct"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.GetByKey``1(System.Collections.Generic.IEnumerable{``0},System.String,System.StringComparison)">
      <summary>
        Get a specific item value from the target collction data using its UniqueID property，
        (请注意，请尽量不要使用本方法，因为这个方法的效率有些低，对于获取<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.INamedValue">
        </see>类型的集合之中的某一个对象，请尽量先转换为字典对象，在使用该字典对象进行查找以提高代码效率，使用本方法的优点是可以选择忽略<paramref name="uid">
        </paramref>参数之中的大小写，以及对集合之中的存在相同的Key的这种情况的容忍)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="uid"></param>
      <param name="IgnoreCase"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.ContainsKey``1(Microsoft.VisualBasic.ComponentModel.Collection.Dictionary{``0},Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{``0})">
      <summary>
        Dictionary object contains the specific <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Name"/>?
      </summary>
      <typeparam name="T"></typeparam>
      <param name="table"></param>
      <param name="k"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.ContainsKey``1(System.Collections.Generic.Dictionary{System.String,``0},Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{``0})">
      <summary>
        Dictionary object contains the specific <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Name"/>?
      </summary>
      <typeparam name="T"></typeparam>
      <param name="table"></param>
      <param name="k"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.DictionaryData``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1})">
      <summary>
        Converts the interface object into a Dictionary object.
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="V"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.EnumParser``1(System.Boolean,System.Boolean)">
      <summary>
        Creates the dictionary for string converts to enum value.
        (接受的泛型类型必须是枚举类型)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="lcaseKey"></param>
      <param name="usingDescription"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.NamedValues``1(System.Collections.Generic.Dictionary{System.String,``0})">
      <summary>
        Convert the dictionary table as the <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1"/> collection.
        (将目标字典之中的键值对转换为被命名为的变量值)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="table"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.NameValueCollection(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}})">
      <summary>
        获取得到的集合对象是一个安全的集合对象，不存在的键名会直接返回空值
      </summary>
      <param name="maps"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.SortByKey``2(System.Collections.Generic.Dictionary{``0,``1}@,System.Boolean)">
      <summary>
        按照键名对字典进行重新排序
      </summary>
      <typeparam name="V"></typeparam>
      <typeparam name="T"></typeparam>
      <param name="table"></param>
      <param name="desc">默认为从小到大的升序排序</param>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.ContainsKey(System.Collections.Specialized.NameValueCollection,System.String)">
      <summary>
        Determines whether the <see cref="M:Microsoft.VisualBasic.KeyValuePairExtensions.NameValueCollection(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}})"/> contains the specified key.
      </summary>
      <param name="d"></param>
      <param name="key$">
        The key to locate in the <see cref="M:Microsoft.VisualBasic.KeyValuePairExtensions.NameValueCollection(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}})"/>
      </param>
      <returns>
        true if the System.Collections.Generic.Dictionary`2 contains an element with
        the specified key; otherwise, false.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.ParserDictionary``1">
      <summary>
        请注意，这里的类型约束只允许枚举类型
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.HaveData``1(System.Collections.Generic.Dictionary{``0,System.String},``0)">
      <summary>
        Data exists and not nothing
      </summary>
      <typeparam name="T"></typeparam>
      <param name="d"></param>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.ToDictionary``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/>`2 from an <see cref="T:System.Collections.Generic.IEnumerable`1"/>`1
        according to a specified key selector function.
      </summary>
      <typeparam name="T">
        Unique identifier provider <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key"/>
      </typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.Add``2(Microsoft.VisualBasic.Language.List{Microsoft.VisualBasic.ComponentModel.Collection.Generic.KeyValuePairObject{``0,``1}}@,``0,``1)">
      <summary>
        Adds an object to the end of the List`1.
      </summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
      <param name="list"></param>
      <param name="key"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.ReverseMaps``2(System.Collections.Generic.Dictionary{``0,``1},System.Boolean)">
      <summary>
        使用这个函数应该要确保value是没有重复的
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="V"></typeparam>
      <param name="d"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.KeyValuePairExtensions.Selects``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <summary>
        一次性地使用一个键名的集合从字典之中选出一组数据
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="V"></typeparam>
      <param name="d"></param>
      <param name="keys"></param>
      <param name="skipNonExist"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VectorExtensions">
      <summary>
        Extension methods for the .NET object sequence
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.VectorShadows``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Create a vector shadow of your data collection.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns>
        返回<see cref="T:System.Object"/>类型是为了简化语法
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.Coalesce``1(System.Collections.Generic.IEnumerable{System.Nullable{``0}})">
      <summary>
        聚合，将nullable类型结构体转换为原来的值类型
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.IComparable},System.Boolean)">
      <summary>
        对目标序列进行排序生成新的序列，这个拓展函数尝试将升序排序和降序排序这两种操作的接口统一起来
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="desc"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.MappingData``1(``0[],``0[])">
      <summary>
        用来生成map数据的，
        + 当两个向量长度相同，会不进行任何处理，即两个向量之间，元素都可以一一对应，
        + 但是当某一个向量的长度为1的时候，就会将该向量补齐，因为此时会是一对多的关系
      </summary>
      <typeparam name="T"></typeparam>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.IndexOf``1(``0[],``0)">
      <summary>
        在一个一维数组中搜索指定对象，并返回其首个匹配项的索引。
      </summary>
      <typeparam name="T">数组元素的类型。</typeparam>
      <param name="array">要搜索的从零开始的一维数组。</param>
      <param name="o">要在 array 中查找的对象。</param>
      <returns>如果在整个 array 中找到 value 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.Last``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
        从后往前访问集合之中的元素，请注意请不要使用Linq查询表达式，尽量使用``list``或者``array``
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source">请不要使用Linq查询表达式，尽量使用``list``或者``array``</param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.After``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary>
        取出在x元素之后的所有元素
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.After``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
      <summary>
        Returns all of the elements which is after the element that detected by a specific
        evaluation function <paramref name="predicate"/>.
        (取出在判定条件成立的元素之后的所有元素)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="predicate"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.Memset``1(``0[]@,``0,System.Int32)">
      <summary>
        Replace target array data by using specific object value.(替换目标向量为指定的对象的填充数据)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="o"></param>
      <param name="len"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.Memset(System.String@,System.Char,System.Int32)">
      <summary>
        替换<paramref name="s"/>字符串变量数据为新的字符填充数据
      </summary>
      <param name="s"></param>
      <param name="c"></param>
      <param name="len"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.Midv``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
      <summary>
        <see cref="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)"/> function like operation on any type collection data.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="start">0 base</param>
      <param name="length"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.LoadAsNumericVector(System.String)">
      <summary>
        Load the text file as a numeric vector. Each line in the text file
        should be a <see cref="T:System.Double"/> type numeric value.
      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VectorExtensions.Split``1(System.Collections.Generic.IEnumerable{``0},Microsoft.VisualBasic.Language.Default.Assert{``0},Microsoft.VisualBasic.VectorExtensions.DelimiterLocation)">
      <summary>
        Split the object array using a specific evaluation function.
        (Please note that, all of the object in the <paramref name="source"/> array
        that match the <paramref name="delimiter"/> evaluation, will not includes
        in the returned tokens.)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="delimiter">和字符串的Split函数一样，这里作为delimiter的元素都不会出现在结果之中</param>
      <param name="deliPosition">是否还应该在分区的结果之中包含有分隔符对象？默认不包含</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VectorExtensions.DelimiterLocation">
      <summary>
        分隔符对象在分块之中的位置
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VectorExtensions.DelimiterLocation.PreviousLast">
      <summary>
        上一个分块的最末尾
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VectorExtensions.DelimiterLocation.NotIncludes">
      <summary>
        不会再任何分块之中包含有分隔符
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VectorExtensions.DelimiterLocation.NextFirst">
      <summary>
        包含在下一个分块之中的最开始的位置
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MatrixExtensions.DATA``1(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.DynamicPropertyBase{``0}},System.String)">
      <summary>
        Gets property field data from a generic data frame
      </summary>
      <typeparam name="T"></typeparam>
      <param name="dataframe"></param>
      <param name="property$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MatrixExtensions.MAT``1(System.Int32,System.Int32)">
      <summary>
        生成一个有m行n列的矩阵，但是是使用数组来表示的
      </summary>
      <typeparam name="T"></typeparam>
      <param name="m"></param>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MatrixExtensions.ToMatrix``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
      <summary>
        Convert the data collection into a matrix value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source">The elements number in each collection should be agreed!(要求集合之中的每一列之中的数据的元素数目都相等)</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.MatrixExtensions.ToVectorList``1(``0[0:,0:])">
      <summary>
        Convert the matrix data into a collection of collection data type.(将矩阵对象转换为集合的集合的类型)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="MAT"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.MatrixExtensions.RowIterator``1(``0[0:,0:])">
      <summary>
        Iterates each row data in a matrix type array.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="MAT"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBDebugger">
      <summary>
        Debugger helper module for VisualBasic Enterprises System.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.die(System.String,Microsoft.VisualBasic.Language.Default.Assert{System.Object},System.String)">
      <summary>
        Assert that the expression value is correctly or not?
      </summary>
      <param name="message$">The exception message</param>
      <param name="failure">If this expression test is True, then die expression will raise an exception</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.LinqProc``1(System.Collections.Generic.IEnumerable{``0},System.String)">
      <summary>
        当在执行大型的数据集合的时候怀疑linq里面的某一个任务进入了死循环状态，可以使用这个方法来检查是否如此
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="TAG"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBDebugger.Mute">
      <summary>
        Disable the debugger information outputs on the console if this <see cref="P:Microsoft.VisualBasic.VBDebugger.Mute"/> property is set to True,
        and enable the output if this property is set to False.
        NOTE: this debugger option property can be overrides by the debugger parameter from the CLI parameter named '--echo'
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBDebugger.ForceSTDError">
      <summary>
        Force the app debugging output redirect into the std_error device.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.BENCHMARK(System.Action,System.String)">
      <summary>
        Test how long this <paramref name="test"/> will takes.
      </summary>
      <param name="test"></param>
      <param name="trace$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.__DEBUG_ECHO(System.String,System.Int32)">
      <summary>
        Output the full debug information while the project is debugging in debug mode.
        (向标准终端和调试终端输出一些带有时间戳的调试信息)
      </summary>
      <param name="msg">The message fro output to the debugger console, this function will add a time stamp automaticly To the leading position Of the message.</param>
      <param name="indent"></param>
      <returns>其实这个函数是不会返回任何东西的，只是因为为了Linq调试输出的需要，所以在这里是返回Nothing的</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.__print(System.String,System.String,System.ConsoleColor,System.Int32)">
      <summary>
        头部和消息字符串都是放在一个task之中进行输出的，<see cref="T:Microsoft.VisualBasic.Terminal.xConsole"/>的输出也是和内部的debugger输出使用的同一个消息线程
      </summary>
      <param name="head"></param>
      <param name="str"></param>
      <param name="msgColor"></param>
      <param name="level">
        <see cref="T:System.ConsoleColor"/> or <see cref="T:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES"/>
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.PrintException``1(``0,System.String)">
      <summary>
        The function will print the exception details information on the standard <see cref="T:System.Console"/>, <see cref="T:System.Diagnostics.Debug"/> console, and system <see cref="T:System.Diagnostics.Trace"/> console.
        (分别在标准终端，调试终端，系统调试终端之中打印出错误信息，请注意，函数会直接返回False可以用于指定调用者函数的执行状态，这个函数仅仅是在终端上面打印出错误，不会保存为日志文件)
      </summary>
      <typeparam name="ex"></typeparam>
      <param name="exception"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.PrintException(System.String,System.String)">
      <summary>
        可以使用这个方法<see cref="M:System.Reflection.MethodBase.GetCurrentMethod"/>.<see cref="M:Microsoft.VisualBasic.EmitReflection.GetFullName(System.Reflection.MethodBase,System.Boolean)"/>获取得到<paramref name="memberName"/>所需要的参数信息
      </summary>
      <param name="msg"></param>
      <param name="memberName"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.WaitOutput">
      <summary>
        等待调试器输出工作线程将内部的消息队列输出完毕
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.VBDebugger.UsingxConsole">
      <summary>
        使用<see cref="T:Microsoft.VisualBasic.Terminal.xConsole"/>输出消息
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.WriteLine(System.String,System.ConsoleColor)">
      <summary>
        输出的终端消息带有指定的终端颜色色彩，当<see cref="P:Microsoft.VisualBasic.VBDebugger.UsingxConsole"/>为True的时候，
        <paramref name="msg"/>参数之中的文本字符串兼容<see cref="T:Microsoft.VisualBasic.Terminal.xConsole"/>语法，
        而<paramref name="color"/>将会被<see cref="T:Microsoft.VisualBasic.Terminal.xConsole"/>覆盖而不会起作用
      </summary>
      <param name="msg">
        兼容<see cref="T:Microsoft.VisualBasic.Terminal.xConsole"/>语法
      </param>
      <param name="color">
        当<see cref="P:Microsoft.VisualBasic.VBDebugger.UsingxConsole"/>参数为True的时候，这个函数参数将不会起作用
      </param>
    </member>
    <member name="F:Microsoft.VisualBasic.VBDebugger.DebuggerTagColors">
      <summary>
        ``<see cref="T:Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES"/> -> <see cref="T:System.ConsoleColor"/>``
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.Warning(System.String,System.String)">
      <summary>
        Display the wraning level(YELLOW color) message on the console.
      </summary>
      <param name="msg"></param>
      <param name="calls"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.Assertion(System.Boolean,System.String,Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES,System.String)">
      <summary>
        If <paramref name="test"/> boolean value is False, then the assertion test failure. If the test is failure the specific message will be output on the console.
      </summary>
      <param name="test"></param>
      <param name="fails"></param>
      <param name="level"></param>
      <param name="calls"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.Assertion(System.String,Microsoft.VisualBasic.ApplicationServices.Debugging.Logging.MSG_TYPES,System.String)">
      <summary>
        If the <paramref name="test"/> message is not null or empty string, then the console will output the message.
      </summary>
      <param name="test"></param>
      <param name="level"></param>
      <param name="calls"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.Assertion(System.Boolean,System.String,System.String)">
      <summary>
        If <paramref name="test"/> is false(means this assertion test failure), then throw exception.
      </summary>
      <param name="test"></param>
      <param name="msg"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.__DEBUG_ECHO(System.Text.StringBuilder,System.Int32)">
      <summary>
        Output the full debug information while the project is debugging in debug mode.
        (向标准终端和调试终端输出一些带有时间戳的调试信息)
      </summary>
      <param name="MSG">The message fro output to the debugger console, this function will add a time stamp automaticly To the leading position Of the message.</param>
      <param name="Indent"></param>

    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.this(System.String)">
      <summary>
        Returns the current function name.
      </summary>
      <param name="caller">
        The caller function name, do not assign any value to this parameter! Just leave it blank.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.EchoLine(System.String)">
      <summary>
        Alias for <see cref="M:System.Console.WriteLine"/>
      </summary>
      <param name="s$"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.Echo(System.Char)">
      <summary>
        Alias for <see cref="M:System.Console.Write(System.Boolean)"/>
      </summary>
      <param name="c"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBDebugger.cat(System.String)">
      <summary>
        print message, alias for <see cref="M:System.Console.Write(System.String)"/>.(支持``sprintf``之中的转义字符)
      </summary>
      <param name="s$"></param>
    </member>
    <member name="T:Microsoft.VisualBasic.IOExtensions">
      <summary>
        The extension API for system file io.(IO函数拓展)
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.IOExtensions.FlushTo(System.String,System.IO.StreamWriter)">
      <summary>
        将指定的字符串的数据值写入到目标可写的输出流之中
      </summary>
      <param name="data$">所需要写入的字符串数据</param>
      <param name="out">输出流</param>
    </member>
    <member name="M:Microsoft.VisualBasic.IOExtensions.FixPath(System.String@)">
      <summary>
        为了方便在linux上面使用，这里会处理一下file://这种情况，请注意参数是ByRef引用的
      </summary>
      <param name="path$"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.IOExtensions.ReadVector(System.String)">
      <summary>
        Read target text file as a numeric vector, each line in the target text file should be a number,
        so that if the target text file have n lines, then the returned vector have n elements.
        (这个文本文件之中的每一行都是一个数字，所以假设这个文本文件有n行，那么所返回的向量的长度就是n)
      </summary>
      <param name="path">The file path of the target text file.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.IOExtensions.Open(System.String,System.IO.FileMode,System.Boolean)">
      <summary>
        Safe open a local file handle.(打开本地文件指针，这是一个安全的函数，会自动创建不存在的文件夹)
      </summary>
      <param name="path">文件的路径</param>
      <param name="mode">File open mode, default is create a new file.(文件指针的打开模式)</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.IOExtensions.ClearFileBytes(System.String)">
      <summary>
        将文件之中的所有数据都清空
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.IOExtensions.OpenReader(System.String,System.Text.Encoding)">
      <summary>
        Open a text file and returns its file handle.
      </summary>
      <param name="path"></param>
      <param name="encoding">使用系统默认的编码方案</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.IOExtensions.ReadBinary(System.String)">
      <summary>
        <see cref="M:System.IO.File.ReadAllBytes(System.String)"/>, if the file is not exists on the filesystem, then a empty array will be return.
      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.IOExtensions.FlushAllLines``1(System.Collections.Generic.IEnumerable{``0},System.String,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        Write all object into a text file by using its <see cref="T:System.Object"/> method.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="data"></param>
      <param name="saveTo"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.IOExtensions.FlushStream(System.Collections.Generic.IEnumerable{System.Byte},System.String)">
      <summary>
        Save the binary data into the filesystem.(保存二进制数据包值文件系统)
      </summary>
      <param name="buf">The binary bytes data of the target package's data.(目标二进制数据)</param>
      <param name="path">The saved file path of the target binary data chunk.(目标二进制数据包所要进行保存的文件名路径)</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.LoadTextDoc``1(System.String,System.Text.Encoding,System.Func{System.String,System.Text.Encoding,``0},System.Boolean)">
      <summary>
        默认是加载Xml文件的
      </summary>
      <typeparam name="T"></typeparam>
      <param name="file"></param>
      <param name="encoding"></param>
      <param name="parser">default is Xml parser</param>
      <param name="ThrowEx"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.LineIterators(System.String)">
      <summary>

      </summary>
      <param name="handle$">
        + 当这个参数为文件路径的时候会返回<see cref="M:Microsoft.VisualBasic.Linq.Extensions.IteratesALL``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})"/>函数的结果
        + 当这个参数只是为文本字符串的时候，则会返回<see cref="M:Microsoft.VisualBasic.StringHelpers.lTokens(System.String,System.Boolean)"/>函数的结果
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.TsvHeaders(System.String)">
      <summary>
        解析出TSV文件的头部并且生成index数据
      </summary>
      <param name="path$">``*.tsv``文件路径</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.SaveTSV(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.IDMap},System.String,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        将IDmapping数据保存为tsv文件
      </summary>
      <param name="tsv"></param>
      <param name="path$"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.ForEachChar(System.String,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        Enumerate all of the chars in the target text file.
      </summary>
      <param name="path"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.OpenWriter(System.String,Microsoft.VisualBasic.Text.Encodings,System.String,System.Boolean)">
      <summary>
        Open text file writer, this function will auto handle all things.
      </summary>
      <param name="path"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.IterateAllLines(System.String,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        Reading a super large size text file through stream method.
        (通过具有缓存的流对象读取文本数据，使用迭代器来读取文件之中的所有的行，大文件推荐使用这个方法进行读取操作)
      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.ReadFirstLine(System.String,System.Text.Encoding)">
      <summary>
        Read the first line of the text in the file.
      </summary>
      <param name="path"></param>
      <param name="encoding">
        Parameter value is set to <see cref="P:Microsoft.VisualBasic.Text.TextEncodings.DefaultEncoding"/> if this parameter is not specific.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.SolveStream(System.String,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        自动进行判断解决所读取的数据源，当<paramref name="handle"/>为文件路径的时候，会读取文件内容，反之则会直接返回<paramref name="handle"/>的内容
      </summary>
      <param name="handle$">文本内容或者文件路径</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.ReadAllText(System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>
        This function just suite for read a small text file.(这个函数只建议读取小文本文件的时候使用)
      </summary>
      <param name="path"></param>
      <param name="encoding">
        Default value is <see cref="P:System.Text.Encoding.UTF8"/>
      </param>
      <param name="suppress">Suppress error message??</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.ReadAllLines(System.String,System.Text.Encoding)">
      <summary>
        This function is recommend using for the small(probably smaller than 300MB) text file reading.
        (这个函数只建议读取小文本文件的时候使用)
      </summary>
      <param name="path"></param>
      <param name="Encoding">Default value is UTF8</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.SaveWithHTMLEncoding(System.String,System.String)">
      <summary>
        使用html文本的默认编码格式<see cref="F:Microsoft.VisualBasic.Text.Encodings.UTF8"/>来保存这个文本文件
      </summary>
      <param name="html$"></param>
      <param name="path$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.SaveTo(System.String,System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>
        Write the text file data into a file which was specific by the <paramref name="path"></paramref> value,
        this function not append the new data onto the target file.
        (将目标文本字符串写入到一个指定路径的文件之中，但是不会在文件末尾追加新的数据)
      </summary>
      <param name="path"></param>
      <param name="text"></param>
      <param name="encoding">这个函数会自动处理文本的编码的</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.SaveTo(System.Xml.Linq.XElement,System.String,System.Text.Encoding)">
      <summary>
        Save the inner text value of a xml element
      </summary>
      <param name="value"></param>
      <param name="path"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.IsTextFile(System.String,System.Int32)">
      <summary>
        Determined that the target file is a text file or binary file?
        (判断是否是文本文件)
      </summary>
      <param name="path">文件全路径名称</param>
      <returns>是返回True，不是返回False</returns>
      <param name="chunkSize">文件检查的长度，假若在这个长度内都没有超过null的阈值数，则认为该文件为文本文件，默认区域长度为4KB</param>
      <remarks>2012年12月5日</remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.SaveTo(System.Collections.Generic.IEnumerable{System.String},System.String,System.Text.Encoding)">
      <summary>
        将目标字符串集合数据全部写入到文件之中，当所写入的文件位置之上没有父文件夹存在的时候，会自动创建文件夹
      </summary>
      <param name="array"></param>
      <param name="path"></param>
      <param name="encoding"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.TextDoc.SaveTo(System.Text.StringBuilder,System.String,System.Text.Encoding)">
      <summary>
        Save the text content in the <see cref="T:System.Text.StringBuilder"/> object into a text file.
      </summary>
      <param name="sb"></param>
      <param name="path"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.XmlExtensions.SafeLoadXml``1(System.String,Microsoft.VisualBasic.Text.Encodings,System.Func{System.String,System.String})">
      <summary>
        这个函数主要是用作于Linq里面的Select语句拓展的，这个函数永远也不会报错，只会返回空值
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.XmlExtensions.LoadXml``1(System.String,System.Text.Encoding,System.Boolean,System.Func{System.String,System.String},System.Boolean)">
      <summary>
        Load class object from the exists Xml document.(从文件之中加载XML之中的数据至一个对象类型之中)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="XmlFile">The path of the xml document.(XML文件的文件路径)</param>
      <param name="ThrowEx">
        If the deserialization operation have throw a exception, then this function should process this error automatically or just throw it?
        (当反序列化出错的时候是否抛出错误？假若不抛出错误，则会返回空值)
      </param>
      <param name="preprocess">
        The preprocessing on the xml document text, you can doing the text replacement or some trim operation from here.(Xml文件的预处理操作)
      </param>
      <param name="encoding">
        Default is <see cref="P:Microsoft.VisualBasic.Text.TextEncodings.UTF8"/> text encoding.
      </param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.XmlExtensions.LoadXml(System.String,System.Type,System.Text.Encoding,System.Boolean,System.Func{System.String,System.String},System.Boolean)">
      <summary>
        从文件之中加载XML之中的数据至一个对象类型之中
      </summary>
      <param name="XmlFile">XML文件的文件路径</param>
      <param name="ThrowEx">当反序列化出错的时候是否抛出错误？假若不抛出错误，则会返回空值</param>
      <param name="preprocess">Xml文件的预处理操作</param>
      <returns></returns>
      <remarks></remarks>
      <param name="encoding">
        Default is <see cref="P:Microsoft.VisualBasic.Text.TextEncodings.UTF8"/> text encoding.
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.XmlExtensions.GetXml``1(``0,System.Boolean,Microsoft.VisualBasic.Text.Xml.XmlEncodings)">
      <summary>
        Serialization the target object type into a XML document.(将一个类对象序列化为XML文档)
      </summary>
      <typeparam name="T">
        The type of the target object data should be a class object.(目标对象类型必须为一个Class)
      </typeparam>
      <param name="obj"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.XmlExtensions.WriteXML(System.Object,System.Type,System.IO.Stream@,Microsoft.VisualBasic.Text.Xml.XmlEncodings)">
      <summary>
        写入的文本文件的编码格式和XML的编码格式应该是一致的
      </summary>
      <param name="obj"></param>
      <param name="type"></param>
      <param name="out"></param>
      <param name="encoding"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.XmlExtensions.SaveAsXml``1(``0,System.String,System.Boolean,Microsoft.VisualBasic.Text.Encodings,System.String)">
      <summary>
        Save the object as the XML document.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj"></param>
      <param name="saveXml"></param>
      <param name="throwEx"></param>
      <param name="encoding">VB.NET的XML文件的默认编码格式为``utf-16``</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.XmlExtensions.LoadFromXml``1(System.String,System.Boolean)">
      <summary>
        Generate a specific type object from a xml document stream.(使用一个XML文本内容创建一个XML映射对象)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="Xml">This parameter value is the document text of the xml file, not the file path of the xml file.(是Xml文件的文件内容而非文件路径)</param>
      <param name="throwEx">
        Should this program throw the exception when the xml deserialization error happens?
        if False then this function will returns a null value instead of throw exception.
        (在进行Xml反序列化的时候是否抛出错误，默认抛出错误，否则返回一个空对象)
      </param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.XmlExtensions.CreateObjectFromXmlFragment``1(System.String)">
      <summary>
        使用一个XML文本内容的一个片段创建一个XML映射对象
      </summary>
      <typeparam name="T"></typeparam>
      <param name="Xml">是Xml文件的文件内容而非文件路径</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="T:Microsoft.VisualBasic.SecurityString.Md5HashProvider">
      <summary>
        并行化的需求
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.Md5HashProvider.GetMd5hashLong(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])"/> -> <see cref="M:Microsoft.VisualBasic.SecurityString.MD5Hash.ToLong(System.Byte[])"/>
      </summary>
      <param name="input"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.GetMd5Hash(System.String)">
      <summary>
        Calculate md5 hash value for the input string.
      </summary>
      <param name="input"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.GetHashCode(System.String)">
      <summary>
        Gets the hashcode of the input string. (<paramref name="input"/> => <see cref="M:Microsoft.VisualBasic.SecurityString.MD5Hash.GetMd5Hash(System.Byte[])"/> => <see cref="M:Microsoft.VisualBasic.SecurityString.MD5Hash.ToLong(System.String)"/>)
      </summary>
      <param name="input">任意字符串</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.GetHashCode(System.Collections.Generic.IEnumerable{System.Byte})">
      <summary>
        Gets the hashcode of the input string.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.ToLong(System.String)">
      <summary>
        Gets the hashcode of the md5 string.
      </summary>
      <param name="md5">计算所得到的MD5哈希值</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.ToLong(System.Byte[])">
      <summary>
        CityHash algorithm for convert the md5 hash value as a <see cref="T:System.Int64"/> value.
      </summary>
      <param name="bytes">
        this input value should compute from <see cref="M:Microsoft.VisualBasic.SecurityString.Md5HashProvider.GetMd5Bytes(System.Byte[])"/>
      </param>
      <returns></returns>
      <remarks>
        http://stackoverflow.com/questions/9661227/convert-md5-to-long

        The very best solution I found (based on my needs... mix of speed and good hash function) is Google's CityHash.
        The input can be any byte array including an MD5 result and the output is an unsigned 64-bit long.

        CityHash has a very good but Not perfect hash distribution, And Is very fast.

        I ported CityHash from C++ To C# In half an hour. A Java port should be straightforward too.

        Just XORing the bits doesn't give as good a distribution (though admittedly that will be very fast).

        I'm not familiar enough with Java to tell you exactly how to populate a long from a byte array
        (there could be a good helper I'm not familiar with, or I could get some details of arithmetic
        in Java wrong).
        Essentially, though, you'll want to do something like this:

        Long a = md5[0] * 256 * md5[1] + 256 * 256 * md5[2] + 256 * 256 * 256 * md5[3];
        Long b = md5[4] * 256 * md5[5] + 256 * 256 * md5[6] + 256 * 256 * 256 * md5[7];
        Long result = a ^ b;

        Note I have made no attempt To deal With endianness. If you just care about a consistent hash value,
        though, endianness should Not matter.
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.StringToByteArray(System.String)">
      <summary>
        由于md5是大小写无关的，故而在这里都会自动的被转换为小写形式，所以调用这个函数的时候不需要在额外的转换了
      </summary>
      <param name="hex"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.VerifyMd5Hash(System.String,System.String)">
      <summary>
        Verify a hash against a string.
      </summary>
      <param name="input"></param>
      <param name="comparedHash"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.VerifyFile(System.String,System.String)">
      <summary>
        校验两个文件的哈希值是否一致
      </summary>
      <param name="query"></param>
      <param name="subject"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.GetFileHashString(System.String)">
      <summary>
        Get the md5 hash calculation value for a specific file.(获取文件对象的哈希值，请注意，当文件不存在或者文件的长度为零的时候，会返回空字符串)
      </summary>
      <param name="PathUri">The file path of the target file to be calculated.</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.SaltValue(System.String)">
      <summary>
        SHA256 8 bits salt value for the private key.
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.SecurityString.SHA256">
      <summary>
        Derives a SHA256 key from a password using an extension of the PBKDF1 algorithm.
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.SHA256.#ctor(System.String,System.String)">
      <summary>

      </summary>
      <param name="password"></param>
      <param name="saltValue">8 Bytes</param>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.SHA256.DecryptString(System.String)">
      <summary>
        字符串的解密方法
      </summary>
      <param name="cipherText"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.SHA256.EncryptData(System.String)">
      <summary>
        Encrypt the plain text string.
      </summary>
      <param name="plainText"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.SecurityString.SHA256.CertificateSigned">
      <summary>
        The previous key of the sha256 encryption will be expired after the rebuild of this module,
        so that this method is not working on the statics data storage job.
        (在本模块进行重新编译之后，原有的密匙将会失效，故这个属性不适合于静态存储加密使用)
      </summary>
      <value></value>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.SHA256.GetDynamicsCertification``1">
      <summary>
        双重动态数据签名
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.SHA256.GetDynamicsCertification(System.Type)">
      <summary>
        双重动态数据签名
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.SecurityString.TripleDES.#ctor(System.Byte[],System.Byte[])">
      <summary>

      </summary>
      <param name="key">24byte</param>
      <param name="iv">8byte</param>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.PrimitiveParser">
      <summary>
        Simple type parser extension function for <see cref="T:System.String"/>
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.PrimitiveParser.IsNumeric(System.String)">
      <summary>
        Is this token value string is a number?
      </summary>
      <param name="str"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.PrimitiveParser.ParseInteger(System.String)">
      <summary>
        <see cref="T:System.Int32"/> text parser
      </summary>
      <param name="s"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.PrimitiveParser.ParseLong(System.String)">
      <summary>
        <see cref="T:System.Int64"/> text parser
      </summary>
      <param name="s"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.PrimitiveParser.ParseDouble(System.String)">
      <summary>
        <see cref="T:System.Double"/> text parser
      </summary>
      <param name="s"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.PrimitiveParser.ParseSingle(System.String)">
      <summary>
        <see cref="T:System.Single"/> text parser
      </summary>
      <param name="s"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.PrimitiveParser.ParseDate(System.String)">
      <summary>
        <see cref="T:System.DateTime"/> text parser
      </summary>
      <param name="s"></param>
      <returns></returns>

    </member>
    <member name="P:Microsoft.VisualBasic.PrimitiveParser.BooleanValues">
      <summary>
        Convert the string value into the boolean value, this is useful to the text format configuration file into data model.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.PrimitiveParser.ParseBoolean(System.String)">
      <summary>
        Convert the string value into the boolean value, this is useful to the text format configuration file into data model.
        (请注意，空值字符串为False)
      </summary>
      <param name="str"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.WorkFlow.FolkProc``2(System.String,System.String,``0,System.Func{``0,System.Byte[]},System.Func{System.Byte[],``1})">
      <summary>
        创建出一个子进程，然后按照命令行参数<paramref name="CLI"/>执行制定的命令，同时通过内存映射传递复杂参数，最后结束后通过内存映射传递回数据
        主要是通过内存映射减少数据IO的时间，加快计算流程
      </summary>
      <typeparam name="TIn"></typeparam>
      <typeparam name="TOut"></typeparam>
      <param name="exe"></param>
      <param name="CLI"></param>
      <param name="[in]"></param>
      <param name="writer"></param>
      <param name="reader"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.Pipeline.API.WriteData(System.String,Microsoft.VisualBasic.Net.Protocols.RawStream,System.Int32)">
      <summary>
        生成的映射位置为:  &lt;var>:&lt;ChunkSize>
      </summary>
      <param name="var"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.Pipeline.API.TryGetValue(System.String)">
      <summary>

      </summary>
      <param name="var">$var or var</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.Pipeline.API.TryGetValue``1(System.String)">
      <summary>
        不存在的话会返回空值
      </summary>
      <typeparam name="T"></typeparam>
      <param name="var"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.Pipeline.API.IsRef(System.String)">
      <summary>

      </summary>
      <param name="addr">$var:size</param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MMFProtocol.Pipeline.PipeStream">
      <summary>

      </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MMFProtocol.Pipeline.Pipeline">
      <summary>
        exec cmd /var $&lt;piplineName>, this can be using in the CLI programming for passing the variables between the program more efficient
      </summary>

    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.Pipeline.Pipeline.GetValue``1(System.String)">
      <summary>
        假若变量不存在，则返回空值
      </summary>
      <typeparam name="T"></typeparam>
      <param name="var"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.Pipeline.Pipeline.__allocated(System.Int64,Microsoft.VisualBasic.Net.Protocols.RequestStream,System.Net.IPEndPoint)">
      <summary>
        在写数据之前需要先使用这个方法进行内存区块的创建
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MMFProtocol.MapStream.MSWriter">
      <summary>

      </summary>
      <remarks>
        mmfServer的主要功能是创建并维护一个内存映射文件
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.MapStream.MSWriter.#ctor(System.String,System.Int64)">
      <summary>

      </summary>
      <param name="uri"></param>
      <remarks>对象实例会首先尝试以服务器的角色建立连接，当不成功的时候会以客户端的形式建立连接</remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.MMFProtocol.MapStream.MMFStream.udtBadge">
      <summary>
        Stamp; Update Badge
      </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MMFProtocol.MapStream.MMFStream.byteData">
      <summary>
        内存映射文件中所存储的将要进行进程间交换的数据
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.MMFProtocol.MapStream.MSIOReader._udtBadge">
      <summary>
        内存映射文件的更新标识符
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.MapStream.MSIOReader.#ctor(System.String,Microsoft.VisualBasic.MMFProtocol.DataArrival,System.Int64)">
      <summary>

      </summary>
      <param name="uri"></param>
      <param name="callback"></param>
      <param name="ChunkSize">内存映射文件的数据块的预分配大小</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.MapStream.MSIOReader.ReadBadge">
      <summary>
        由于考虑到可能会传递很大的数据块，所以在这里检测数据更新的话只读取头部的8个字节的数据
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MMFProtocol.DataArrival">
      <summary>
        客户端接受到的数据需要经过反序列化解码方能读取
      </summary>
      <param name="data"></param>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.MMFProtocol.ReadNewMessage">
      <summary>

      </summary>
      <param name="message">UTF8 string</param>
    </member>
    <member name="T:Microsoft.VisualBasic.MMFProtocol.MMFSocket">
      <summary>
        MMFProtocol socket object for the inter-process communication on the localhost, this can be using for the data exchange between two process.
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.MMFSocket.#ctor(System.String,System.Int64)">
      <summary>

      </summary>
      <param name="uri"></param>
      <param name="chunkSize">默认的区块大小为100KB，这个对于一般的小文本传输已经足够了</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.MMFSocket.#ctor(System.String,Microsoft.VisualBasic.MMFProtocol.DataArrival)">
      <summary>

      </summary>
      <param name="uri"></param>
      <param name="dataArrivals">
        Public Delegate Sub <see cref="M:Microsoft.VisualBasic.MMFProtocol.MMFSocket.__dataArrival(System.Byte[])"/>(byteData As <see cref="T:System.Byte"/>())
        会优先于事件<see cref="M:Microsoft.VisualBasic.MMFProtocol.MMFSocket.__dataArrival(System.Byte[])"></see>的发生
      </param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.MMFSocket.ReadData">
      <summary>
        直接从映射文件之中读取数据
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.MMFSocket.SendMessage(System.String)">
      <summary>

      </summary>
      <param name="s">
        <see cref="P:System.Text.Encoding.UTF8"/>
      </param>
    </member>
    <member name="T:Microsoft.VisualBasic.MMFProtocol.ProcessLock">
      <summary>
        进程排斥锁
      </summary>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.MMFProtocol.ProcessLock._ProcessLock">
      <summary>
        进程排斥锁
      </summary>
      <remarks>
        程序中采用一个进程排斥锁是由于待日后Mono运行时环境在Linux平台中的WinForm GTK成熟后，向Linux平台迁移，
        由于Visual Baisc/C#所编写的应用程序需要保持单个进程，则需要启用应用程序框架，而很多情况下为了优化的需求应用程序
        无法使用应用程序框架，为了实现一次编译到处运行的目的，程序的代码不会再平台间进行修改，
        由于Linux平台之上不能使用Win32API来保持单进程，为了保持程序对Windows/Linux/MAC三大操作系统的兼容性，故而在这里使用了一个进程排斥锁
      </remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.MMFProtocol.ProcessLock.f_ProcessLock">
      <summary>
        进程锁的排斥情况
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.MMFProtocol.ProcessLock.#ctor(System.String)">
      <summary>

      </summary>
      <param name="strHost">进程排斥锁的锁名</param>
      <remarks></remarks>
    </member>
    <member name="P:Microsoft.VisualBasic.MMFProtocol.ProcessLock.Locked">
      <summary>
        返回当前的进程是否被加锁
      </summary>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.MarshalExtensions">
      <summary>

      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MarshalExtensions.MarshalAs``1(System.IntPtr,System.Int32)">
      <summary>
        Read unmanaged memory using memory pointer.
      </summary>
      <typeparam name="T">
        <see cref="T:System.Int32"/>, <see cref="T:System.Char"/>, <see cref="T:System.Int16"/>, <see cref="T:System.Int64"/>, <see cref="T:System.Single"/>, <see cref="T:System.Byte"/>, <see cref="T:Microsoft.VisualBasic.Emit.Marshal.IntPtr"/>, <see cref="T:System.Double"/>
      </typeparam>
      <param name="p"></param>
      <returns></returns>
      <remarks>
        ```vbnet
        Public Shared Sub Copy(source As IntPtr, destination() As Integer, startIndex As Integer, length As Integer)
        Public Shared Sub Copy(source As IntPtr, destination() As Char, startIndex As Integer, length As Integer)
        Public Shared Sub Copy(source As IntPtr, destination() As Short, startIndex As Integer, length As Integer)
        Public Shared Sub Copy(source As IntPtr, destination() As Long, startIndex As Integer, length As Integer)
        Public Shared Sub Copy(source As IntPtr, destination() As Single, startIndex As Integer, length As Integer)
        Public Shared Sub Copy(source As IntPtr, destination() As Byte, startIndex As Integer, length As Integer)
        Public Shared Sub Copy(source As IntPtr, destination() As IntPtr, startIndex As Integer, length As Integer)
        Public Shared Sub Copy(source As IntPtr, destination() As Double, startIndex As Integer, length As Integer)
        ```
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.MarshalExtensions.MarshalAs``1(``0[]@,System.IntPtr)">
      <summary>
        方便进行数组操作的一个函数
      </summary>
      <typeparam name="T"></typeparam>
      <param name="raw"></param>
      <param name="p"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.EmitReflection">
      <summary>
        Some common used reflection operation extension at here.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetTypesHelper(System.Reflection.Assembly)">
      <summary>
        Try to handle for the bugs in VisualBasic language:

        https://github.com/dotnet/roslyn/issues/23050
      </summary>
      <param name="assm"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.RunApp(System.String,System.String,System.Boolean)">
      <summary>
        Run external [.NET] Program from RAM Memory
      </summary>
      <param name="app"></param>
      <param name="CLI"></param>
      <param name="cs">Going to running a c# program?</param>
      <remarks>
        http://www.codeproject.com/Tips/1108105/Run-external-NET-Program-from-RAM-Memory

        Run external app directly from RAM. You can load the specific file into a ``Byte[]`` Array
        with a ``StreamReader()`` or even download it from WEB via a direct link provided.
        If you loaded the file from disk, you can delete it if you want after it has been loaded
        by a ``StreamReader()``.
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.IsNumericType(System.Object)">
      <summary>
        Determines whether the specified value is of numeric type.
      </summary>
      <param name="o">The object to check.</param>
      <returns>
        true if o is a numeric type; otherwise, false.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.API(System.Type,System.String,System.Boolean)">
      <summary>

      </summary>
      <param name="type"></param>
      <param name="[nameOf]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetTypeElement(System.Type,System.Boolean)">
      <summary>
        得到集合类型的对象之中的元素类型
      </summary>
      <param name="type"></param>
      <param name="strict"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetVersion(System.String)">
      <summary>

      </summary>
      <param name="Product">.NET EXE/DLL assembly path</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.Description(System.Reflection.PropertyInfo)">
      <summary>
        如果不存在<see cref="T:System.ComponentModel.DescriptionAttribute"/>定义则会返回空白字符串
      </summary>
      <param name="prop"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.ModuleVersion(System.Type)">
      <summary>
        Gets the <see cref="T:System.Reflection.AssemblyFileVersionAttribute"/> value from the type defined assembly.
      </summary>
      <param name="type"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetVersion(System.Reflection.Assembly)">
      <summary>

      </summary>
      <param name="assm">.NET EXE/DLL assembly</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.IsModule(System.Type)">
      <summary>
        目标类型是不是VisualBasic之中的``Module``模块类型？
      </summary>
      <param name="typeDef"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.Get``2(System.Collections.Generic.ICollection{``0},System.String,System.Boolean)">
      <summary>
        出错会返回空集合
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="TProperty"></typeparam>
      <param name="collection"></param>
      <param name="Name">使用System.NameOf()操作符来获取</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.IsInheritsFrom(System.Type,System.Type,System.Boolean,System.Int32@)">
      <summary>
        Is type <paramref name="a"/> inherits from <paramref name="base"/> type?
      </summary>
      <param name="a">继承类型继承自基本类型，具备有基本类型的所有特性</param>
      <param name="base">基本类型</param>
      <param name="strict">
        + 这个参数是为了解决比较来自不同的assembly文件之中的相同类型的比较，但是这个可能会在类型转换出现一些BUG
        + 假若不严格要求的话，那么则两种类型相等的时候也会被算作为继承关系
        + 假若是非严格判断，那么对于泛型而言，只要基本类型也相等也会被判断为成立的继承关系，这个是为了<see cref="T:Microsoft.VisualBasic.Scripting.Activity"/>操作设计的

      </param>
      <param name="depth">类型继承的距离值，当这个值越大的时候，说明二者的继承越远，当进行函数重载判断的时候，选择这个距离值越小的越好</param>
      <returns></returns>
      <remarks>假若两个类型是来自于不同的assembly文件的话，即使这两个类型是相同的对象，也会无法判断出来</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.Description``1">
      <summary>
        如果有<see cref="T:System.ComponentModel.DescriptionAttribute"/>标记，则会返回该标记的字符串数据，假若没有则只会返回类型的名称
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.Description(System.Type)">
      <summary>
        如果有<see cref="T:System.ComponentModel.DescriptionAttribute"/>标记，则会返回该标记的字符串数据，假若没有则只会返回类型的名称
      </summary>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.Description(System.Enum)">
      <summary>
        Get the description data from a enum type value, if the target have no <see cref="T:System.ComponentModel.DescriptionAttribute"></see> attribute data
        then function will return the string value from the ToString() function.
      </summary>
      <param name="value"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.Description(System.Reflection.MemberInfo,System.String)">
      <summary>
        获取得到定义该类型成员之上的<see cref="T:System.ComponentModel.DescriptionAttribute"/>值或者默认定义
      </summary>
      <param name="m"></param>
      <param name="default$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetAllEnumFlags``1(``0)">
      <summary>
        Get array value from the input flaged enum <paramref name="value"/>.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.Enums``1">
      <summary>
        Enumerate all of the enum values in the specific <see cref="T:System.Enum"/> type data.(只允许枚举类型，其他的都返回空集合)
      </summary>
      <typeparam name="T">泛型类型约束只允许枚举类型，其他的都返回空集合</typeparam>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetReadWriteProperties(System.Type)">
      <summary>
        Gets all of the can read and write access property from a type define.
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.Usage(System.Reflection.MemberInfo)">
      <summary>
        Get object usage information
      </summary>
      <param name="m"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.ExampleInfo(System.Reflection.MemberInfo)">
      <summary>
        Get example code of the <see cref="M:Microsoft.VisualBasic.EmitReflection.Usage(System.Reflection.MemberInfo)"/>
      </summary>
      <param name="m"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetValue(System.Type,System.Object,System.String)">
      <summary>
        只对属性有效，出错会返回空值
      </summary>
      <param name="obj"></param>
      <param name="Name"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetValue``1(System.Type,System.Object,System.String)">
      <summary>
        只对属性有效，出错会返回空值
      </summary>
      <param name="obj"></param>
      <param name="Name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.Collection2GenericIEnumerable(System.Type,System.Boolean)">
      <summary>
        Try convert the type specific collection data type into a generic enumerable collection data type.(尝试将目标集合类型转换为通用的枚举集合类型)
      </summary>
      <param name="Type">The type specific collection data type.(特定类型的集合对象类型，当然也可以是泛型类型)</param>
      <returns>If the target data type is not a collection data type then the original data type will be returns and the function displays a warning message.</returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetDelegateInvokeEntryPoint(System.Object)">
      <summary>
        Get the method reflection entry point for a anonymous lambda expression.
        (当函数返回Nothing的时候说明目标对象不是一个函数指针)
      </summary>
      <param name="obj"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.NamespaceEntry(System.Type,System.Boolean)">
      <summary>
        Get the scripting namespace value from <see cref="T:Microsoft.VisualBasic.CommandLine.Reflection.Namespace"/>
      </summary>
      <param name="app"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetFullName(System.Reflection.MethodBase,System.Boolean)">
      <summary>
        Gets the full name of a method reflection meta data.
      </summary>
      <param name="method"></param>
      <param name="IncludeAssembly"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetAttribute``1(System.Reflection.MemberInfo)">
      <summary>
        Get the specific type of custom attribute from a property.
        If the target custom attribute is not declared on the target, then this function returns nothing.
        (从一个属性对象中获取特定的自定义属性对象)
      </summary>
      <typeparam name="T">The type of the custom attribute.(自定义属性的类型)</typeparam>
      <param name="Property">Target property object.(目标属性对象)</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.GetAttribute``1(System.Reflection.PropertyInfo)">
      <summary>
        Get the specific type of custom attribute from a property.
        (从一个属性对象中获取特定的自定义属性对象，找不到的话，就会返回空值)
      </summary>
      <typeparam name="T">The type of the custom attribute.(自定义属性的类型)</typeparam>
      <param name="Property">Target property object.(目标属性对象)</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.EmitReflection.CreateObject``1(System.Object[],System.Boolean,System.String)">
      <summary>

      </summary>
      <typeparam name="T"></typeparam>
      <param name="args">构造函数里面的参数信息</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.LongestTag(System.String[])">
      <summary>
        从第一个字符开始，比较出最长的label串，注意，这个不是LCS问题
      </summary>
      <param name="labels$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.CharCodes(System.Collections.Generic.IEnumerable{System.Char})">
      <summary>
        <see cref="M:Microsoft.VisualBasic.Strings.AscW(System.Char)"/>
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.RandomASCIIString(System.Int32)">
      <summary>
        32-126
      </summary>
      <param name="len%"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.StrUtils.InvariantCulture">
      <summary>
        <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>, Gets the System.Globalization.CultureInfo object that is culture-independent
        (invariant).
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.SplitWithSeparator(System.String,System.Char)">
      <summary>
        Split text with a separator char
      </summary>
      <param name="text">The text.</param>
      <param name="sep">The separator.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.SplitWithSeparatorFromRight(System.String,System.Char)">
      <summary>
        Split text with a separator char
      </summary>
      <param name="text">The text.</param>
      <param name="sep">The separator.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.SplitWithSpaces(System.String)">
      <summary>
        Splits the text with spaces.
      </summary>
      <param name="text">The text.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.SplitIntoLines(System.String)">
      <summary>
        Splits the text into lines.
      </summary>
      <param name="text">The text.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.AddWithDelim(System.String,System.String,System.String)">
      <summary>
        Concats two strings with a delimiter.
      </summary>
      <param name="s1">string 1</param>
      <param name="delim">delimiter</param>
      <param name="s2">string 2</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.ContactWithDelim(System.String,System.String,System.String)">
      <summary>
        Contacts the with delim.
      </summary>
      <param name="str1">The STR1.</param>
      <param name="delim">The delim.</param>
      <param name="str2">The STR2.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.ContactWithDelimSkipEmpty(System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>
        Contact with delim, delim is used after the first not Empty item
      </summary>
      <param name="items"></param>
      <param name="delim"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.ContactWithDelimSkipNull(System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>
        Contact with delim, delim is used after the first not null item
      </summary>
      <param name="items"></param>
      <param name="delim"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.ContactWithDelimSkipSome(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
      <summary>
        Contacts the items with delim skip some.
      </summary>
      <param name="items">The items.</param>
      <param name="delim">The delim.</param>
      <param name="skip">The skip.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.ContactWithDelim(System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>
        Contacts the items with delim.
      </summary>
      <param name="items">The items.</param>
      <param name="delim">The delim.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.ContactWithDelim(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
      <summary>
        Contacts the items with delim.
      </summary>
      <param name="items">The items.</param>
      <param name="delim">The delim.</param>
      <param name="initialValue">The initial value.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.ContactWithDelim(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String)">
      <summary>
        Contacts the items with delim.
      </summary>
      <param name="items">The items.</param>
      <param name="delim">The delim.</param>
      <param name="initialValue">The initial value.</param>
      <param name="endValue">The end value.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.ContactWithDelim``1(System.Collections.Generic.IEnumerable{``0},System.String)">
      <summary>
        Contacts the items with delim.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="items">The items.</param>
      <param name="delim">The delim.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.ContactWithDelim``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String)">
      <summary>
        Contacts the items with delim.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="items">The items.</param>
      <param name="delim">The delim.</param>
      <param name="initialValue">The initial value.</param>
      <param name="endValue">The end value.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.GetHeader(System.String,System.Int32)">
      <summary>
        Gets the header.
      </summary>
      <param name="text">The text.</param>
      <param name="length">The length.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.GetSubStringBetween(System.String,System.Char,System.Char)">
      <summary>
        Get the sub string between 'ket' and 'bra'.
      </summary>
      <param name="text"></param>
      <param name="bra"></param>
      <param name="ket"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.GetLastSubStringBetween(System.String,System.Char,System.Char)">
      <summary>
        Get the sub string between 'ket' and 'bra'.
      </summary>
      <param name="text"></param>
      <param name="bra"></param>
      <param name="ket"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.StartWithUpperCase(System.String)">
      <summary>
        Starts with upper case.
      </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.UpperCaseFirstChar(System.String)">
      <summary>
        Uppers the case of the first char.
      </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.LowerCaseFirstChar(System.String)">
      <summary>
        Lowers the case of the first char.
      </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StrUtils.GetWords(System.String)">
      <summary>
        split text into words by space and newline chars, multiple spaces are treated as a single space.
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.StringHelpers">
      <summary>
        The extensions module for facilities the string operations.
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.StringHelpers.EmptyString">
      <summary>
        Using <see cref="F:System.String.Empty"/> as default value
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.TrimNewLine(System.String,System.String)">
      <summary>
        Replace the <see cref="F:Microsoft.VisualBasic.Constants.vbCrLf"/> with the specific string.
      </summary>
      <param name="src"></param>
      <param name="VbCRLF_Replace"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.IsEmptyStringVector(System.String[],System.Boolean)">
      <summary>
        判断这个字符串数组之中的所有的元素都是空字符串？
      </summary>
      <param name="s$">字符串数组</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.StringHashCode(System.String)">
      <summary>
        https://github.com/darkskyapp/string-hash
      </summary>
      <param name="s$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.MaxLengthString(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        常用于gdi+绘图操作，和<see cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)"/>共同使用
      </summary>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.MaxLengthString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
      <summary>
        获取最大长度的字符串
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="getString"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Strips(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        将<paramref name="replaces"/>列表之中的字符串都替换为空字符串
      </summary>
      <param name="s$"></param>
      <param name="replaces"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.CharString(System.Collections.Generic.IEnumerable{System.Char})">
      <summary>
        将一个任意的目标字符集合转换为字符串对象
      </summary>
      <param name="chs"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.FormatString(System.String,System.Object[])">
      <summary>
        Replaces the format item in a specified string with the string representation
        of a corresponding object in a specified array.
      </summary>
      <param name="s">A composite format string.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
      <returns>
        A copy of format in which the format items have been replaced by the string representation
        of the corresponding objects in args.
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.RepeatString(System.String,System.Int32)">
      <summary>
        this is to emulate what's evailable in PHP
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.JoinBy``1(System.Collections.Generic.IEnumerable{``0},System.String)">
      <summary>
        Join and contact the text tokens with a specific <paramref name="delimiter"/> string.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="data"></param>
      <param name="delimiter$"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.GetTagValue(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
        Text parser for the format: ``tagName{<paramref name="delimiter"/>}value``
      </summary>
      <param name="s"></param>
      <param name="delimiter"></param>
      <param name="trim">
        Needs Removes all leading and trailing white-space characters from
        the current <see cref="T:System.String"/> object.
      </param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.GetTagValue(System.String,System.String,System.String,System.Boolean)">
      <summary>
        Text parser for the format: ``tagName{<paramref name="delimiter"/>}value``
      </summary>
      <param name="s$"></param>
      <param name="delimiter$"></param>
      <param name="trim$">
        Chars collection for <see cref="T:System.String"/> function
      </param>
      <param name="failureNoName"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.TextEquals(System.String,System.String)">
      <summary>
        Shortcuts for method <see cref="M:System.Object.Equals(System.Object,System.Object)"/>(s1, s2, <see cref="F:System.StringComparison.OrdinalIgnoreCase"/>)
      </summary>
      <param name="s1"></param>
      <param name="s2"></param>
      <returns></returns>

    </member>
    <member name="F:Microsoft.VisualBasic.StringHelpers.RegexICSng">
      <summary>
        <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase"/> + <see cref="F:System.Text.RegularExpressions.RegexOptions.Singleline"/>
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.StringHelpers.RegexICMul">
      <summary>
        <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase"/> + <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline"/>
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.StringEmpty(System.String,System.Boolean)">
      <summary>
        <paramref name="s"/> Is Nothing, <see cref="M:System.String.IsNullOrEmpty(System.String)"/>, <see cref="M:System.String.IsNullOrWhiteSpace(System.String)"/>
      </summary>
      <param name="s">The input test string</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.RemoveLast(System.Text.StringBuilder)">
      <summary>
        Call <see cref="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)"/>(<see cref="P:System.Text.StringBuilder.Length"/> - 1, 1) for removes the last character in the string sequence.
      </summary>
      <param name="s"></param>

    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Reverse(System.Text.StringBuilder@)">
      <summary>
        Returns a reversed version of String s.
      </summary>
      <param name="sb"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Reverse(System.String)">
      <summary>
        Returns a reversed version of String s.
      </summary>
      <param name="s"></param>
      <returns></returns>

    </member>
    <member name="P:Microsoft.VisualBasic.StringHelpers.NonStrictCompares">
      <summary>
        String compares with ignored chars' case.(忽略大小写为非严格的比较)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Parts(System.String,System.Int32)">
      <summary>
        Split long text data into seperate lines by the specific <paramref name="len"/> value.
      </summary>
      <param name="s"></param>
      <param name="len"></param>
      <returns></returns>
      <remarks>Using for the Fasta sequence writer.</remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.StringHelpers.REGEX_EMAIL">
      <summary>
        Regex expression for parsing E-Mail URL
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.StringHelpers.REGEX_URL">
      <summary>
        Regex exprression for parsing the http/ftp URL
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Count(System.String,System.Char)">
      <summary>
        Counts the specific char that appeared in the input string.
        (计数在字符串之中所出现的指定的字符的出现的次数)
      </summary>
      <param name="str"></param>
      <param name="ch"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Count(System.Collections.Generic.IEnumerable{System.String},System.String,System.StringComparison)">
      <summary>
        计算目标字符串在序列之中出现的次数
      </summary>
      <param name="source"></param>
      <param name="target$"></param>
      <param name="method"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Count(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
        Count the phrase in <paramref name="text"/>
      </summary>
      <param name="text$"></param>
      <param name="phrase$"></param>
      <param name="method"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.GetString(System.String,System.Char)">
      <summary>
        获取""或者其他字符所包围的字符串的值，请注意，假若只有一个<paramref name="wrapper"/>的话，字符串将不会进行任何处理
      </summary>
      <param name="s"></param>
      <param name="wrapper"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.GetStackValue(System.String,System.String,System.String)">
      <summary>
        Get sub string value from the region that between the <paramref name="left"/> and <paramref name="right"/>.
        (这个函数是直接分别查找左右两边的定位字符串来进行切割的)
      </summary>
      <param name="str$"></param>
      <param name="left$"></param>
      <param name="right$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.GetBetween(System.String,System.String,System.String)">
      <summary>
        和<see cref="M:Microsoft.VisualBasic.StringHelpers.GetStackValue(System.String,System.String,System.String)"/>相似，这个函数也是查找起始和终止字符串之间的字符串，
        但是这个函数是查找相邻的两个标记，而非像<see cref="M:Microsoft.VisualBasic.StringHelpers.GetStackValue(System.String,System.String,System.String)"/>函数一样
        直接查找字符串的两端的定位结果
      </summary>
      <param name="str$"></param>
      <param name="strStart$"></param>
      <param name="strEnd$"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.FormatZero``1(``0,System.String)">
      <summary>
        在字符串前面填充指定长度的00序列，假若输入的字符串长度大于fill的长度，则不再进行填充
      </summary>
      <typeparam name="T"></typeparam>
      <param name="n"></param>
      <param name="fill"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Intersection(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})">
      <summary>
        求交集
      </summary>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Intersection(System.String[][])">
      <summary>
        求交集
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.MatchPattern(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>
        Does this input string is matched by the specific regex expression?
        (判断所输入的整个字符串是否为进行判断的<paramref name="regex"/>模式，
        即使用正则表达式所匹配的结果字符串和所输入的字符串一致)
      </summary>
      <param name="str"></param>
      <param name="regex"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>
        Searches the specified input string for the first occurrence of the specified regular expression.
      </summary>
      <param name="input">The string to search for a match.</param>
      <param name="pattern">The regular expression pattern to match.</param>
      <param name="options"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Match(System.Text.RegularExpressions.Match,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>
        Get regex match value from the target input string.
      </summary>
      <param name="input"></param>
      <param name="pattern"></param>
      <param name="options"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.SaveTo(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>
        Save this string dictionary object as json file.
      </summary>
      <param name="dict"></param>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.TokenCount(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
        Count the string value numbers.(请注意，这个函数是倒序排序的)
      </summary>
      <param name="tokens"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.StringSplit(System.String,System.String,System.Boolean,System.Text.RegularExpressions.RegexOptions)">
      <summary>
        This method is used to replace most calls to the Java <see cref="M:System.String.Split(System.Char[])"/> method.
      </summary>
      <param name="source"></param>
      <param name="pattern">
        <see cref="T:System.Text.RegularExpressions.Regex"/> patterns
      </param>
      <param name="trimTrailingEmptyStrings"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.SplitBy(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
        Alias for <see cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)"/>
      </summary>
      <param name="str$"></param>
      <param name="deli$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.StringReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>
        将正则匹配成功的字符串替换为指定的目标字符串：<paramref name="replaceAs"/>
      </summary>
      <param name="s$"></param>
      <param name="pattern$"></param>
      <param name="replaceAs$"></param>
      <param name="opt"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Split(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,System.Text.RegularExpressions.RegexOptions)">
      <summary>
        String collection tokenized by a certain delimiter string element.
      </summary>
      <param name="source"></param>
      <param name="delimiter">
        Using ``String.Equals`` or Regular expression function to determined this delimiter
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Split(System.Collections.Generic.IEnumerable{System.String},Microsoft.VisualBasic.Language.Default.Assert{System.String},System.Boolean)">
      <summary>
        这个函数适合将一个很大的数组进行分割
      </summary>
      <param name="source"></param>
      <param name="assertionDelimiter">分隔符断言，判断当前的对象是不是分隔符</param>
      <param name="includes"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Located(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,System.Boolean)">
      <summary>
        String compares using <see cref="T:System.String"/>, if the target value could not be located,
        then -1 will be return from this function.
      </summary>
      <param name="collection"></param>
      <param name="text"></param>
      <param name="caseSensitive"></param>
      <param name="fuzzy">
        If fuzzy, then <see cref="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)"/> will be used if ``String.Equals`` method have no result.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.WildcardsLocated(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
      <summary>

      </summary>
      <param name="collection"></param>
      <param name="text">可以使用通配符</param>
      <param name="caseSensitive"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.Lookup(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
      <summary>
        Search the string by keyword in a string collection. Unlike search function <see cref="M:Microsoft.VisualBasic.StringHelpers.Located(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,System.Boolean)"/>
        using function <see cref="T:System.String"/> function to search string, this function using <see cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)"/>
        to search the keyword.
      </summary>
      <param name="source"></param>
      <param name="keyword"></param>
      <param name="caseSensitive"></param>
      <returns>返回第一个找到关键词的行数，没有找到则返回-1</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.EqualsAny(System.String,System.String[])">
      <summary>
        判断目标字符串是否与字符串参数数组之中的任意一个字符串相等，大小写不敏感，假若没有相等的字符串，则会返回空字符串，假若找到了相等的字符串，则会返回该字符串
      </summary>
      <param name="source"></param>
      <param name="compareTo"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.InStrAny(System.String,System.String[])">
      <summary>
        查找到任意一个既返回位置，大小写不敏感，假若查找不到，则返回-1值，判断是否查找成功，可以使用 &lt;0 来完成，
        因为是通过InStr来完成的，所以查找成功的时候，最小的值是1，即字符串序列的第一个位置，也是元素0位置
      </summary>
      <param name="text"></param>
      <param name="find"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.DistinctIgnoreCase(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        Removes the duplicated string from the source <paramref name="strings"/> collection
        with string compare ignore case.
      </summary>
      <param name="strings"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.lTokens(System.String,System.Boolean)">
      <summary>
        Line tokens. **=> Parsing the text into lines by using <see cref="F:Microsoft.VisualBasic.Constants.vbCr"/>, <see cref="F:Microsoft.VisualBasic.Constants.vbLf"/>**.
        (函数对文本进行分行操作，由于在Windows(<see cref="F:Microsoft.VisualBasic.Constants.vbCrLf"/>)和
        Linux(<see cref="F:Microsoft.VisualBasic.Constants.vbCr"/>, <see cref="F:Microsoft.VisualBasic.Constants.vbLf"/>)平台上面所生成的文本文件的换行符有差异，
        所以可以使用这个函数来进行统一的分行操作)
      </summary>
      <param name="s"></param>
      <returns></returns>
      <param name="trim">
        Set <see cref="T:System.Boolean"/> to avoid a reader bug in the csv data reader <see cref="T:Microsoft.VisualBasic.ComponentModel.BufferedStream"/>
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.IsNullOrEmpty(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
        判断这个字符串集合是否为空集合，函数会首先按照常规的集合为空进行判断，然后假若不为空的话，假若只含有一个元素并且该唯一的元素的值为空字符串，则也认为这个字符串集合为空集合
      </summary>
      <param name="values"></param>
      <param name="strict">FALSE 为非严谨，只进行常规判断，TRUE 为严谨模式，会假若不为空的话，假若只含有一个元素并且该唯一的元素的值为空字符串，则也认为这个字符串集合为空集合</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.StringHelpers.TextLast(System.String,System.String)">
      <summary>
        Does the <paramref name="token"/> is located at the last of <paramref name="s"/> text string.
      </summary>
      <param name="s$"></param>
      <param name="token$"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.LargeTextFile">
      <summary>
        Wrapper for the file operations.
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.LargeTextFile.IteratesTableData(System.String,System.String@,System.Int32,Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        Iterates read all lines in a very large text file, using for loading a very large size csv/tsv file
      </summary>
      <param name="path$">file path</param>
      <param name="title$">The header line of this large size csv/tsv file.</param>
      <param name="skip%">Skip n lines, then start to populate data lines.</param>
      <param name="encoding">Text file encoding.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.LargeTextFile.Peeks(System.String,System.Int32)">
      <summary>
        当一个文件非常大以致无法使用任何现有的文本编辑器查看的时候，可以使用本方法查看其中的一部分数据
      </summary>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.LargeTextFile.Tails(System.String,System.Int32,System.Text.Encoding)">
      <summary>
        Peek the tails of a large text file.(尝试查看大文件的尾部的数据)
      </summary>
      <param name="path">If the file is not exists, then this function will returns nothing.</param>
      <param name="length">Peeks of the number of characters.(字符的数目)</param>
      <param name="encoding">
        Default value is <see cref="P:Microsoft.VisualBasic.Text.TextEncodings.DefaultEncoding"/>
      </param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="T:Microsoft.VisualBasic.ProgramPathSearchTool">
      <summary>
        Search the path from a specific keyword.(通过关键词来推测路径)
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.ChangeSuffix(System.String,System.String)">
      <summary>
        修改路径字符串之中的文件名后缀拓展名为<paramref name="newSuffix"/>指定的值。<paramref name="newSuffix"/>不需要添加小数点
      </summary>
      <param name="path$"></param>
      <param name="newSuffix$">新的文件拓展名，这个拓展名不带有小数点，例如需要修改为*.csv，则直接赋值csv即可</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.Delete(System.String,System.Boolean)">
      <summary>
        Execute file delete
      </summary>
      <param name="path$"></param>
      <param name="throwEx"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.ExtensionSuffix(System.String)">
      <summary>
        函数返回文件的拓展名后缀，请注意，这里的返回值是不会带有小数点的
      </summary>
      <param name="path$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.DIR(System.IO.DirectoryInfo,System.String)">
      <summary>
        Combine directory path.(这个主要是用于生成文件夹名称)

        ###### Example usage

        ```vbnet
        Dim images As Dictionary(Of String, String) =
        (ls - l - {"*.png", "*.jpg", "*.gif"} &lt;= PlatformEngine.wwwroot.DIR("images")) _
        .ToDictionary(Function(file) file.StripAsId,
        AddressOf FileName)
        ```
      </summary>
      <param name="d"></param>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.MkDIR(System.String,System.Boolean)">
      <summary>
        Make directory
      </summary>
      <param name="DIR"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.EnumerateFiles(System.String,System.String[])">
      <summary>
        使用<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)"/>函数枚举
        **当前的**(不是递归的搜索所有的子文件夹)文件夹之中的
        所有的符合条件的文件路径
      </summary>
      <param name="DIR">文件夹路径</param>
      <param name="keyword">文件名进行匹配的关键词</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.ListFiles(System.String,System.String)">
      <summary>
        ```
        ls - l - r - pattern &lt;= DIR
        ```

        的简化拓展函数模式
      </summary>
      <param name="DIR$"></param>
      <param name="pattern$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.ReadDirectory(System.String,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>
        这个函数是会直接枚举出所有的文件路径的
      </summary>
      <param name="DIR$"></param>
      <param name="[option]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.TheFile(System.String,System.String,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>
        这个函数只会返回文件列表之中的第一个文件，故而需要提取某一个文件夹之中的某一个特定的文件，推荐使用这个函数
      </summary>
      <param name="DIR$"></param>
      <param name="keyword$"></param>
      <param name="opt"></param>
      <returns>当查找不到目标文件或者文件夹不存在的时候会返回空值</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.ToFileURL(System.String)">
      <summary>
        Gets the URL type file path.(获取URL类型的文件路径)
      </summary>
      <param name="Path"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="F:Microsoft.VisualBasic.ProgramPathSearchTool.ILLEGAL_PATH_CHARACTERS_ENUMERATION">
      <summary>
        枚举所有非法的路径字符
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.NormalizePathString(System.String,System.Boolean)">
      <summary>
        将目标字符串之中的非法的字符替换为"_"符号以成为正确的文件名字符串。当参数<paramref name="OnlyASCII"/>为真的时候，意味着所有的非字母或者数字的字符都会被替换为下划线，默认为真
      </summary>
      <param name="str"></param>
      <param name="OnlyASCII">当本参数为真的时候，仅26个字母，0-9数字和下划线_以及小数点可以被保留下来</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.Long2Short(System.String,System.String)">
      <summary>
        假设文件名过长发生在文件名和最后一个文件夹的路径之上
      </summary>
      <param name="path"></param>
      <returns></returns>
      <remarks>
        System.IO.PathTooLongException: The specified path, file name, or both are too long.
        The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.
      </remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.ProgramPathSearchTool.DriveLabel">
      <summary>
        + C:\
        + AB:\
        + AB2:\
        + etc...
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.PathIllegal(System.String)">
      <summary>
        File path illegal?
      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.FileLength(System.String)">
      <summary>
        Gets the file length, if the path is not exists, then returns -1.
        (安全的获取文件的大小，如果目标文件不存在的话会返回-1)
      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.FileCopy(System.String,System.String)">
      <summary>
        Safe file copy operation.(请注意，<paramref name="copyTo"/>参数的字符串最末尾必须是``/``或者``\``才会被认作为目录路径)
      </summary>
      <param name="source$"></param>
      <param name="copyTo$">Can be file name or directory name</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.FileExists(System.String,System.Boolean)">
      <summary>
        Check if the target file object is exists on your file system or not.
        (这个函数也会自动检查目标<paramref name="path"/>参数是否为空)
      </summary>
      <param name="path"></param>
      <param name="ZERO_Nonexists">将0长度的文件也作为不存在</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.DirectoryExists(System.String)">
      <summary>
        Determine that the target directory is exists on the file system or not?(判断文件夹是否存在)
      </summary>
      <param name="DIR"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.DirectoryName(System.String)">
      <summary>
        Get the directory its name of the target <paramref name="dir"/> directory
      </summary>
      <param name="dir$"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.FileOpened(System.String)">
      <summary>
        Check if the file is opened by other code?(检测文件是否已经被其他程序打开使用之中)
      </summary>
      <param name="FileName">目标文件</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.BaseName(System.String,System.Boolean)">
      <summary>
        Gets the name of the target file or directory, if the target is a file, then the name without the extension name.
        (获取目标文件夹的名称或者文件的不包含拓展名的名称)
      </summary>
      <returns></returns>
      <remarks>
        ###### 2017-2-14
        原先的函数是依靠系统的API来工作的，故而只能够工作于已经存在的文件之上，
        所以在这里为了更加方便的兼容文件夹或者文件路径，在这使用字符串的方法来
        进行截取
      </remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.GetBaseName(System.String)">
      <summary>
        <see cref="M:Microsoft.VisualBasic.ProgramPathSearchTool.BaseName(System.String,System.Boolean)"/> shortcuts extension.
      </summary>
      <param name="path"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.ParentDirName(System.String)">
      <summary>
        Gets the name of the file's parent directory, returns value is a name, not path.
        (获取目标文件的父文件夹的文件夹名称，是名称而非路径)
      </summary>
      <param name="file"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.ParentPath(System.String,System.Boolean)">
      <summary>
        Returns the directory path value of the parent directory.
        (这个函数是返回文件夹的路径而非名称，这个函数不依赖于系统的底层API，
        因为系统的底层API对于过长的文件名会出错)
      </summary>
      <param name="file"></param>
      <returns></returns>
      <remarks>这个函数不依赖于系统的底层API，因为系统的底层API对于过长的文件名会出错</remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.GetFile(System.String,System.String,System.String[])">
      <summary>

      </summary>
      <param name="DIR"></param>
      <param name="keyword"></param>
      <param name="ext">元素的排布是有顺序的</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.BatchMd5Renamed(System.String)">
      <summary>
        这个方法没得卵用
      </summary>
      <param name="DIR"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.LoadSourceEntryList(System.String,System.String[],System.Boolean)">
      <summary>
        [<see cref="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories"/>，这个函数会扫描目标文件夹下面的所有文件。]
        请注意，本方法是不能够产生具有相同的主文件名的数据的。假若目标GBK是使用本模块之中的方法保存或者导出来的，
        则可以使用本方法生成Entry列表；（在返回的结果之中，KEY为文件名，没有拓展名，VALUE为文件的路径）
      </summary>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.LoadSourceEntryList(System.String,System.String[])">
      <summary>
        可以使用本方法生成Entry列表；（在返回的结果之中，KEY为文件名，没有拓展名，VALUE为文件的路径）
        请注意，这个函数会搜索目标文件夹下面的所有的文件夹的
      </summary>
      <param name="source"></param>
      <param name="ext">文件类型的拓展名称</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.LoadEntryList(System.String,System.String[])">
      <summary>
        允许有重复的数据
      </summary>
      <param name="DIR"></param>
      <param name="exts"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.SourceCopy(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
      <summary>
        将不同来源<paramref name="source"></paramref>的文件复制到目标文件夹<paramref name="copyto"></paramref>之中
      </summary>
      <param name="source"></param>
      <param name="copyto"></param>
      <returns>返回失败的文件列表</returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.SearchProgram(System.String,System.String)">
      <summary>
        Invoke the search session for the program file using a specific keyword string value.(使用某个关键词来搜索目标应用程序)
      </summary>
      <param name="DIR"></param>
      <param name="Keyword"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.SearchScriptFile(System.String,System.String,System.String)">
      <summary>

      </summary>
      <param name="DIR"></param>
      <param name="Keyword"></param>
      <param name="withExtension">脚本文件的文件拓展名</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.SearchDirectory(System.String,System.String)">
      <summary>

      </summary>
      <param name="SpecificDrive">所制定进行搜索的驱动器，假若希望搜索整个硬盘，请留空字符串</param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.BranchRule(System.String,System.String)">
      <summary>
        商标搜索规则
      </summary>
      <param name="ProgramFiles"></param>
      <param name="Keyword"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.RelativePath(System.String)">
      <summary>
        获取相对于本应用程序的目标文件的相对路径(请注意，所生成的相对路径之中的字符串最后是没有文件夹的分隔符\或者/的)
      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.RelativePath(System.String,System.String,System.Boolean)">
      <summary>
        Gets the relative path of file system object <paramref name="pcTo"/> reference to the directory path <paramref name="pcFrom"/>.
        (请注意，所生成的相对路径之中的字符串最后是没有文件夹的分隔符\或者/的)
      </summary>
      <param name="pcFrom">生成相对路径的参考文件夹</param>
      <param name="pcTo">所需要生成相对路径的目标文件系统对象的绝对路径或者相对路径</param>
      <param name="appendParent">是否将父目录的路径也添加进入相对路径之中？默认是</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.GetFullPath(System.String)">
      <summary>
        Gets the full path of the specific file.(为了兼容Linux，这个函数会自动替换路径之中的\为/符号)
      </summary>
      <param name="file"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.GetDirectoryFullPath(System.String,System.String)">
      <summary>
        Gets the full path of the specific directory.
      </summary>
      <param name="dir"></param>
      <param name="stack">当程序出错误的时候记录进入日志的一个追踪目标参数，调试用</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.TrimSuffix(System.String)">
      <summary>
        Removes the file extension name from the file path.(去除掉文件的拓展名)
      </summary>
      <param name="file"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.TrimDIR(System.String)">
      <summary>
        Removes the last \ and / character in a directory path string.
        (使用这个函数修剪文件夹路径之中的最后一个分隔符，以方便生成文件名)
      </summary>
      <param name="DIR"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.FileName(System.String)">
      <summary>
        返回``文件名称.拓展名``
      </summary>
      <param name="path"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.SafeCopyTo(System.String,System.String)">
      <summary>
        进行安全的复制，出现错误不会导致应用程序崩溃，大文件不推荐使用这个函数进行复制
      </summary>
      <param name="source"></param>
      <param name="copyTo"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.WebServiceUtils">
      <summary>
        The extension module for web services works.
      </summary>

    </member>
    <member name="P:Microsoft.VisualBasic.WebServiceUtils.Protocols">
      <summary>
        Web protocols enumeration
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.isURL(System.String)">
      <summary>
        Determine that is this uri string is a network location?
        (判断这个uri字符串是否是一个网络位置)
      </summary>
      <param name="url"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.BuildReqparm(System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
        Build the request parameters for the HTTP POST
      </summary>
      <param name="dict"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.BuildReqparm(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
        Build the request parameters for the HTTP POST
      </summary>
      <param name="data"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.IsSocketPortOccupied(System.Exception)">
      <summary>
        Only one usage of each socket address (protocol/network address/port) Is normally permitted
      </summary>
      <param name="ex"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.GenerateDictionary(System.String[],System.Boolean)">
      <summary>
        Create a parameter dictionary from the request parameter tokens.
        (请注意，字典的key默认为转换为小写的形式)
      </summary>
      <param name="tokens">
        元素的个数必须要大于1，因为从url里面解析出来的元素之中第一个元素是url本身，则不再对url做字典解析
      </param>
      <returns>
        ###### 2016-11-21
        因为post可能会传递数组数据进来，则这个时候就会出现重复的键名，则已经不再适合字典类型了，这里改为返回<see cref="M:Microsoft.VisualBasic.KeyValuePairExtensions.NameValueCollection(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}})"/>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.QueryStringParameters(System.String,System.Boolean)">
      <summary>
        不像<see cref="M:Microsoft.VisualBasic.WebServiceUtils.PostUrlDataParser(System.String,System.Boolean)"/>函数，这个函数不会替换掉转义字符，并且所有的Key都已经被默认转换为小写形式的了
      </summary>
      <param name="url">URL parameters</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.BuildUrlData(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)">
      <summary>
        生成URL请求的参数
      </summary>
      <param name="data"></param>
      <param name="escaping">是否进行对value部分的字符串数据进行转义</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.UrlDecode(System.String,System.Text.Encoding)">
      <summary>
        在服务器端对URL进行解码还原
      </summary>
      <param name="s"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.UrlEncode(System.String,System.Text.Encoding)">
      <summary>
        进行url编码，将特殊字符进行转码
      </summary>
      <param name="s"></param>
      <param name="encoding"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.UrlPathEncode(System.String)">
      <summary>
        编码整个URL，这个函数会自动截取出query string parameter部分，然后对截取出来的query string parameter进行编码
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.PostUrlDataParser(System.String,System.Boolean)">
      <summary>
        假若你的数据之中包含有SHA256的加密数据，则非常不推荐使用这个函数进行解析。因为请注意，这个函数会替换掉一些转义字符的，所以会造成一些非常隐蔽的BUG
      </summary>
      <param name="data">转义的时候大小写无关</param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.CopyStream(System.IO.Stream)">
      <summary>
        Download stream data from the http response.
      </summary>
      <param name="stream">
        Create from <see cref="M:Microsoft.VisualBasic.WebServiceUtils.GetRequestRaw(System.String,System.Boolean,System.String)"/>
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.GetRequest(System.String,System.Boolean,System.String)">
      <summary>
        GET http request
      </summary>
      <param name="url"></param>
      <returns></returns>
    </member>
    <member name="P:Microsoft.VisualBasic.WebServiceUtils.Proxy">
      <summary>
        Example for xx-net tool:

        ```
        http://127.0.0.1:8087/
        ```
      </summary>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.GetRequestRaw(System.String,System.Boolean,System.String)">
      <summary>

      </summary>
      <param name="url"></param>
      <param name="https"></param>
      <param name="userAgent">

        fix a bug for github API:

        Protocol violation using Github api

        You need to set UserAgent like this:
        webRequest.UserAgent = "YourAppName"
        Otherwise it will give The server committed a protocol violation. Section=ResponseStatusLine Error.
      </param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.POST(System.String,System.Collections.Specialized.NameValueCollection,System.String,System.String)">
      <summary>
        POST http request for get html.
        (请注意，假若<paramref name="params"/>之中含有字符串数组的话，则会出错，这个时候需要使用
        <see cref="M:Microsoft.VisualBasic.WebServiceUtils.POST(System.String,System.Collections.Generic.Dictionary{System.String,System.String[]},System.String,System.String,System.String)"/>方法)
      </summary>
      <param name="url$"></param>
      <param name="params"></param>
      <param name="Referer$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.POST(System.String,System.Collections.Generic.Dictionary{System.String,System.String[]},System.String,System.String,System.String)">
      <summary>
        POST http request for get html
      </summary>
      <param name="url$"></param>
      <param name="data"></param>
      <param name="Referer$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.DownloadFile(System.String,System.String,System.String,System.String,System.Int32,System.Net.DownloadProgressChangedEventHandler,System.String,System.String)">
      <summary>
        download the file from <paramref name="strUrl"></paramref> to <paramref name="save">local file</paramref>.
      </summary>
      <param name="strUrl"></param>
      <param name="save">The file path of the file saved</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.GetDownload(System.String,System.String)">
      <summary>
        使用GET方法下载文件
      </summary>
      <param name="url"></param>
      <param name="savePath"></param>
      <returns></returns>

    </member>
    <member name="F:Microsoft.VisualBasic.WebServiceUtils.MicrosoftDNS">
      <summary>
        Microsoft DNS Server
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.WebServiceUtils.GetMyIPAddress">
      <summary>
        获取我的公网IP地址，假若没有连接互联网的话则会返回局域网IP地址
      </summary>
      <returns></returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Extensions">
      <summary>
        Common extension methods library for convenient the programming job.
      </summary>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Range(System.Collections.Generic.IEnumerable{System.Double},System.Double)">
      <summary>
        Create the numeric range from a numeric value collection
      </summary>
      <param name="data"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Log2(System.Double)">
      <summary>
        ``Math.Log(x, newBase:=2)``
      </summary>
      <param name="x#"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.GetHexInteger(System.String)">
      <summary>
        将16进制的数字转换为10进制数
      </summary>
      <param name="hex$"></param>
      <returns></returns>
      <remarks>
        因为直接使用vb的<see cref="M:Microsoft.VisualBasic.Conversion.Val(System.Char)"/>函数转换，在Linux上面可能会出错，所以需要在这里用.NET自己的方法来转换
      </remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.SaveAsTabularMapping(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}},System.String,System.Boolean,System.String[],Microsoft.VisualBasic.Text.Encodings)">
      <summary>
        Save as a tsv file, with data format like:

        ```
        <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Name"/>\t<see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Value"/>\t<see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Description"/>
        ```
      </summary>
      <param name="source"></param>
      <param name="path$"></param>
      <param name="encoding"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.FormatTime(System.TimeSpan)">
      <summary>
        ``days, hh:mm:ss.ms``
      </summary>
      <param name="t"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.KeysJson``1(System.Collections.Generic.Dictionary{System.String,``0})">
      <summary>
        Returns all of the keys in a dictionary in json format
      </summary>
      <typeparam name="V"></typeparam>
      <param name="d"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.NotNull``1(``0[])">
      <summary>
        Returns the first not nothing object.
      </summary>
      <typeparam name="T">
        Due to the reason of value type is always not nothing, so that this generic type constrain as Class reference type.
      </typeparam>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.FirstNotEmpty(System.String[])">
      <summary>
        Returns the first not null or empty string.
      </summary>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Second``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,``0)">
      <summary>
        Returns the second element in the source collection, if the collection
        is nothing or elements count not enough, then will returns nothing if
        the <paramref name="suppressError"/> option was opend, otherwise this
        function will throw exception.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Keys``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
      <summary>
        Gets all keys value from the target <see cref="T:System.Collections.Generic.KeyValuePair`2"/> collection.
      </summary>
      <typeparam name="T1"></typeparam>
      <typeparam name="T2"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Add``1(``0[]@,``0)">
      <summary>
        Dynamics add a element into the target array.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Add``1(``0[]@,System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Append value collection to the end of the target <paramref name="array"/>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="values"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Add``1(``0[]@,``0[])">
      <summary>
        Add given elements into an array object.(会自动跳过空集合，这个方法是安全的)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Append``1(``0[],System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Add given elements into an array object and then returns the target array object <paramref name="buffer"/>.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="buffer"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Add``1(``0[]@,Microsoft.VisualBasic.Language.List{``0})">
      <summary>
        Add given elements into an array object.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Add``1(Microsoft.VisualBasic.Language.List{``0}@,``0[])">
      <summary>
        Adds the elements of the specified collection to the end of the List`1.
        (会自动跳过空集合，这个方法是安全的)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="list"></param>
      <param name="value">The collection whose elements should be added to the end of the List`1.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Get``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)">
      <summary>
        Safe get the specific index element from the target collection, is the index value invalid, then default value will be return.
        (假若下标越界的话会返回默认值)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="index"></param>
      <param name="[default]">Default value for invalid index is nothing.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ElementAtOrDefault``1(``0[],System.Int32,``0)">
      <summary>
        This is a safely method for gets the value in a array, if the index was outside of the boundary, then the default value will be return.
        (假若下标越界的话会返回默认值)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="index"></param>
      <param name="[default]">Default value for return when the array object is nothing or index outside of the boundary.</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.If``1(System.Boolean,``0,``0)">
      <summary>
        Function test the Boolean expression and then decided returns which part of the value.
        (这个函数主要是用于Delegate函数指针类型或者Lambda表达式的)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="expr">
        <see cref="T:System.Boolean"/> Expression
      </param>
      <param name="[True]">value returns this parameter if the value of the expression is True</param>
      <param name="[False]">value returns this parameter if the value of the expression is False</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Constrain``2(System.Collections.Generic.IEnumerable{``1})">
      <summary>
        Constrain the inherits class type into the base type.
        (基类集合与继承类的集合约束)
      </summary>
      <typeparam name="T">继承类向基类进行约束</typeparam>
      <typeparam name="Tbase">基类</typeparam>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ToBoolean(System.Int64)">
      <summary>
        0 -> False
        1 -> True
      </summary>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.TryGetValue``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1,System.String)">
      <summary>
        假若不存在目标键名，则返回空值，默认值为空值
      </summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
      <param name="table"></param>
      <param name="index"></param>
      <param name="[default]"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.NormalizeXMLString(System.String)">
      <summary>
        对Xml文件之中的特殊字符进行转义处理
      </summary>
      <param name="str"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.DateToString(System.DateTime)">
      <summary>
        Format the datetime value in the format of yy/mm/dd hh:min
      </summary>
      <param name="dat"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Split``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean)">
      <summary>
        Data partitioning function.
        (将目标集合之中的数据按照<paramref name="parTokens"></paramref>参数分配到子集合之中，
        这个函数之中不能够使用并行化Linq拓展，以保证元素之间的相互原有的顺序，
        每一个子集和之中的元素数量为<paramref name="parTokens"/>)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="parTokens">每一个子集合之中的元素的数目</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.SplitIterator``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean)">
      <summary>
        Performance the partitioning operation on the input sequence.
        (请注意，这个函数只适用于数量较少的序列。对所输入的序列进行分区操作，<paramref name="parTokens"/>函数参数是每一个分区里面的元素的数量)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="parTokens"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Merge two type specific collection.(函数会忽略掉空的集合，函数会构建一个新的集合，原有的集合不受影响)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.JoinBy(System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>
        This is a safe function: if the source string collection is nothing, then whistle function will returns a empty string instead of throw exception.
        (<see cref="T:System.String"/>，这是一个安全的函数，当数组为空的时候回返回空字符串)
      </summary>
      <param name="tokens"></param>
      <param name="delimiter"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.JoinBy(System.Collections.Generic.IEnumerable{System.Int32},System.String)">
      <summary>
        <see cref="T:System.String"/>，这是一个安全的函数，当数组为空的时候回返回空字符串
      </summary>
      <param name="values"></param>
      <param name="delimiter"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Join``1(``0,System.Collections.Generic.IEnumerable{``0})">
      <summary>
        ``X, ....``

        (这个函数是一个安全的函数，当<paramref name="collection"/>为空值的时候回忽略掉<paramref name="collection"/>，
        只返回包含有一个<paramref name="obj"/>元素的列表)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj"></param>
      <param name="collection"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.SelectFile(System.String,System.String)">
      <summary>
        Show open file dialog and return the selected file path.
      </summary>
      <param name="ext$"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Invoke(System.Diagnostics.Process)">
      <summary>
        本方法会执行外部命令并等待其执行完毕，函数返回状态值
      </summary>
      <param name="Process"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.RunDriver(Microsoft.VisualBasic.ComponentModel.ITaskDriver)">
      <summary>
        非线程的方式启动，当前线程会被阻塞在这里直到运行完毕
      </summary>
      <param name="driver"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.DriverRun(Microsoft.VisualBasic.ComponentModel.ITaskDriver)">
      <summary>
        Run the driver in a new thread, NOTE: from this extension function calls, then run thread is already be started,
        so that no needs of calling the method <see cref="M:System.Threading.Thread.Start"/> again.
        (使用线程的方式启动，在函数调用之后，线程是已经启动了的，所以不需要再次调用<see cref="M:System.Threading.Thread.Start"/>方法了)
      </summary>
      <param name="driver">
        The object which is implements the interface <see cref="T:Microsoft.VisualBasic.ComponentModel.ITaskDriver"/>
      </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.DataCounts``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Gets the element counts in the target data collection, if the collection object is nothing or empty
        then this function will returns ZERO, others returns Collection.Count.(返回一个数据集合之中的元素的数目，
        假若这个集合是空值或者空的，则返回0，其他情况则返回Count拓展函数的结果)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="collection"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Offset(System.Int32[]@,System.Int32)">
      <summary>
        All of the number value in the target array offset a integer value.
      </summary>
      <param name="array"></param>
      <param name="intOffset"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Offset(System.Int64[]@,System.Int32)">
      <summary>
        All of the number value in the target array offset a integer value.
      </summary>
      <param name="array"></param>
      <param name="intOffset"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ParseDateTime(System.String)">
      <summary>
        Parsing the dat value from the expression text, if any exception happend, a null date value will returned.
        (空字符串会返回空的日期)
      </summary>
      <param name="s"></param>
      <returns></returns>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.SetValue``1(``0@,``0)">
      <summary>
        Value assignment to the target variable.(将<paramref name="value"/>参数里面的值赋值给<paramref name="var"/>参数然后返回<paramref name="value"/>)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="var"></param>
      <param name="value"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@,``0@,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ShadowCopy``1(``0,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@,``0@)">
      <summary>
        Copy the source value directly to the target variable and then return the source value.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ModifyValue``1(System.Reflection.PropertyInfo,``0,System.Func{System.Object,System.Object})">
      <summary>
        Modify target object property value using a <paramref name="valueModifier">specific value provider</paramref> and then return original instance object.
        (修改目标对象的属性之后返回目标对象)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.InsertOrUpdate``1(System.Collections.Generic.Dictionary{System.String,``0}@,``0)">
      <summary>
        Insert data or update the exists data in the dictionary, if the target object with <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key"/>
        is not exists in the dictionary, then will be insert, else the old value will be replaced with the parameter
        value <paramref name="item"/>.
        (向字典对象之中更新或者插入新的数据，假若目标字典对象之中已经存在了一个数据的话，则会将原有的数据覆盖，并返回原来的数据)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="dict"></param>
      <param name="item"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Remove``1(System.Collections.Generic.Dictionary{System.String,``0}@,``0)">
      <summary>
        Remove target object from dictionary.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="dict"></param>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.IsNullOrEmpty(System.Text.StringBuilder)">
      <summary>
        The <see cref="T:System.Text.StringBuilder"/> object its content is nothing?
      </summary>
      <param name="sBuilder"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ToVector``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
      <summary>
        Merge the target array collection into one collection.(将目标数组的集合合并为一个数组)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Unlist``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
      <summary>
        Empty list will be skip and ignored.
        (这是一个安全的方法，空集合会被自动跳过，并且这个函数总是返回一个集合不会返回空值)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.MatrixToUltraLargeVector``1(System.Collections.Generic.IEnumerable{``0[]})">
      <summary>
        Merge the target array collection into one collection.
        (将目标数组的集合合并为一个数组，这个方法是提供给超大的集合的，即元素的数目非常的多的，即超过了<see cref="T:System.Int32"></see>的上限值)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.AddRange``1(System.Collections.Generic.LinkedList{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Add a linked list of a collection of specific type of data.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="list"></param>
      <param name="data"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.MatrixTranspose``1(System.Collections.Generic.IEnumerable{``0[]})">
      <summary>
        矩阵转置： 将矩阵之中的元素进行行列位置的互换
      </summary>
      <typeparam name="T">矩阵之中的元素类型</typeparam>
      <param name="MAT">为了方便理解和使用，矩阵使用数组的数组来表示的</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.MatrixTransposeIgnoredDimensionAgreement``1(System.Collections.Generic.IEnumerable{``0[]})">
      <summary>
        将矩阵之中的元素进行行列位置的互换，请注意，假若长度不一致的话，会按照最短的元素来转置，故而使用本函数可能会造成一些信息的丢失
      </summary>
      <typeparam name="T"></typeparam>
      <param name="MAT"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.SplitMV(System.String,System.String,System.Int32)">
      <summary>

      </summary>
      <param name="DIR">The source directory.</param>
      <param name="moveTo"></param>
      <param name="Split"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.IsNaNImaginary(System.Double)">
      <summary>
        The target parameter <paramref name="n"/> value is NaN or not a real number or not?
        (判断目标实数是否为一个无穷数或者非计算的数字，产生的原因主要来自于除0运算结果或者达到了
        <see cref="T:System.Double"></see>的上限或者下限)
      </summary>
      <param name="n"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.FuzzyMatching(System.String,System.String,System.Boolean,System.Double)">
      <summary>
        Fuzzy match two string, this is useful for the text query or searching.
        (请注意，这个函数是不会自动转换大小写的，如果是需要字符大小写不敏感，
        请先将query以及subject都转换为小写)
      </summary>
      <param name="query"></param>
      <param name="Subject"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.GetItem``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
        这个是一个安全的方法，假若下标越界或者目标数据源为空的话，则会返回空值
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.StdError(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
        求取该数据集的标准差
      </summary>
      <param name="data"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="F:Microsoft.VisualBasic.Extensions.Scan0">
      <summary>
        The first element in a collection.
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.CheckDuplicated``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
        函数只返回有重复的数据
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="TTag"></typeparam>
      <param name="source"></param>
      <param name="getKey"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.RemoveDuplicates``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
        移除重复的对象，这个函数是根据对象所生成的标签来完成的
      </summary>
      <typeparam name="T"></typeparam>
      <typeparam name="Tag"></typeparam>
      <param name="source"></param>
      <param name="getKey">得到对象的标签</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.TrimNull``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Remove all of the null object in the target object collection.
        (这个是一个安全的方法，假若目标集合是空值，则函数会返回一个空的集合)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.TrimNull(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        Remove all of the null object in the target object collection
      </summary>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Shuffles``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Return a collection with randomize element position in <paramref name="source">the original collection</paramref>.
        (从原有序序列中获取一个随机元素的序列)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.SeqRandom(System.Int32)">
      <summary>
        返回n长度的序列数值，这些序列数值是打乱顺序的，但是升序排序之后会得到1:n的序列
        请注意，这个序列并不是随机数，而是将n长度的序列之中的元素打乱顺序的结果
      </summary>
      <param name="n"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.CopyTo``1(``0,``0@)">
      <summary>
        Copy the value in <paramref name="value"></paramref> into target variable <paramref name="target"></paramref> and then return the target variable.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="value"></param>
      <param name="target"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.MoveNext(System.Int64@)">
      <summary>
        <paramref name="p"></paramref> plus one and then return its previous value. (p++)
      </summary>
      <param name="p"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Move(System.Int64@,System.Int32)">
      <summary>
        变量<paramref name="p"/>移动距离<paramref name="d"/>然后返回其移动之前的值
      </summary>
      <param name="p"></param>
      <param name="d"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Move(System.Int32@,System.Int32)">
      <summary>
        变量<paramref name="p"/>移动距离<paramref name="d"/>然后返回其移动之前的值
      </summary>
      <param name="p"></param>
      <param name="d"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Move(System.Double@,System.Int32)">
      <summary>
        变量<paramref name="p"/>移动距离<paramref name="d"/>然后返回其移动之前的值
      </summary>
      <param name="p"></param>
      <param name="d"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.TakeRandomly``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
        随机的在目标集合中选取指定数目的子集合
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <param name="counts">当目标数目大于或者等于目标集合的数目的时候，则返回目标集合</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ToStringArray``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Convert target object type collection into a string array using the Object.ToString() interface function.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.SwapWith``1(``0@,``0@)">
      <summary>
        Swap the value in the two variables.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="obj1"></param>
      <param name="obj2"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.SwapItem``1(Microsoft.VisualBasic.Language.List{``0}@,``0,``0)">
      <summary>
        Swap the two item position in the target <paramref name="List">list</paramref>.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="List"></param>
      <param name="obj_1"></param>
      <param name="obj_2"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.WriteAddress``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)">
      <summary>
        Add array location index value for the <see cref="T:Microsoft.VisualBasic.ComponentModel.IAddressOf"/> elements in the sequence.
        (为列表中的对象添加对象句柄值)
      </summary>
      <param name="source"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Sequence``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
        Gets the subscript index of a generic collection.(获取某一个集合的下标的集合)
      </summary>
      <typeparam name="T">集合中的元素为任意类型的</typeparam>
      <param name="source">目标集合对象</param>
      <returns>A integer array of subscript index of the target generic collection.</returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Boolean)">
      <summary>
        将目标键值对对象的集合转换为一个字典对象
      </summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
      <param name="source"></param>
      <param name="remoteDuplicates">当这个参数为False的时候，出现重复的键名会抛出错误，当为True的时候，有重复的键名存在的话，可能会丢失一部分的数据</param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
        This object collection is a null object or contains zero count items.
      </summary>
      <typeparam name="T"></typeparam>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.IsNullOrEmpty``2(System.Collections.Generic.Dictionary{``0,``1})">
      <summary>
        字典之中是否是没有任何数据的？
      </summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
      <param name="dict"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.IsNullOrEmpty``1(System.Collections.Generic.Queue{``0})">
      <summary>
        这个队列之中是否是没有任何数据的?
      </summary>
      <typeparam name="T"></typeparam>
      <param name="queue"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.IsNullOrEmpty``1(Microsoft.VisualBasic.Language.List{``0})">
      <summary>
        这个动态列表之中是否是没有任何数据的？
      </summary>
      <typeparam name="T"></typeparam>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.IsNullOrEmpty``1(``0[])">
      <summary>
        This object array is a null object or contains zero count items.(判断某一个对象数组是否为空)
      </summary>
      <typeparam name="T"></typeparam>
      <returns></returns>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.GetLength``1(``0[])">
      <summary>
        0 for null object
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Shell(System.String)">
      <summary>
        执行一个命令行语句，并返回一个IO重定向对象，以获取被执行的目标命令的标准输出
      </summary>
      <param name="CLI"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.π(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
        获取一个实数集合中所有元素的积
      </summary>
      <param name="source"></param>
      <returns></returns>
      <remarks></remarks>

    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.FillBlank(System.Drawing.Image@,System.Drawing.Brush)">
      <summary>
        Fill the newly created image data with the specific color brush
      </summary>
      <param name="Image"></param>
      <param name="FilledColor"></param>
      <remarks></remarks>
    </member>
    <member name="F:Microsoft.VisualBasic.Extensions.null">
      <summary>
        Nothing
      </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.Removes``1(Microsoft.VisualBasic.Language.List{``0}@,System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Remove all of the element in the <paramref name="collection"></paramref> from target <paramref name="List">list</paramref>
      </summary>
      <typeparam name="T"></typeparam>
      <param name="List"></param>
      <param name="collection"></param>
      <remarks></remarks>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.RemoveLast``1(System.Collections.Generic.List{``0}@)">
      <summary>
        Removes the last element in the List object.(这个拓展函数同时兼容.NET框架的list类型以及sciBASIC之中的list类型)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="dotNETlist"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Extensions.RemoveLast``1(Microsoft.VisualBasic.Language.List{``0}@)">
      <summary>
        Removes the last element in the List object.
        (这个拓展函数同时兼容.NET框架的list类型以及sciBASIC之中的<see cref="T:Microsoft.VisualBasic.Language.List`1"/>类型)
      </summary>
      <typeparam name="T"></typeparam>
      <param name="list"></param>
      <returns></returns>
    </member>
  </members>
</doc>
