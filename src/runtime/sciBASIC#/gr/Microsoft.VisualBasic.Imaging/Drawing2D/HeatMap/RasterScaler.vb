Imports System.Drawing
Imports System.Drawing.Imaging
Imports Microsoft.VisualBasic.Imaging.BitmapImage

Namespace Drawing2D.HeatMap

    Public Class RasterScaler : Implements IDisposable

        Dim disposedValue As Boolean
        Dim buffer As BitmapBuffer

        ''' <summary>
        ''' 
        ''' </summary>
        ''' <param name="heatmap">
        ''' a heatmap imaging result which is generated by the <see cref="PixelRender"/>
        ''' </param>
        Sub New(heatmap As Bitmap)
            buffer = BitmapBuffer.FromBitmap(heatmap, ImageLockMode.ReadOnly)
        End Sub

        Public Sub Scale(g As IGraphics, newSize As Size)
            Dim width As Single = newSize.Width / buffer.Width
            Dim height As Single = newSize.Height / buffer.Height
            Dim cellSize As New SizeF(width, height)
            Dim color As SolidBrush
            Dim c As Color

            For x As Integer = 0 To buffer.Width - 1
                For y As Integer = 0 To buffer.Height - 1
                    c = buffer.GetPixel(x, y)

                    If Not c.IsTransparent Then
                        color = New SolidBrush(c)
                        g.FillRectangle(color, x * width, y * width, cellSize)
                    End If
                Next
            Next
        End Sub

        Protected Overridable Sub Dispose(disposing As Boolean)
            If Not disposedValue Then
                If disposing Then
                    ' TODO: dispose managed state (managed objects)
                    Call buffer.Dispose()
                End If

                ' TODO: free unmanaged resources (unmanaged objects) and override finalizer
                ' TODO: set large fields to null
                disposedValue = True
            End If
        End Sub

        ' ' TODO: override finalizer only if 'Dispose(disposing As Boolean)' has code to free unmanaged resources
        ' Protected Overrides Sub Finalize()
        '     ' Do not change this code. Put cleanup code in 'Dispose(disposing As Boolean)' method
        '     Dispose(disposing:=False)
        '     MyBase.Finalize()
        ' End Sub

        Public Sub Dispose() Implements IDisposable.Dispose
            ' Do not change this code. Put cleanup code in 'Dispose(disposing As Boolean)' method
            Dispose(disposing:=True)
            GC.SuppressFinalize(Me)
        End Sub
    End Class
End Namespace