#Region "Microsoft.VisualBasic::3caaf0d11c52f13f579a940ff900698b, RNA-Seq\BOW\BOW\BWA.vb"

    ' Author:
    ' 
    '       asuka (amethyst.asuka@gcmodeller.org)
    '       xie (genetics@smrucc.org)
    '       xieguigang (xie.guigang@live.com)
    ' 
    ' Copyright (c) 2018 GPL3 Licensed
    ' 
    ' 
    ' GNU GENERAL PUBLIC LICENSE (GPL3)
    ' 
    ' 
    ' This program is free software: you can redistribute it and/or modify
    ' it under the terms of the GNU General Public License as published by
    ' the Free Software Foundation, either version 3 of the License, or
    ' (at your option) any later version.
    ' 
    ' This program is distributed in the hope that it will be useful,
    ' but WITHOUT ANY WARRANTY; without even the implied warranty of
    ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    ' GNU General Public License for more details.
    ' 
    ' You should have received a copy of the GNU General Public License
    ' along with this program. If not, see <http://www.gnu.org/licenses/>.



    ' /********************************************************************************/

    ' Summaries:

    ' Module BWA
    ' 
    '     Function: Aln, Bwasw, Bwt2sa, Bwtupdate, Fa2pac
    '               Fastmap, Index, Pac2bwt, Pac2bwtgen, Pac2cspac
    '               PaireEndMapping, Sampe, Samse, SingleEndMapping, Stdsw
    ' 
    ' /********************************************************************************/

#End Region

Imports Microsoft.VisualBasic.ApplicationServices
Imports Microsoft.VisualBasic.CommandLine
Imports Microsoft.VisualBasic.CommandLine.Reflection
Imports Microsoft.VisualBasic.Scripting.MetaData

''' <summary>
''' Program: bwa (alignment via Burrows-Wheeler transformation)
''' Contact: Heng Li &lt;lh3@sanger.ac.uk>
''' </summary>
''' <remarks>
''' 
''' Program: bwa (alignment via Burrows-Wheeler transformation)
''' Version: 0.6.1-r104
''' Contact: Heng Li &lt;lh3@sanger.ac.uk>
''' 
''' Usage:   bwa &lt;command> [options]
''' 
''' Command: index         index sequences in the FASTA format
'''          aln           gapped/ungapped alignment
'''          samse         generate alignment (single ended)
'''          sampe         generate alignment (paired ended)
'''          bwasw         BWA-SW for long queries
'''          fastmap       identify super-maximal exact matches
''' 
'''          fa2pac        convert FASTA to PAC format
'''          pac2bwt       generate BWT from PAC
'''          pac2bwtgen    alternative algorithm for generating BWT
'''          bwtupdate     update .bwt to the new format
'''          bwt2sa        generate SA from BWT and Occ
'''          pac2cspac     convert PAC to color-space PAC
'''          stdsw         standard SW/NW alignment
''' 
''' </remarks>
<Package("BWA.API",
                    Description:="Program: bwa (alignment via Burrows-Wheeler transformation)<br />
Version: 0.6.1-r104<br />
Contact: Heng Li &lt;lh3@sanger.ac.uk><br />
                    <br />
Usage:   bwa &lt;command> [options]<br />
                    <br />
Command: index         index sequences in the FASTA format<br />
          aln           gapped/ungapped alignment<br />
          samse         generate alignment (single ended)<br />
          sampe         generate alignment (paired ended)<br />
          bwasw         BWA-SW for long queries<br />
          fastmap       identify super-maximal exact matches<br />
 <br />
          fa2pac        convert FASTA to PAC format<br />
          pac2bwt       generate BWT from PAC<br />
          pac2bwtgen    alternative algorithm for generating BWT<br />
          bwtupdate     update .bwt to the new format<br />
          bwt2sa        generate SA from BWT and Occ<br />
          pac2cspac     convert PAC to color-space PAC<br />
          stdsw         standard SW/NW alignment",
                    Publisher:="rd@sanger.ac.uk",
                    Cites:="Li, H. and R. Durbin (2009). ""Fast And accurate Short read alignment With Burrows-Wheeler transform."" Bioinformatics 25(14): 1754-1760.
<p>MOTIVATION: The enormous amount of short reads generated by the new DNA sequencing technologies call for the development of fast and accurate read alignment programs. 
A first generation of hash table-based methods has been developed, including MAQ, which is accurate, feature rich and fast enough to align short reads from a single individual. However, MAQ does not support gapped alignment for single-end reads, which makes it unsuitable for alignment of longer reads where indels may occur frequently. 
The speed of MAQ is also a concern when the alignment is scaled up to the resequencing of hundreds of individuals. 
RESULTS: We implemented Burrows-Wheeler Alignment tool (BWA), a new read alignment package that is based on backward search with Burrows-Wheeler Transform (BWT), to efficiently align short sequencing reads against a large reference sequence such as the human genome, allowing mismatches and gaps. 
BWA supports both base space reads, e.g. from Illumina sequencing machines, and color space reads from AB SOLiD machines. 
Evaluations on both simulated and real data suggest that BWA is approximately 10-20x faster than MAQ, while achieving similar accuracy. In addition, BWA outputs alignment in the new standard SAM (Sequence Alignment/Map) format. 
Variant calling and other downstream analyses after the alignment can be achieved with the open source SAMtools software package. AVAILABILITY: http://maq.sourceforge.net.",
                    Url:="http://bio-bwa.sourceforge.net/bwa.shtml")>
<Cite(Title:="Fast And accurate Short read alignment With Burrows-Wheeler transform.", Journal:="Bioinformatics",
      Abstract:="MOTIVATION: The enormous amount of short reads generated by the new DNA sequencing technologies call for the development of fast and accurate read alignment programs. 
A first generation of hash table-based methods has been developed, including MAQ, which is accurate, feature rich and fast enough to align short reads from a single individual. 
However, MAQ does not support gapped alignment for single-end reads, which makes it unsuitable for alignment of longer reads where indels may occur frequently. 
The speed of MAQ is also a concern when the alignment is scaled up to the resequencing of hundreds of individuals. 
<p><p>RESULTS: We implemented Burrows-Wheeler Alignment tool (BWA), a new read alignment package that is based on backward search with Burrows-Wheeler Transform (BWT), to efficiently align short sequencing reads against a large reference sequence such as the human genome, allowing mismatches and gaps. 
BWA supports both base space reads, e.g. from Illumina sequencing machines, and color space reads from AB SOLiD machines. 
Evaluations on both simulated and real data suggest that BWA is approximately 10-20x faster than MAQ, while achieving similar accuracy. In addition, BWA outputs alignment in the new standard SAM (Sequence Alignment/Map) format. 
Variant calling and other downstream analyses after the alignment can be achieved with the open source SAMtools software package. 
<p><p>AVAILABILITY: http://maq.sourceforge.net.", URL:="http://maq.sourceforge.net", Authors:="Li, H. and R. Durbin",
      Pages:="1754-1760", Year:=2009, Issue:="14", Volume:=25,
      AuthorAddress:="Wellcome Trust Sanger Institute, Wellcome Trust Genome Campus, Cambridge, CB10 1SA, UK.",
      DOI:="10.1093/bioinformatics/btp324",
      ISSN:="1367-4811 (Electronic)
1367-4803 (Linking)",
      Keywords:="*Algorithms
Genomics/*methods
Sequence Alignment/*methods
Sequence Analysis, DNA/methods
*Software",
      PubMed:=19451168)>
Public Module BWA


    'bwa的使用方法

    'bwa的使用需要两种输入文件：

    'Reference genome data   (fasta格式 .fa, .fasta, .fna)
    '     Short reads data   (fastaq格式 .fastaq, .fq)


    'step 1: 建立 Index
    '根据reference genome data(e.g. reference.fa) 建立 Index File

    'bwa index -a bwtsw reference.fa

    'bwa index 指令更多的用法及 options，通过以下的命令来查看：bwa index


    'step 2: 寻找 SA coordinates
    '如果是pair-end 数据（leftRead.fastq和rightRead.fastq）两个文件分别处理

    'bwa aln reference.fa leftRead.fastq > leftRead.sai
    'bwa aln reference.fa rightRead.fastq > rightRead.sai
    'bwa aln reference.fa singleRead.fastq > singleRead.sai

    '如果希望多线程运行，在其中加入 -t这个参数，另外-f这个参数可以指定结果输出文件，如:
    'bwa aln -c -t 3 -f leftreads.sai reference.fa leftreads.fastq


    'step 3:转换SA coordinates输出为sam
    '如果是pair-end数据

    'bwa sampe -f pair-end.sam reference.fa leftRead.sai rightRead.sai leftRead.fastq rightread.fastq

    '如果是single reads数据

    'bwa samse -f single.sam reference.fa single.sai single.fastq


    '值此Reads的mapping工作已经完成，关于bwa更详细的用法以及输出结果SAM文件的格式说明，可以参考官方文档.
    'http://bio-bwa.sourceforge.net/bwa.shtml


    ''' <summary>
    ''' index sequences in the FASTA format
    ''' </summary>
    ''' <remarks></remarks>
    ''' 
    <ExportAPI("Index", Info:="[Step 1] Index sequences in the FASTA format")>
    Public Function Index(<Parameter("ref", "The genome reference fasta sequence.")> Reference As String,
                          <Parameter("-a", "BWT construction algorithm: bwtsw or is [is]")> Optional Algorithm As String = "bwtsw") As Integer

        Dim argv As String = $"index -a {Algorithm} ""{Reference}"""
        Dim BWA_EXE As String = CliResCommon.TryRelease(NameOf(My.Resources.BWA))
        Dim i As Integer = New IORedirectFile(BWA_EXE, argv).Run()

        Return i
    End Function

    <ExportAPI("aln", Info:="[Step 2]")>
    Public Function Aln(<Parameter("ref", "The genome reference fasta sequence file.")> Reference As String,
                        <Parameter("Reads", "The RNA-Seq fastaq reads file *.fq")> Fastaq As String,
                        <Parameter("sai", "(*.sai) If this parameter is not specific then the default file name of the *.fq reads file will be used.")>
                            Optional SAI As String = "") _
 _
        As <FunctionReturns("The file path of the sai index file.")> String

        If String.IsNullOrEmpty(SAI) Then
            SAI = FileIO.FileSystem.GetParentPath(Fastaq) & "/" & BaseName(Fastaq) & ".sai"
        End If

        Dim argvs As String = String.Format(ALN_SA_COORDINATES, SAI.CLIPath, Reference.CLIPath, Fastaq.CLIPath)
        Dim IO As New Microsoft.VisualBasic.CommandLine.IORedirectFile(CliResCommon.TryRelease(NameOf(My.Resources.BWA)), argv:=argvs)

        Call IO.Run()

        Return SAI
    End Function

    ''' <summary>
    ''' bwa aln -c -t 3 -f {leftreads.sai} {reference.fa} {leftreads.fastq}
    ''' </summary>
    Const ALN_SA_COORDINATES As String = "aln -f ""{2}"" ""{0}"" ""{1}"""

#Region "Auto Batch Methods"

    ''' <summary>
    ''' 双向测序的数据
    ''' </summary>
    ''' <param name="Left">left fastq</param>
    ''' <param name="Right">right fastq</param>
    ''' <param name="Reference">参考基因组的fasta序列的文件路径</param>
    <ExportAPI("Mapping.PaireEnd", Info:="The sam mapping file will be saved at the location of the reference genome directory.")>
    Public Function PaireEndMapping(<Parameter("Ref", "The reference genome sequence fasta file.")> Reference As String,
                                    <Parameter("Left.fq")> Left As String,
                                    <Parameter("Right.fq")> Right As String,
                                    <Parameter("Dir.Export", "If this optional parameter is null then the reference fasta folder will be used for Sam file saved.")> Optional Export As String = "") As String

        Dim BWA_EXE As String = CliResCommon.TryRelease(NameOf(My.Resources.BWA))

        Call Console.WriteLine($"[DEBUG {Now.ToString}] BWA:  {BWA_EXE.ToFileURL.CLIPath }")

        '对左右数据生成SA坐标
        Dim LeftSAI As String = FileIO.FileSystem.GetParentPath(Left) & "/" & BaseName(Left) & ".sai"
        Dim RightSAI As String = FileIO.FileSystem.GetParentPath(Right) & "/" & BaseName(Right) & ".sai"

        Dim LeftBWA As New IORedirectFile(BWA_EXE, String.Format(ALN_SA_COORDINATES, Reference, Left, LeftSAI))

        Dim InvokeHandle As Func(Of Integer) = AddressOf LeftBWA.Run
        Dim AyResult = InvokeHandle.BeginInvoke(Nothing, Nothing)
        Call New IORedirectFile(BWA_EXE, String.Format(ALN_SA_COORDINATES, Reference, Right, RightSAI)).Run()
        Call InvokeHandle.EndInvoke(AyResult)

        Call Console.WriteLine($"[DEBUG {Now.ToString }] Paired-End Indexing job done! Start to mapping reads onto the reference genome!")

        If String.IsNullOrEmpty(Export) Then
            Export = FileIO.FileSystem.GetParentPath(Reference)
        Else
            Export = FileIO.FileSystem.GetDirectoryInfo(Export).FullName
        End If

        Dim SAM As String = $"{Export}/{BaseName(Left)}__{BaseName(Right)}.sam"
        Call New IORedirectFile(BWA_EXE, $"sampe -f ""{SAM}"" ""{Reference}"" ""{LeftSAI}"" ""{RightSAI}"" ""{Left}"" ""{Right}""").Run()
        Return SAM
    End Function

    ''' <summary>
    ''' Mapping单项测序的数据
    ''' </summary>
    ''' <returns></returns>
    ''' 
    <ExportAPI("Mapping.SingleEnd")>
    Public Function SingleEndMapping(<Parameter("ref", "(*.fasta) The genome reference fasta file.")> Reference As String,
                                     <Parameter("Reads", "The RNA-Seq fastaq reads file *.fq")> Fastaq As String,
                                     <Parameter("sam", "If this parameter is not specific, then the file name of the *.fq reads file will be used as default.")> Optional SAM As String = "") As String

        If String.IsNullOrEmpty(SAM) Then
            SAM = FileIO.FileSystem.GetParentPath(Fastaq) & "/" & BaseName(Fastaq) & ".sam"
        End If

        Dim sai As String = ""

        Call BWA.Index(Reference)                       'Step 1
        sai = BWA.Aln(Reference, Fastaq)                'Step 2
        Call BWA.Samse(Reference, sai, Fastaq, SAM)     'Step 3

        Return SAM
    End Function
#End Region

    '''' <summary>
    '''' gapped/ungapped alignment
    '''' </summary>
    '''' <remarks></remarks>
    '''' 
    '<Command("align", info:="Gapped/ungapped alignment")>
    'Public Sub BWAaln(<Parameter("-n", "max #diff (int) or missing prob under 0.02 err rate (float) [0.04]")> Optional n As Double = 0.04,
    '                  <Parameter("-o", "maximum number or fraction of gap opens [1]")> Optional o As Integer = 1,
    '                  <Parameter("-e", "maximum number of gap extensions, -1 for disabling long gaps [-1]")> Optional e As Integer = -1,
    '                  <Parameter("-i", "do not put an indel within INT bp towards the ends [5]")> Optional i As Integer = 5,
    '                  <Parameter("-d", "maximum occurrences for extending a long deletion [10]")> Optional d As Integer = 10,
    '                  <Parameter("-l", "seed length [32]")> Optional l As Integer = 32,
    '                  <Parameter("-k", "maximum differences in the seed [2]")> Optional k As Integer = 2,
    '                  <Parameter("-m", "maximum entries in the queue [2000000]")> Optional m As Integer = 2000000,
    '                  <Parameter("-t", "number of threads [1]")> Optional t As Integer = 1,
    '                  <Parameter("-M", "mismatch penalty [3]")> Optional MismatchPenatly As Integer = 3,
    '                  <Parameter("-O", "gap open penalty [11]")> Optional GOpenPenalty As Integer = 11,
    '                  <Parameter("-E", "gap extension penalty [4]")> Optional GExtensionPenatly As Integer = 4,
    '                  <Parameter("-R", "stop searching when there are >INT equally best hits [30]")> Optional R As Integer = 30,
    '                  <Parameter("-q", "quality threshold for read trimming down to 35bp [0]")> Optional q As Integer = 0,
    '                  <Parameter("-f", "file to write output to instead of stdout")> Optional f As String = "",
    '                  <Parameter("-B", "length of barcode")> Optional BarCodeLength As Integer = 8,
    '                  <Parameter("-L", "log-scaled gap penalty for long deletions")> Optional LongDeletionPenatly As Boolean = False,
    '                  <Parameter("-N", "non-iterative mode: search for all n-difference hits (slooow)")> Optional NonIterative As Boolean = False,
    '                  <Parameter("-I", "the input is in the Illumina 1.3+ FASTQ-like format")> Optional Illumina As Boolean = False,
    '                  <Parameter("-b", "the input read file is in the BAM format")> Optional b As Boolean = False,
    '                  <Parameter("-0", "use single-end reads only (effective with -b)")> Optional b0 As Boolean = False,
    '                  <Parameter("-1", "use the 1st read in a pair (effective with -b)")> Optional b1 As Boolean = False,
    '                  <Parameter("-2", "use the 2nd read in a pair (effective with -b)")> Optional b2 As Boolean = False,
    '                  <Parameter("-Y", "filter Casava-filtered sequences)")> Optional Y As Boolean = False)



    'End Sub

    'bwa samse -f single.sam reference.fa single.sai single.fastq

    ''' <summary>
    ''' Generate alignment (single ended)
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' 
    <ExportAPI("Samse", Info:="[Step 3] Generate alignment (single ended)",
             Usage:="bwa samse -f single.sam reference.fa single.sai single.fastq")>
    Public Function Samse(<Parameter("ref", "(*.fasta) The genome reference fasta file.")> Reference As String,
                          <Parameter("sai", "The *.sai coordination")> SAI As String,
                          <Parameter("reads", "*.fq")> Fastaq As String,
                          <Parameter("sam", "If this parameter is not specific, then the file name of the *.fq reads file will be used as default.")> Optional SAM As String = "") As Integer

        If String.IsNullOrEmpty(SAM) Then
            SAM = FileIO.FileSystem.GetParentPath(Fastaq) & "/" & BaseName(Fastaq) & ".sam"
        End If

        Dim argvs As String = $"samse -f {SAM.CLIPath} { Reference.CLIPath} {SAI.CLIPath} {Fastaq.CLIPath}"
        Dim Invoke As New IORedirectFile(CliResCommon.TryRelease(NameOf(My.Resources.BWA)), argvs)
        Dim i As Integer = Invoke.Run

        Return i
    End Function

    ''' <summary>
    ''' generate alignment (paired ended)
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    ''' 
    <ExportAPI("Sampe", Info:="[Step 3] Generate alignment (paired ended)", Usage:="sampe -f pair-end.sam reference.fa leftRead.sai rightRead.sai leftRead.fastq rightread.fastq")>
    Public Function Sampe(<Parameter("ref", "(*.fasta) The genome reference fasta file.")> Reference As String,
                          <Parameter("left.sai")> LeftSAI As String,
                          <Parameter("right.sai")> RightSAI As String,
                          <Parameter("left.fq")> LeftFQ As String,
                          <Parameter("right.fq")> RightFQ As String,
                          <Parameter("sam", "If this parameter is not specific, then the file name of the *.fasta genome reference fasta sequence file will be used as default.")> Optional SAM As String = "") As Integer

        If String.IsNullOrEmpty(SAM) Then
            SAM = FileIO.FileSystem.GetParentPath(Reference) & "/" & BaseName(Reference) & ".sam"
        End If

        Dim argvs As String = $"sampe -f {SAM.CLIPath} {Reference.CLIPath} {LeftSAI.CLIPath} {RightSAI.CLIPath} {LeftFQ.CLIPath} {RightFQ.CLIPath}"
        Dim Invoke As New Microsoft.VisualBasic.CommandLine.IORedirectFile(CliResCommon.TryRelease(NameOf(My.Resources.BWA)), argvs)
        Dim i As Integer = Invoke.Run

        Return i
    End Function

    ''' <summary>
    ''' BWA-SW for long queries
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Bwasw()
        Throw New NotImplementedException
    End Function

    ''' <summary>
    ''' identify super-maximal exact matches
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Fastmap()
        Throw New NotImplementedException
    End Function

    ''' <summary>
    ''' convert FASTA to PAC format
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Fa2pac()
        Throw New NotImplementedException
    End Function

    ''' <summary>
    ''' generate BWT from PAC
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Pac2bwt()
        Throw New NotImplementedException
    End Function

    ''' <summary>
    ''' alternative algorithm for generating BWT
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Pac2bwtgen()
        Throw New NotImplementedException
    End Function

    ''' <summary>
    ''' update .bwt to the new format
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Bwtupdate()
        Throw New NotImplementedException
    End Function

    ''' <summary>
    ''' generate SA from BWT and Occ
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Bwt2sa()
        Throw New NotImplementedException
    End Function

    ''' <summary>
    ''' convert PAC to color-space PAC
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Pac2cspac()
        Throw New NotImplementedException
    End Function

    ''' <summary>
    ''' standard SW/NW alignment
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Stdsw()
        Throw New NotImplementedException
    End Function

End Module
