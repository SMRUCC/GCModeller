{".readZipStream":{"author":null,"declares":{"name":".readZipStream","parameters":[{"name":"zipfile","text":null},{"name":"entryName","text":"NULL"}],"sourceMap":{"File":"utils.R","Line":"14","Method":{"Method":".readZipStream","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"\r\n\r\nthis function open the given zip archive\r\nfile and then load the first file as data stream\r\nobject if the zip entry name is missing.","details":"","examples":"","keywords":[],"parameters":[{"name":"zipfile","text":"the file path of the target zip file to\r\nread data stream"},{"name":"entryName","text":"the zip entry name."}],"returns":"A data steam object that read from the\r\ngiven zip archive file.","see_also":"","title":"Read zip stream data"},"_unique_idset":{"author":null,"declares":{"name":"_unique_idset","parameters":[{"name":"id","text":null}],"sourceMap":{"File":"utils.R","Line":"35","Method":{"Method":"_unique_idset","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this function andalso will removes the id which is in\r\nempty literal value, example as: empty string, NA string,\r\nNULL string, etc.","examples":"","keywords":[],"parameters":[{"name":"id","text":"a character vector of the object id, duplicated\r\nvalue may contains inside."}],"returns":null,"see_also":"","title":"helper function for makes the given id set unique"},".onLoad":{"author":null,"declares":{"name":".onLoad","parameters":[],"sourceMap":{"File":"zzz.R","Line":"2","Method":{"Method":".onLoad","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".onLoad"},"split_omics_idset":{"author":null,"declares":{"name":"split_omics_idset","parameters":[{"name":"IDs","text":null}],"sourceMap":{"File":"idset.R","Line":"9","Method":{"Method":"split_omics_idset","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"IDs","text":"the column of IDs in enrichment result table"}],"returns":"a tuple list that contains idset for each term result:\r\nlist(metabolite = ..., genes = ...)","see_also":"","title":"split the id set in enrichment result into metabolite and genes id"},"metpa_enrich":{"author":null,"declares":{"name":"metpa_enrich","parameters":[{"name":"data","text":null},{"name":"metpa","text":null},{"name":"log2FC","text":"'log2(FC)'"},{"name":"id","text":"'kegg'"}],"sourceMap":{"File":"metpa_enrich.R","Line":"23","Method":{"Method":"metpa_enrich","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"Do enrichment based on metpa background model","details":"","examples":"","keywords":[],"parameters":[{"name":"data","text":"a given set of the target for do enrichment analysis,\r\nthis parameter value could be a character vector which is stands\r\nfor the kegg id character vector or a dataframe object that\r\ncontains the data annotation fields and the log2fc value."},{"name":"metpa","text":"the metabolic network pathway model for used as the\r\nenrichment background data to run enrichment analysis. this\r\nparameter value should be a CLR object that read from file."},{"name":"log2FC","text":"the field name for get the log2FC value, the log2FC\r\nvalue will be used for do colorful url encoded. And this parameter\r\noption only works when the input data is a dataframe object."},{"name":"id","text":"the field name for get the target idset data for run the\r\nenrichment analysis. And this parameter option only works when\r\nthe input data is a dataframe object."}],"returns":"A dataframe object that contains the enrichment analysis result,\r\nvalue nothing will be return if the given kegg idset is empty.","see_also":"","title":"The GCModeller GSEA toolkit"},"metpa_enrich_ids":{"author":null,"declares":{"name":"metpa_enrich_ids","parameters":[{"name":"data","text":null},{"name":"metpa","text":null}],"sourceMap":{"File":"metpa_enrich.R","Line":"33","Method":{"Method":"metpa_enrich_ids","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"metpa_enrich_ids"},"metpa_enrich_dataframe":{"author":null,"declares":{"name":"metpa_enrich_dataframe","parameters":[{"name":"data","text":null},{"name":"metpa","text":null},{"name":"log2FC","text":"'log2(FC)'"},{"name":"id","text":"'kegg'"}],"sourceMap":{"File":"metpa_enrich.R","Line":"56","Method":{"Method":"metpa_enrich_dataframe","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"data","text":"the kegg idset data, should be a dataframe object."},{"name":"id","text":"a character vector of the dataframe field name, for\r\nindicates that which column value should be used as the kegg\r\nidset for run the enrichment analysis."},{"name":"log2FC","text":"a character vector of the dataframe field name,\r\nfor get the log2 fold change value for rendering the colors\r\nof the elements on the pathway map."}],"returns":null,"see_also":"","title":"do enrichment based on the metpa background model"},"KEGG_MapRender":{"author":null,"declares":{"name":"KEGG_MapRender","parameters":[{"name":"enrich","text":null},{"name":"map.id","text":"'KEGG'"},{"name":"pathway.links","text":"'pathway_links'"},{"name":"outputdir","text":"'.\/'"},{"name":"min.objects","text":"0"},{"name":"kegg.maps","text":"NULL"}],"sourceMap":{"File":"KEGG_MapRender.R","Line":"10","Method":{"Method":"KEGG_MapRender","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"enrich","text":"the csv file path of the kegg pathway map enrichment\r\nresult or the dataframe value it self"},{"name":"kegg_maps","text":"the external kegg maps repository, could be a\r\nlocal directory path which contains a set of the kegg map xml\r\nfile; or a file to the bundle pack of the kegg map xml files."}],"returns":null,"see_also":"","title":"Do rendering of the kegg pathway maps"},"localRenderMap":{"author":null,"declares":{"name":"localRenderMap","parameters":[{"name":"KEGG.maps","text":null},{"name":"pathwayList","text":null},{"name":"compoundcolors","text":"'red'"},{"name":"gene.highights","text":"'blue'"},{"name":"outputdir","text":"'.\/'"},{"name":"min.objects","text":"0"}],"sourceMap":{"File":"localRenderMap.R","Line":"10","Method":{"Method":"localRenderMap","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"KEGG_maps","text":"the kegg maps repository data object"},{"name":"pathwayList","text":"the list data of the kegg url for do rendering, this\r\nparameter value should be a list of the key-value paire to the url\r\nstring data."}],"returns":null,"see_also":"","title":"Do rendering of the kegg pathway map"},"unify_mapid":{"author":null,"declares":{"name":"unify_mapid","parameters":[{"name":"x","text":null}],"sourceMap":{"File":"localRenderMap.R","Line":"78","Method":{"Method":"unify_mapid","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"x","text":"the kegg map id, maybe in organism species related pathway map id, example as ``hsaxxxxxx``."}],"returns":null,"see_also":"","title":"unify the kegg map id as reference map id"},"union_render":{"author":null,"declares":{"name":"union_render","parameters":[{"name":"union.data","text":null},{"name":"outputdir","text":"'.\/'"},{"name":"id","text":"'KEGG'"},{"name":"compound","text":"'compound'"},{"name":"gene","text":"'gene'"},{"name":"protein","text":"'protein'"},{"name":"text.color","text":"'white'"},{"name":"kegg.maps","text":"NULL"}],"sourceMap":{"File":"union_render.R","Line":"73","Method":{"Method":"union_render","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"Generates interactive HTML and static PNG visualizations of KEGG pathway maps\r\nwith customizable highlighting for compounds, genes, and proteins. Output files\r\nare saved to the specified directory.","details":"**Highlight Data Format**:\r\nThe `compound`, `gene`, and `protein` columns should contain strings in one of two formats:\r\n1. Semicolon-separated key-value pairs: `\"K00001:blue;K00002:red;C00001:green\"`\r\n2. Semicolon-separated IDs (default color: red): `\"K00001;K00002;C00001\"`\r\nThese are parsed by [`parse.highlight_tuples()`](https:\/\/gcmodeller.org\/vignettes\/kegg_kit\/report.utils\/parse.highlight_tuples.html)\r\ninto named lists (e.g., `list(K00001 = \"blue\", K00002 = \"red\")`).\r\n**Output Files**:\r\nFor each KEGG ID, two files are generated:\r\n- `[KEGG_ID].html`: Interactive pathway visualization\r\n- `[KEGG_ID].png`: Static PNG image\r\n**Error Handling**:\r\nErrors during rendering are caught and printed to the console without stopping execution.","examples":"#\\dontrun{\r\n\r\n# Minimal example with default column names\r\ndata <- data.frame(\r\nKEGG = \"map00010\",\r\ncompound = \"C00031:green;C00022:blue\",\r\ngene = \"hsa:1234;hsa:5678:yellow\",\r\nprotein = \"P12345\"\r\n)\r\nunion_render(data, outputdir = \"~\/kegg_output\")\r\n# Custom column names and text color\r\ndata <- data.frame(\r\nPathwayID = \"map00020\",\r\nMetabolites = \"C00024; C00036:orange\",\r\nGenes = \"hsa:9012:purple\",\r\nProteins = \"P67890:red\"\r\n)\r\nunion_render(data,\r\nid = \"PathwayID\",\r\ncompound = \"Metabolites\",\r\ngene = \"Genes\",\r\nprotein = \"Proteins\",\r\ntext.color = \"black\"\r\n)\r\n#}","keywords":[],"parameters":[{"name":"union_data","text":"A data frame or file path (CSV) containing KEGG pathway IDs\r\nand highlight information. Must include columns specified in `id`, `compound`,\r\n`gene`, and `protein` parameters. If a character string is provided,\r\nit is interpreted as a file path to a CSV file."},{"name":"outputdir","text":"Output directory path for rendered files (default: \".\/\")."},{"name":"id","text":"Column name in `union_data` containing KEGG pathway IDs (default: \"KEGG\")."},{"name":"compound","text":"Column name in `union_data` containing compound highlight data\r\n(default: \"compound\"). See Details for formatting."},{"name":"gene","text":"Column name in `union_data` containing gene highlight data\r\n(default: \"gene\")."},{"name":"protein","text":"Column name in `union_data` containing protein highlight data\r\n(default: \"protein\")."},{"name":"text.color","text":"Color for node labels on pathway maps (default: \"white\")."},{"name":"kegg_maps","text":"Directory path containing KEGG map XML files. If `NULL` (default),\r\nuses the package's internal XML resources."}],"returns":"Invisibly returns `NULL`. Primary output is generated as files in `outputdir`.","see_also":"","title":"Render KEGG Pathway Maps with Multi-Omics Highlighting"},".safe_kegg_url_parser":{"author":null,"declares":{"name":".safe_kegg_url_parser","parameters":[{"name":"url","text":null},{"name":"compoundcolors","text":null},{"name":"gene.highights","text":null}],"sourceMap":{"File":"url_decode.R","Line":"9","Method":{"Method":".safe_kegg_url_parser","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"compoundcolors","text":"color value for kegg compound"},{"name":"gene_highights","text":"color value for highlights genes\/proteins"}],"returns":"this function will ensure that returns a tuple list that contains\r\nthe slot value ``objects`` always.","see_also":"","title":"Parse the kegg object set that encoded inside the kegg url string"},".url_encode":{"author":null,"declares":{"name":".url_encode","parameters":[{"name":"enrich","text":null},{"name":"data","text":"NULL"},{"name":"log2FC","text":"'log2(FC)'"},{"name":"id","text":"'kegg'"}],"sourceMap":{"File":"url_encode.R","Line":"2","Method":{"Method":".url_encode","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".url_encode"},".url_encode_internal":{"author":null,"declares":{"name":".url_encode_internal","parameters":[{"name":"enrich","text":null},{"name":"data","text":"NULL"},{"name":"log2FC","text":"'log2(FC)'"},{"name":"id","text":"'kegg'"}],"sourceMap":{"File":"url_encode.R","Line":"10","Method":{"Method":".url_encode_internal","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".url_encode_internal"},"__parseIdvector":{"author":null,"declares":{"name":"__parseIdvector","parameters":[{"name":"set","text":null}],"sourceMap":{"File":"url_encode.R","Line":"36","Method":{"Method":"__parseIdvector","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"__parseIdvector"},"kegg_colors":{"author":null,"declares":{"name":"kegg_colors","parameters":[{"name":"id","text":null},{"name":"log2FC","text":null},{"name":"up","text":"'red'"},{"name":"down","text":"'blue'"}],"sourceMap":{"File":"url_encode.R","Line":"50","Method":{"Method":"kegg_colors","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"id","text":"a character vector of a collection of the kegg id"},{"name":"log2FC","text":"a numeric vector of the log2 Foldchange value of the corresponding kegg id"}],"returns":"a lambda function that accept two parameters for generates the kegg pathway map url:\r\n1. map_id: the kegg pathway map id\r\n2. idset: a character vector of the kegg id for make url","see_also":"","title":"generate color map for do colorful encode of the kegg map url"},"ecnumber_to_ko":{"author":null,"declares":{"name":"ecnumber_to_ko","parameters":[{"name":"ec.number","text":"'*'"}],"sourceMap":{"File":"ecnumber_to_ko.R","Line":"12","Method":{"Method":"ecnumber_to_ko","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"ec_number","text":"a character vector of the ec number."}],"returns":"a dataframe object that mapping the ec number to the corresponding ko id, this dataframe object contains two data fields:\r\n1. ec_number: the enzyme number from the parameter input\r\n2. ko: the kegg ko id that the enzyme mapping to\r\n3. symbol: the gene name of the enzyme\r\n4. name: the gene function, or the full name","see_also":"","title":"A helper function for make conversion from the ec number list to ko id"},"CompoundNetwork":{"author":null,"declares":{"name":"CompoundNetwork","parameters":[{"name":"compoundsId","text":null},{"name":"make.pathway.cluster","text":"TRUE"}],"sourceMap":{"File":"kegg_graph.R","Line":"20","Method":{"Method":"CompoundNetwork","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"compoundsId","text":"a ``dataframe`` object that contains the kegg compound\r\ncid as the node item in the network graph data. there are fields in this\r\ndataframe that must be included:\r\n1. kegg_id: is the kegg compound cid\r\n2. weight: apply for measure the node size"},{"name":"make.pathway_cluster","text":"make node cluster info via pathway maps\r\ninformation?"}],"returns":"a network graph object model, which can be export as table file or\r\nrun network visualization rendering in the downstream data analysis.","see_also":"","title":"Create kegg compound network"},"hsa_pathways":{"author":null,"declares":{"name":"hsa_pathways","parameters":[],"sourceMap":{"File":"pathways.R","Line":"11","Method":{"Method":"hsa_pathways","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"read from the internal resource data files","examples":"","keywords":[],"parameters":[],"returns":"a dataframe object that contains the human pathway list,\r\nthe data fields was includes this dataframe object:\r\n+ ID: the pathway id\r\n+ Definition: the pathway name","see_also":"","title":"read human kegg pathway list data"},"metpa_background":{"author":null,"declares":{"name":"metpa_background","parameters":[{"name":"pathways","text":null},{"name":"taxonomy.name","text":"NULL"},{"name":"raw","text":"TRUE"},{"name":"multiple.omics","text":"FALSE"}],"sourceMap":{"File":"metpa.R","Line":"20","Method":{"Method":"metpa_background","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the reaction data is loaded from the package internal resource file","examples":"","keywords":[],"parameters":[{"name":"","text":"pathways"},{"name":"raw","text":"if this parameter value is set to TRUE, then a raw CLR object\r\nwill be returns, otherwise a converted list object will be generated\r\nfrom the raw CLR object."},{"name":"multiple_omics","text":"set the parameter value to TRUE for create background\r\nmodel for multiple omics data analysis. then this parameter option will\r\nenable the gene and compound existsed inside the model."}],"returns":"a gcmodeller background model if raw is true, and a R# object list will\r\nbe converts from the clr background model otherwise the raw is not.","see_also":"","title":"Create metpa background model for LCMS analysis"},".cast_CLR_metpa":{"author":null,"declares":{"name":".cast_CLR_metpa","parameters":[{"name":"metpa","text":null}],"sourceMap":{"File":"read_clr.R","Line":"7","Method":{"Method":".cast_CLR_metpa","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"metpa","text":"A GCModeller metpa clr object which is generated\r\nfrom the ``background::metpa`` function."}],"returns":null,"see_also":"","title":"Create metpa background model from the .NET clr object"},".write_dgr":{"author":null,"declares":{"name":".write_dgr","parameters":[{"name":"dgr","text":null}],"sourceMap":{"File":"read_clr.R","Line":"24","Method":{"Method":".write_dgr","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_dgr"},".write_graph":{"author":null,"declares":{"name":".write_graph","parameters":[{"name":"graph","text":null}],"sourceMap":{"File":"read_clr.R","Line":"34","Method":{"Method":".write_graph","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_graph"},".write_graphList":{"author":null,"declares":{"name":".write_graphList","parameters":[{"name":"graphList","text":null}],"sourceMap":{"File":"read_clr.R","Line":"38","Method":{"Method":".write_graphList","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_graphList"},".write_dgrlist":{"author":null,"declares":{"name":".write_dgrlist","parameters":[{"name":"dgrList","text":null}],"sourceMap":{"File":"read_clr.R","Line":"42","Method":{"Method":".write_dgrlist","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_dgrlist"},".write_mset":{"author":null,"declares":{"name":".write_mset","parameters":[{"name":"mset","text":null}],"sourceMap":{"File":"read_clr.R","Line":"51","Method":{"Method":".write_mset","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_mset"},".write_msetList":{"author":null,"declares":{"name":".write_msetList","parameters":[{"name":"msetList","text":null}],"sourceMap":{"File":"read_clr.R","Line":"61","Method":{"Method":".write_msetList","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_msetList"},".write_pathIds":{"author":null,"declares":{"name":".write_pathIds","parameters":[{"name":"pathIds","text":null}],"sourceMap":{"File":"read_clr.R","Line":"70","Method":{"Method":".write_pathIds","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_pathIds"},".write_rbc":{"author":null,"declares":{"name":".write_rbc","parameters":[{"name":"rbc","text":null}],"sourceMap":{"File":"read_clr.R","Line":"83","Method":{"Method":".write_rbc","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_rbc"},".write_rbcList":{"author":null,"declares":{"name":".write_rbcList","parameters":[{"name":"rbcList","text":null}],"sourceMap":{"File":"read_clr.R","Line":"93","Method":{"Method":".write_rbcList","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_rbcList"},".write_pathSmps":{"author":null,"declares":{"name":".write_pathSmps","parameters":[{"name":"pathSmps","text":null}],"sourceMap":{"File":"read_clr.R","Line":"104","Method":{"Method":".write_pathSmps","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".write_pathSmps"},"kegg_compounds":{"author":null,"declares":{"name":"kegg_compounds","parameters":[{"name":"rawList","text":"FALSE"},{"name":"reference.set","text":"TRUE"}],"sourceMap":{"File":"kegg_compounds.R","Line":"9","Method":{"Method":"kegg_compounds","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"reference_set","text":"load the compound list which is the kegg pathway\r\nmap associated. set this parameter value to FALSE for load full list\r\nof the kegg compounds."}],"returns":null,"see_also":"","title":"Load internal kegg compound repository"},"__hds_compound_files":{"author":null,"declares":{"name":"__hds_compound_files","parameters":[{"name":"kegg.db","text":null},{"name":"flag","text":"'compounds'"},{"name":"what","text":"'kegg_compound'"}],"sourceMap":{"File":"kegg_compounds.R","Line":"39","Method":{"Method":"__hds_compound_files","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"kegg_db","text":"the HDS package of the kegg reference database"}],"returns":"a set of the kegg compound clr object models","see_also":"","title":"get all kegg compound files inside a HDS stream"},"__hds_compound_dir":{"author":null,"declares":{"name":"__hds_compound_dir","parameters":[{"name":"kegg.db","text":null},{"name":"dir","text":null},{"name":"flag","text":"'compounds'"},{"name":"what","text":"'kegg_compound'"}],"sourceMap":{"File":"kegg_compounds.R","Line":"51","Method":{"Method":"__hds_compound_dir","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"__hds_compound_dir"},"kegg_maps":{"author":null,"declares":{"name":"kegg_maps","parameters":[{"name":"rawMaps","text":"TRUE"},{"name":"repo","text":"'system.file'('data\/kegg\/KEGG_maps.zip', 'package' = 'GCModeller')"}],"sourceMap":{"File":"kegg_maps.R","Line":"14","Method":{"Method":"kegg_maps","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"rawMaps","text":"this parameter value determine the data type of\r\nthe return value from this function. ``TRUE`` value\r\nof this parameter will returns a vector of map data object\r\nor a indexed map repository object if set the parameter value\r\nto value ``FALSE``."},{"name":"repo","text":"the kegg map repository location, default internal\r\nrepository will be used if this parameter value is leaves\r\ndefault."}],"returns":null,"see_also":"","title":"Load internal kegg map repository"},"kegg_reactions":{"author":null,"declares":{"name":"kegg_reactions","parameters":[{"name":"raw","text":"TRUE"}],"sourceMap":{"File":"kegg_reactions.R","Line":"7","Method":{"Method":"kegg_reactions","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this function extract the reaction data both of associated\r\nwith the kegg pathway map or the reactions has no associations.","examples":"","keywords":[],"parameters":[],"returns":null,"see_also":"","title":"Load internal kegg reaction repository"},"extract_reactions":{"author":null,"declares":{"name":"extract_reactions","parameters":[],"sourceMap":{"File":"kegg_reactions.R","Line":"22","Method":{"Method":"extract_reactions","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this function extract the reaction data which\r\nhas the pathway map association.","examples":"","keywords":[],"parameters":[],"returns":null,"see_also":"","title":"extract reaction data from the reference database"},"__load_kegg_map":{"author":null,"declares":{"name":"__load_kegg_map","parameters":[{"name":"kegg.maps","text":"NULL"},{"name":"raw.maps","text":"FALSE"}],"sourceMap":{"File":"map_loader.R","Line":"9","Method":{"Method":"__load_kegg_map","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"kegg_maps","text":"the kegg map data source, could be a zip archive file that\r\ncontains the kegg maps data message, a directory path that contains the\r\nkegg maps xml files. default parameter value is null, means use the internal\r\nresource data for run the downstream analysis."}],"returns":null,"see_also":"","title":"this function try to unify the kegg map load method"},"load_kegg_maps":{"author":null,"declares":{"name":"load_kegg_maps","parameters":[{"name":"raw.maps","text":"TRUE"}],"sourceMap":{"File":"map_loader.R","Line":"29","Method":{"Method":"load_kegg_maps","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"load_kegg_maps"},"url.search_taxonomy":{"author":null,"declares":{"name":"url.search_taxonomy","parameters":[{"name":"name","text":null}],"sourceMap":{"File":"eutils.R","Line":"19","Method":{"Method":"url.search_taxonomy","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"helper function for create the url for run taxonomy data query","details":"","examples":"","keywords":[],"parameters":[],"returns":null,"see_also":"","title":"eutils web api"},"taxonomy_search":{"author":null,"declares":{"name":"taxonomy_search","parameters":[{"name":"name","text":null}],"sourceMap":{"File":"eutils.R","Line":"28","Method":{"Method":"taxonomy_search","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"name","text":"a character vector of the scientific name for\r\nrun taxonomy query."}],"returns":null,"see_also":"","title":"get ncbi taxonomy id based on a given scientific name"},"ncbi_assembly_ftp":{"author":null,"declares":{"name":"ncbi_assembly_ftp","parameters":[{"name":"ref","text":null},{"name":"download.dir","text":"'.\/'"},{"name":"overrides","text":"TRUE"}],"sourceMap":{"File":"ftp.R","Line":"5","Method":{"Method":"ncbi_assembly_ftp","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"overrides","text":"overrides the local existed file."}],"returns":null,"see_also":"","title":"Do ftp download of the ncbi genbank assembly file."},"fetch_genbank":{"author":null,"declares":{"name":"fetch_genbank","parameters":[{"name":"accession.id","text":null},{"name":"annotations","text":"['GENOME_GBFF', 'GENOME_FASTA', 'GENOME_GFF', 'RNA_FASTA', 'CDS_FASTA', 'PROT_FASTA', 'SEQUENCE_REPORT']"}],"sourceMap":{"File":"get_genbank.R","Line":"8","Method":{"Method":"fetch_genbank","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"fetch_genbank"},"reference_genome":{"author":null,"declares":{"name":"reference_genome","parameters":[{"name":"ncbi.taxid","text":null}],"sourceMap":{"File":"get_genbank.R","Line":"55","Method":{"Method":"reference_genome","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"ncbi_taxid","text":"mapping the genbank accession id from this given ncbi\r\ntaxonomy id"}],"returns":"a list of the reference assembly data list","see_also":"","title":"get genbank reference genome accession id"}}