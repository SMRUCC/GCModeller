<?xml version="1.0"?>
<doc>
<assembly>
<name>
SMRUCC.genomics.Data.Xfam.Pfam
</name>
</assembly>
<members>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.My.Resources.Resources.userman">
<summary>
  Looks up a localized string similar to 
           _/_/_/_/      _/_/_/_/_/     _/_/_/       _/      _/
          _/      _/    _/           _/      _/     _/_/  _/_/ 
         _/      _/    _/           _/      _/     _/  _/  _/  
        _/_/_/_/      _/_/_/_/     _/_/_/_/_/     _/      _/   
       _/            _/           _/      _/     _/      _/    
      _/            _/           _/      _/     _/      _/     
     _/            _/           _/      _/     _/      _/      





  This document currently includes a more det [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainParser.Parser(SMRUCC.genomics.Interops.NCBI.Extensions.LocalBLAST.BLASTOutput.BlastPlus.Query,System.Double,System.Double,System.Double,System.Double)">
 <summary>

 </summary>
 <param name="queryIteration"></param>
 <param name="evalue"></param>
 <param name="coverage"></param>
 <param name="identities">暂时无用</param>
 <param name="offset"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainParser.__trimOverlaps(SMRUCC.genomics.ProteinModel.DomainModel[],System.Int32)">
 <summary>
 按照长度值将重叠的结构域清除掉，只留下大的结构域，因为在这之前都是经过阈值筛选了的，所以都是满足条件了的，
 这里只选择比较大的结构域，但是这样子会有什么问题么？有重叠的时候在KEGG上面是首先显示出比较大的结构域的
 </summary>
 <param name="domains"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainParser.__domainFilter(SMRUCC.genomics.Interops.NCBI.Extensions.LocalBLAST.BLASTOutput.BlastPlus.SubjectHit,System.Double,System.Double,System.Double)">
 <summary>
 Domain只是比对上query序列的一部分，所以不应该要求要覆盖全长，而是能够将hit本身给覆盖住就可以了
 由于只是比对上一部分，所以identities不可能会很高，一般是在20%到60%之间，
 也就是说identities可能在这里并不能作为一个判断的标准了，因为query序列越长，则identities则可能越低，但是那个domain还是可能能够真实存在的

 一般而言，gaps和evalue是成正比的，gaps值越大，则evalue越大，所以这里使用evalue就可以筛掉了
 </summary>
 <param name="hit"></param>
 <param name="evalue"></param>
 <param name="coverage"></param>
 <param name="identities">暂时无用</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainParser.__groupAndTrimOverlap(System.Collections.Generic.IEnumerable{SMRUCC.genomics.ProteinModel.DomainModel},System.Int32)">
 <summary>
 分组并去掉重叠的数据，这个主要是针对Pfam-A的比对数据，对于CDD数据库可能没有什么用途
 </summary>
 <param name="source"></param>
 <param name="lenOffset"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.DomainEquals.#ctor(System.Double,System.Boolean)">
 <summary>
 
 </summary>
 <param name="high_Scoring_thresholds"></param>
 <param name="partEquals">位置得分是否满足一部分是高分的就行了？</param>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.LevAlign">
 <summary>
 这个比对是做结构域对其的
 </summary>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.LevAlign.StructMatched">
 <summary>
 结构域是否是完全匹配上的
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.LevAlign.#ctor(SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString,SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString,SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.DomainEquals)">
 <summary>
 由于是需要对需要注释的基因组里面的未知功能的蛋白质的生物学功能进行推测，所以这里的Reference是数据库之中的蛋白质
 </summary>
 <param name="prot_a"></param>
 <param name="prot_b"></param>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.DomainDistribution">
 <summary>
 Domain position specifc distributions
 </summary>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.DomainDistribution.Distribution">
 <summary>
 Position collection for this <see cref="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.DomainDistribution.DomainId">domain object item</see>
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive">
 <summary>
 CSV格式的MPAlignment结果数据记录
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive.QueryLength">
 <summary>
 Protein sequence length.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive.Description">
 <summary>
 Description for the <see cref="P:SMRUCC.genomics.Interops.NCBI.Extensions.LocalBLAST.Application.BBH.I_BlastQueryHit.QueryName"></see> protein.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive.Score">
 <summary>
 MPScore
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive.Similarity">
 <summary>
 <see cref="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive.Score"></see>/<see cref="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive.FullScore"></see>
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive.StructMatched">
 <summary>
 结构域是否是完全匹配上的
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput">
 <summary>
 Protein Domain Alignment result.(蛋白质结构域的比对结果输出，从<see cref="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput.ToString"/>函数生成文本文件格式的比对报告)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput.Score">
 <summary>
 MPScore
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput.FullScore">
 <summary>
 <see cref="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput.Score">MPScore</see> without any penalty
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput.Similarity">
 <summary>
 <see cref="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput.Score"></see>/<see cref="P:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput.FullScore"></see>
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput.ToString">
 <summary>
 从这里生成文本文件格式的比对报告
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.Algorithm">
 <summary>
 Tools for comparing the protein domain structure similarity.
 </summary>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.Algorithm.PfamStringEquals(SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString,SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString,System.Double,System.Boolean)">
 <summary>
 初略的判断蛋白质的结构上面的等价性，等价性越高，则返回的数值越接近于1，反之不相等则返回0甚至小于零 {得分， 相似性}
 </summary>
 <param name="Protein_1"></param>
 <param name="Protein_2"></param>
 <returns></returns>
 <remarks>对于两个Domain之间的序列，其格式为[ABCT](start|ends)</remarks>

</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.Algorithm.AltEquals(SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString,SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString,System.Double)">
 <summary>
 初略的判断蛋白质的结构上面的等价性，等价性越高，则返回的数值越接近于1，反之不相等则返回0甚至小于零 {得分， 相似性}
 </summary>
 <param name="Protein_1"></param>
 <param name="Protein_2"></param>
 <returns></returns>
 <remarks>对于两个Domain之间的序列，其格式为[ABCT](start|ends)</remarks>
 

</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.Algorithm.__alignDomain(SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.DomainDistribution[]@,SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.DomainDistribution[]@)">
 <summary>
 <paramref name="a"></paramref>和<paramref name="b"></paramref>都是已经经过排序的数据
 </summary>
 <param name="a"></param>
 <param name="b"></param>
 <remarks>这个比对不是实际的物理位置构成的比较</remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.Algorithm.PositionEquals(SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.DomainDistribution,SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.DomainDistribution,System.Double@,System.Double)">
 <summary>
 Domain position specific alignment
 </summary>
 <param name="ds1"></param>
 <param name="ds2"></param>
 <returns></returns>
 <param name="high_Scoring_thresholds">高分比对的计算阈值</param>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.Algorithm.__createDS(SMRUCC.genomics.ProteinModel.DomainObject[],System.Int32)">
 <summary>
 这个函数会进行归一化处理
 </summary>
 <param name="domains"></param>
 <param name="protLen"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MotifParallelAlignment">
 <summary>
 从双向比对结果之中根据PfamString结果来取等价的蛋白质
 </summary>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MotifParallelAlignment.AlignProteins(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.BiDirectionalBesthit},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString},System.Double)">
 <summary>
 使用这个函数进行比对操作
 </summary>
 <param name="besthit"></param>
 <param name="query"></param>
 <param name="subject"></param>
 <param name="highlyScoringThreshold"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MotifParallelAlignment.Convert(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Interops.NCBI.Extensions.LocalBLAST.Application.BBH.BiDirectionalBesthit},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput})">
 <summary>
 将比对结果转换为Csv文件，之后可以在Excel之中按照自己的需求进行数据筛选
 </summary>
 <param name="Besthits"></param>
 <param name="DomainAlign"></param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MotifParallelAlignment.Convert``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput},System.Func{SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.AlignmentOutput,``0,``1})">
 <summary>
 将比对结果转换为Csv文件，之后可以在Excel之中按照自己的需求进行数据筛选
 </summary>
 <param name="Besthits"></param>
 <param name="DomainAlign"></param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MotifParallelAlignment.SelectSource``1(System.Collections.Generic.IEnumerable{``0},SMRUCC.genomics.SequenceModel.FASTA.FastaFile,System.Func{SMRUCC.genomics.Interops.NCBI.Extensions.LocalBLAST.Application.BBH.BiDirectionalBesthit,SMRUCC.genomics.SequenceModel.FASTA.FastaToken,System.Boolean})">
 <summary>
 这个是为了Pfam-A分析而准备的，比对Pfam-A数据库会产生很大的数据，则在比对之前先使用本方法挑选出符合条件的Subject，以减少BLASTP的时间以及日志文件的大小
 </summary>
 <param name="Besthits"></param>
 <param name="SubjectFasta"></param>
 <param name="SelectMethod"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MotifParallelAlignment.SelectSource``1(System.Collections.Generic.IEnumerable{``0},SMRUCC.genomics.SequenceModel.FASTA.FastaFile,System.Func{SMRUCC.genomics.Interops.NCBI.Extensions.LocalBLAST.Application.BBH.BestHit,SMRUCC.genomics.SequenceModel.FASTA.FastaToken,System.Boolean})">
 <summary>
 这个是为了Pfam-A分析而准备的，比对Pfam-A数据库会产生很大的数据，则在比对之前先使用本方法挑选出符合条件的Subject，以减少BLASTP的时间以及日志文件的大小
 </summary>
 <param name="Besthits"></param>
 <param name="SubjectFasta"></param>
 <param name="SelectMethod"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MotifParallelAlignment.SelectUniprot(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Interops.NCBI.Extensions.LocalBLAST.Application.BBH.BestHit},SMRUCC.genomics.SequenceModel.FASTA.FastaFile)">
 <summary>
 根据基因组和Uniprot的双向比对结果，来选择需要进行Pfam-A分析的Uniprot蛋白序列
 </summary>
 <param name="Besthits"></param>
 <param name="subjects"></param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.PfamFastaComponentModels.PfamFasta.ParseEntry(System.String)">
 <summary>
 本方法仅仅解析出Pfam编号以及Pfam结构域的名称
 </summary>
 <param name="strValue"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.PfamFastaComponentModels.Entry">
 <summary>
 Pfam Entry, The format of Pfam entries has become stricter and we now enforce some ordering of the fields.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.PfamFastaComponentModels.Header">
 <summary>
 The header section mainly contains compulsory fields. These include Pfam specific information such as 
 accession numbers and identifiers, as well as a short description of the family. The only 
 non-compulsory field in the header section is the PI field.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.PfamFastaComponentModels.Reference">
 <summary>
 The reference section mainly contains cross-links to other databases, and literature references.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.PfamFastaComponentModels.Comment">
 <summary>
 The comment section contains functional information about the Pfam family.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.PfamFastaComponentModels.Alignment">
 <summary>
 
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.SiteSearch.PfamFamily">
 <summary>
 ftp://ftp.ebi.ac.uk/pub/databases/Pfam/sitesearch/PfamFamily.xml.gz
 </summary>
 
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainAnalysis.EnzymeClassified(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.T_EnzymeClass_BLAST_OUT},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive},SMRUCC.genomics.Assembly.Expasy.Database.NomenclatureDB,System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction})">
 <summary>
 所有经过MPAlignment比对的符合阈值筛选条件的都会被看作为编号
 </summary>
 <param name="data"></param>
 <param name="MPAlignment"></param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainAnalysis.EnzymeClassified(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.T_EnzymeClass_BLAST_OUT},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Data.Xfam.Pfam.ProteinDomainArchitecture.MPAlignment.MPCsvArchive})">
 <summary>
 这个方法只会筛选出可能的最佳的分类注释
 </summary>
 <param name="data"></param>
 <param name="MPAlignment"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainAnalysis.CreatePfamString(SMRUCC.genomics.Interops.NCBI.Extensions.LocalBLAST.BLASTOutput.BlastPlus.v228,SMRUCC.genomics.SequenceModel.FASTA.FastaFile,System.Int32,System.Int32,System.Boolean,System.Double,System.Double,System.Double,System.Double)">
 <summary>

 </summary>
 <param name="blastOutput">不需要进行<see cref="M:Microsoft.VisualBasic.Text.TextGrepScriptEngine.Grep(System.String)">格式化操作</see></param>
 <param name="query">是进过grep操作之后的数据</param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainAnalysis.FillChouFasmanData(SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString,SMRUCC.genomics.SequenceModel.FASTA.FastaToken)">
 <summary>
 假若没有找到相应的fasta序列，则会返回原来的数据
 </summary>
 <param name="pfString"></param>
 <param name="Fasta">经过了Grep操作的fasta序列数据</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainAnalysis.__createStructureRegion(SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString,SMRUCC.genomics.SequenceModel.FASTA.FastaToken)">
 <summary>
 将两个Pfam结构域之间的序列取出来，使用Chou-Fasman计算二级结构
 </summary>
 <param name="describ"></param>
 <param name="sequence"></param>
 <returns>[ABCT](start|ends)</returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.DomainAnalysis.ToPfamString(SMRUCC.genomics.Interops.NCBI.Extensions.LocalBLAST.BLASTOutput.BlastPlus.Query,System.Double,System.Double,System.Double,System.Double)">
 <summary>
 将blastp比对数据转换为Pfam-String数据
 </summary>
 <param name="QueryIteration"></param>
 <param name="offset">0.11</param>
 <param name="identities">暂时无用</param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.DomainObject">
 <summary>
 这个数据结构是对ChouFasman结构而言的
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.DomainObject.Id_Handle">
 <summary>
 在Pfam-String之中的位置，其格式为<see cref="P:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile.Identifier"></see>
 _Handle*<see cref="P:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile.Identifier"></see>_Handle
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.API.__getDomainLDM(System.String,System.Int32)">
 <summary>

 </summary>
 <param name="strValue"></param>
 <param name="normlz">一般是蛋白质的序列长度</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.API.GetDomain(System.String)">
 <summary>
 <see cref="P:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile.Identifier"/>
 </summary>
 <param name="token"></param>
 <returns></returns>

</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.API.CLIParser(System.String)">
 <summary>
 &lt;ID>:&lt;Length>:&lt;pfam-string>
 </summary>
 <param name="view"></param>
 <returns></returns>

</member>
<member name="T:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString">
 <summary>
  This data object specific for a protein function protein domain structure.
 </summary>
 <remarks></remarks>

</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString.Length">
 <summary>
 The protein sequence length
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString.PfamString">
 <summary>
 在Pfam结构域的数据之间可能会有ChouFasman方法所计算出来的二级结构的数据
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString.HasChouFasmanData">
 <summary>
 是否有<see cref="T:SMRUCC.genomics.SequenceModel.Polypeptides.SecondaryStructure.ChouFasman"></see>
 的蛋白质二级结构计算数据
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString.get_ChouFasmanData">
 <summary>
 这个方法仅返回ChouFasman的计算结果，每一个计算结果都会被当作为一个独立的蛋白质对象进行MP的计算
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString.GetDomainData(System.Boolean)">
 <summary>
 从<see cref="P:SMRUCC.genomics.Data.Xfam.Pfam.PfamString.PfamString.PfamString"/>属性之中返回Pfam的比对数据，请注意，这个函数不会返回ChouFasman的计算数据；
 返回的数据可能是经过排序操作的
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
</members>
</doc>
