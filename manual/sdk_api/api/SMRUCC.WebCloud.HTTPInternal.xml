<?xml version="1.0"?>
<doc>
<assembly>
<name>
SMRUCC.WebCloud.HTTPInternal
</name>
</assembly>
<members>
<member name="T:SMRUCC.WebCloud.HTTPInternal.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.APIMethod">
 <summary>
 In plain English, that means that GET is used for viewing something, without changing it, 
 while POST is used for changing something. 
 For example, a search page should use GET, while a form that changes your password should use POST.
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.APIMethod.__description(System.Type,System.String)">
 <summary>
 递归的直到找到最简单的数据类型
 </summary>
 <param name="typeDef"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest">
 <summary>
 Data of the http request
 </summary>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest.HTTPMethod">
 <summary>
 GET/POST/PUT/DELETE....
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest.version">
 <summary>
 <see cref="P:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor.http_protocol_versionstring"/>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest.Remote">
 <summary>
 Remote client ip address
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest.IsWWWRoot">
 <summary>
 If current request url is indicates the HTTP root:  index.html
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.WriteHTML(System.Xml.Linq.XElement,System.Object[])">
 <summary>
 %s %d, etc
 </summary>
 <param name="html">C language like printf function format usage.</param>
 <param name="args"></param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.Close">
 <summary>
 Closes the current StreamWriter object and the underlying stream.
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.Flush">
 <summary>
 Clears all buffers for the current writer and causes any buffered data to be
 written to the underlying stream.
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.Write(System.Char)">
 <summary>
 Writes a character to the stream.
 </summary>
 <param name="value">The character to write to the stream.</param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.Write(System.String)">
 <summary>
 Writes a string to the stream.
 </summary>
 <param name="value">The string to write to the stream. If value is null, nothing is written.</param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.Write(System.Char[])">
 <summary>
 Writes a character array to the stream.
 </summary>
 <param name="buffer">A character array containing the data to write. If buffer is null, nothing is
 written.</param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
 <summary>
 Writes a subarray of characters to the stream.
 </summary>
 <param name="buffer">A character array that contains the data to write.</param>
 <param name="index">The character position in the buffer at which to start reading data.</param>
 <param name="count">The maximum number of characters to write.</param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.FlushAsync">
 <summary>
 Clears all buffers for this stream asynchronously and causes any buffered data
 to be written to the underlying device.
 </summary>
 <returns>A task that represents the asynchronous flush operation.</returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.WriteAsync(System.Char)">
 <summary>
 Writes a character to the stream asynchronously.
 </summary>
 <param name="value">The character to write to the stream.</param>
 <returns>A task that represents the asynchronous write operation.</returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.WriteAsync(System.String)">
 <summary>
 Writes a string to the stream asynchronously.
 </summary>
 <param name="value">The string to write to the stream. If value is null, nothing is written.</param>
 <returns>A task that represents the asynchronous write operation.</returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.WriteAsync(System.Char[],System.Int32,System.Int32)">
 <summary>
 Writes a subarray of characters to the stream asynchronously.
 </summary>
 <param name="buffer">A character array that contains the data to write.</param>
 <param name="index">The character position in the buffer at which to begin reading data.</param>
 <param name="count">The maximum number of characters to write.</param>
 <returns>A task that represents the asynchronous write operation.</returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.WriteLineAsync">
 <summary>
 Writes a line terminator asynchronously to the stream.
 </summary>
 <returns>A task that represents the asynchronous write operation.</returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.WriteLineAsync(System.Char)">
 <summary>
 Writes a character followed by a line terminator asynchronously to the stream.
 </summary>
 <param name="value">The character to write to the stream.</param>
 <returns>A task that represents the asynchronous write operation.</returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.WriteLineAsync(System.String)">
 <summary>
 Writes a string followed by a line terminator asynchronously to the stream.
 </summary>
 <param name="value">The string to write. If the value is null, only a line terminator is written.</param>
 <returns>A task that represents the asynchronous write operation.</returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
 <summary>
 Writes a subarray of characters followed by a line terminator asynchronously
 to the stream.
 </summary>
 <param name="buffer">The character array to write data from.</param>
 <param name="index">The character position in the buffer at which to start reading data.</param>
 <param name="count">The maximum number of characters to write.</param>
 <returns>A task that represents the asynchronous write operation.</returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.GET">
 <summary>
 GET when you want to retrieve data (GET DATA).
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.GET.#ctor(System.Type)">
 <summary>
 type argument using for Build example json
 </summary>
 <param name="responseExample"></param>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.POST">
 <summary>
 POST when you want to send data (POST DATA). The POST method requests that the server accept the entity 
 enclosed In the request As a New subordinate Of the web resource identified by the URI. 
 The data POSTed might be, For example, an annotation For existing resources; a message For a bulletin board, 
 newsgroup, mailing list, Or comment thread; a block Of data that Is the result Of submitting a web form 
 To a data-handling process; Or an item To add To a database.[14]
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.HEAD">
 <summary>
 The HEAD method asks For a response identical To that Of a Get request, but without the response body. 
 This Is useful For retrieving meta-information written In response headers, without having To transport the entire content.
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.PUT">
 <summary>
 The PUT method requests that the enclosed entity be stored under the supplied URI. If the URI refers 
 To an already existing resource, it Is modified; If the URI does Not point To an existing resource, 
 Then the server can create the resource With that URI.[15]
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.DELETE">
 <summary>
 The DELETE method deletes the specified resource.
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.TRACE">
 <summary>
 The TRACE method echoes the received request so that a client can see what (If any) changes Or additions have been made by intermediate servers.
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.OPTIONS">
 <summary>
 The OPTIONS method returns the HTTP methods that the server supports For the specified URL. 
 This can be used To check the functionality Of a web server by requesting '*' instead of a specific resource.
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.CONNECT">
 <summary>
 The CONNECT method converts the request connection to a transparent TCP/IP tunnel, usually to facilitate 
 SSL-encrypted communication (HTTPS) through an unencrypted HTTP proxy.[17][18] See HTTP CONNECT tunneling.
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.PATCH">
 <summary>
 The PATCH method applies Partial modifications To a resource.[19]
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.APIAbstract">
 <summary>
 WebApp API的抽象接口
 </summary>
 <param name="api">URL</param>
 <param name="request">URL后面的参数请求</param>
 <param name="response">返回的html页面的文档</param>
 <returns>是否执行成功</returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods._GET">
 <summary>
 <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.GET"/> API interface
 </summary>
 <param name="request">url arguments</param>
 <param name="response">output json or html page</param>
 <returns>Execute success or not?</returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods._POST">
 <summary>
 <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.POST"/> API interface
 </summary>
 <param name="request">url arguments and Form data</param>
 <param name="response"></param>
 <returns>Execute success or not?</returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.APIInvoker.Invoke(System.Object,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse)">
 <summary>
 在API的函数调用的位置，就只需要有args这一个参数
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPEngine">
 <summary>
 Engine for executes the API that defined in the <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp"/>.
 (执行<see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp"/>的工作引擎)
 </summary>
</member>
<member name="F:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPEngine.API">
 <summary>
 必须按照从长到短来排序
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPEngine.GetHelp">
 <summary>
 Gets help page.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPEngine.Invoke(System.String,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse)">
 <summary>
 
 </summary>
 <param name="api">已经变小写了的</param>
 <param name="request"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPEngine.Invoke(System.String,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpPOSTRequest,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse)">
 <summary>
 
 </summary>
 <param name="api">已经变小写了的</param>
 <param name="request"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPEngine.Invoke(SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest,System.Collections.Generic.Dictionary{System.String,SMRUCC.WebCloud.HTTPInternal.AppEngine.APPEngine},SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.APIAbstract)">
 <summary>
 分析url，然后查找相对应的WebApp，并进行数据请求的执行
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPEngine.GetParameter(System.String,System.String@,System.String@,System.String@)">
 <summary>
 If returns false, which means this function can not parsing any arguments parameter from the input url.
 (返回False标识无法正确的解析出调用数据)
 </summary>
 <param name="url">Url inputs from the user browser.</param>
 <param name="application"></param>
 <param name="API"></param>
 <param name="parameters"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPManager">
 <summary>
 Help document developer user manual page
 </summary>
</member>
<member name="F:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPManager.RunningAPP">
 <summary>
 键名要求是小写的
 </summary>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPManager.baseUrl">
 <summary>
 生成帮助文档所需要的
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPManager.GetApp``1">
 <summary>
 Get running app by type.
 </summary>
 <typeparam name="App"></typeparam>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPManager.InvokePOST(SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpPOSTRequest,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse)">
 <summary>

 </summary>
 <param name="response">HTML输出页面或者json数据</param>
 <returns></returns>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPManager.DefaultAPI">
 <summary>
 当WebApp查找失败的时候所执行的默认的API函数
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPManager.__defaultFailure(System.String,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse)">
 <summary>
 默认是API执行失败
 </summary>
 <param name="api"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPManager.Invoke(SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest,SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpResponse)">
 <summary>

 </summary>
 <param name="response">HTML输出页面或者json数据</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.APPManager.Register``1(``0)">
 <summary>
 向开放平台之中注册API接口
 </summary>
 <typeparam name="APP"></typeparam>
 <param name="application"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.CookieParser">
 <summary>
 
 </summary>
 <remarks>
 https://github.com/LYF610400210/CookieParser
 </remarks>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.CookieParser.ParseSetCookie(System.String)">
 <summary>
 把服务器返回的Set-Cookie标头信息翻译成
 <para>能放在Cookie标头上的信息</para>
 </summary>
 <param name="CookieStr">Set-Cookie标头信息</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.CookieParser.FindIndex(System.String,System.String[])">
 <summary>
 从数组中查找指定的值，并返回其Index
 </summary>
 <param name="Value">查找什么？</param>
 <param name="Source">在哪个数组中找？</param>
 <returns>Index或-1</returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.CookieParser.ParseOneNameAndValue(System.String)">
 <summary>
 判断一个Name=Value的值是不是一个真正的Cookies
 <para>若是两个Cookies，则把两个Cookies用分号隔开；</para>
 <para>不是，则返回输入的NameAndValue值。</para>
 </summary>
 <param name="NameAndValue">Cookies Name=Value</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.CookieParser.isPathDomainOrDate(System.String)">
 <summary>
 检测Name=Value是不是服务器Set-Cookie标头里的path、domain和过期日期
 <para></para><para>有则返回空字符串，以去掉那些不能放在Cookie标头上的信息</para>
 </summary>
 <param name="input"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.ExternalCall">
 <summary>
 调用和注册外部模块为rest服务的插件，从这里拓展核心服务层
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.ExternalCall.ParseDll(System.String,SMRUCC.WebCloud.HTTPInternal.Platform.PlatformEngine)">
 <summary>
 Register external WebApp as services.
 </summary>
 <param name="dll"></param>
 <param name="platform"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp">
 <summary>
 API interface description: <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp.IGET"/>, <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp.IPOST"/>.
 (外部对象需要继承这个基类才可以在App引擎之中注册自身为服务)
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp.Page404">
 <summary>
 通过复写这个方法可以使用自定义的404模板
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp.IGET">
 <summary>
 <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.GET"/>
 </summary>
 <param name="request"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp.IPOST">
 <summary>
 <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.POST"/>
 </summary>
 <param name="request"></param>
 <param name="response"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.POSTParser.HttpMultipart">
 <summary>
 Stream-based multipart handling.

 In this incarnation deals with an HttpInputStream as we are now using
 IntPtr-based streams instead of byte [].   In the future, we will also
 send uploads above a certain threshold into the disk (to implement
 limit-less HttpInputFiles). 
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.POSTParser.PostReader">
 <summary>
 POST参数的解析工具
 </summary>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.AppEngine.POSTParser.PostReader.param(System.String)">
 <summary>
 Get value from <see cref="P:SMRUCC.WebCloud.HTTPInternal.AppEngine.POSTParser.PostReader.Form"/>
 </summary>
 <param name="name"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.AppEngine.POSTParser.PostReader.LoadMultiPart">
 <summary>
 Loads the data on the form for multipart/form-data
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.CachedFile.CacheAllFiles(System.String)">
 <summary>
 假若文件更新不频繁，可以在初始化阶段一次性的读取所有文件到内存中
 </summary>
 <param name="wwwroot"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Core.Content.Type">
 <summary>
 不需要在这里写入http头部
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem">
 <summary>
 不兼容IE和Edge浏览器???为什么会这样子？
 </summary>
</member>
<member name="F:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem._virtualMappings">
 <summary>
 {url, mapping path}
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.#ctor(System.Int32,System.String,System.Boolean,SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.IGetResource,System.Int32,System.Boolean)">
 <summary>
 
 </summary>
 <param name="port"></param>
 <param name="root"></param>
 <param name="nullExists"></param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.MapPath(System.String@)">
 <summary>
 Maps the http request url as server file system path.
 </summary>
 <param name="res"></param>
 <returns></returns>
</member>
<member name="F:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.NoData">
 <summary>
 ``[ERR_EMPTY_RESPONSE::No data send]``
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.GetResource(System.String@)">
 <summary>
 默认是获取文件数据
 </summary>
 <param name="res"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.RequestStream">
 <summary>
 默认是使用<see cref="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.GetResource(System.String@)"/>获取得到文件数据
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.SetGetRequest(SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.IGetResource)">
 <summary>
 Public Delegate Function <see cref="T:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.IGetResource"/>(ByRef res As <see cref="T:System.String"/>) As <see cref="T:System.Byte"/>
 </summary>
 <param name="req"></param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.__getMapDIR(System.String@)">
 <summary>
 长
 </summary>
 <param name="res"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.handleGETRequest(SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor)">
 <summary>
 为什么不需要添加<see cref="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor.writeSuccess(System.String)"/>方法？？？
 </summary>
 <param name="p"></param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.__handleREST(SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor)">
 <summary>
 handle the GET/POST request at here
 </summary>
 <param name="p"></param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.__transferData(SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor,System.String,System.Byte[],System.String)">
 <summary>
 为什么不需要添加content-type说明？？
 </summary>
 <param name="p"></param>
 <param name="ext"></param>
 <param name="buf"></param>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Core.HttpFileSystem.Page404">
 <summary>
 默认的404页面
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor">
 <summary>
 这个对象包含有具体的http request的处理方法
 </summary>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor.http_url">
 <summary>
 File location or GET/POST request arguments
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor.Out">
 <summary>
 可以向这里面写入数据从而回传数据
 </summary>
 <returns></returns>
</member>
<member name="F:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor.MAX_POST_SIZE">
 <summary>
 10MB
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor.IsWWWRoot">
 <summary>
 If current request url is indicates the HTTP root:  index.html
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor.HandlePOSTRequest">
 <summary>
 This post data processing just reads everything into a memory stream.
 this is fine for smallish things, but for large stuff we should really
 hand an input stream to the request processor. However, the input stream 
 we hand him needs to let him see the "end of the stream" at this content 
 length, because otherwise he won't know when he's seen it all! 
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor._404Page">
 <summary>
 You can customize your 404 error page at here.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor.writeFailure(System.String)">
 <summary>
 404
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor.__writeFailure(System.String)">
 <summary>
 404
 </summary>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer">
 <summary>
 Internal http server core.
 </summary>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer.LocalPort">
 <summary>
 The network data port of this internal http server listen.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer.IsRunning">
 <summary>
 Indicates this http server is running status or not. 
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer.#ctor(System.Int32,System.Int32)">
 <summary>
 
 </summary>
 <param name="port">The network data port of this internal http server listen.</param>
</member>
<member name="F:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer._threadPool">
 <summary>
 处理连接的线程池
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer.Run">
 <summary>
 Running this http server. 
 NOTE: current thread will be blocked at here until the server core is shutdown. 
 (请注意，在服务器开启之后，当前的线程会被阻塞在这里)
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer.getProcessor(System.Net.Sockets.TcpClient)">
 <summary>
 一些初始化的设置在这里
 </summary>
 <param name="client"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer.__httpProcessor(System.Net.Sockets.TcpClient)">
 <summary>
 New HttpProcessor(Client, Me) with {._404Page = "...."}
 </summary>
 <param name="client"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer.Shutdown">
 <summary>
 Shutdown this internal http server
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Core.HttpServer.handleGETRequest(SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor)">
 <summary>
 
 </summary>
 <param name="p"></param>
 <example>
 
 If p.http_url.Equals("/Test.png") Then
     Dim fs As Stream = File.Open("../../Test.png", FileMode.Open)

     p.writeSuccess("image/png")
     fs.CopyTo(p.outputStream.BaseStream)
     p.outputStream.BaseStream.Flush()
 End If

  Console.WriteLine("request: {0}", p.http_url)
 
  p.writeSuccess()
  p.outputStream.WriteLine("&lt;html>&lt;body>&lt;h1>Shoal SystemsBiology Shell Language&lt;/h1>")
  p.outputStream.WriteLine("Current Time: " &amp; DateTime.Now.ToString())
  p.outputStream.WriteLine("url : {0}", p.http_url)

  p.outputStream.WriteLine("&lt;form method=post action=/local_wiki>")
  p.outputStream.WriteLine("&lt;input type=text name=SearchValue value=Keyword>")
  p.outputStream.WriteLine("&lt;input type=submit name=Invoker value=""Search"">")
  p.outputStream.WriteLine("&lt;/form>")
 
 </example>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.Platform.PlatformEngine">
 <summary>
 服务基础类，REST API的开发需要引用当前的项目
 </summary>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Platform.PlatformEngine.#ctor(System.String,System.Int32,System.Boolean,System.String,System.Int32,System.Boolean)">
 <summary>
 Init engine.
 </summary>
 <param name="port"></param>
 <param name="root">html wwwroot</param>
 <param name="nullExists"></param>
 <param name="appDll">Must have a Class object implements the type <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp"/></param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Platform.PlatformEngine.__init(System.String)">
 <summary>
 Scanning the dll file and then load the <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp"/> content.
 </summary>
 <param name="dll"></param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Platform.PlatformEngine.__runDll(System.String)">
 <summary>
 Call sub main in the <see cref="T:SMRUCC.WebCloud.HTTPInternal.AppEngine.WebApp"/> dll
 </summary>
 <param name="dll"></param>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Platform.PlatformEngine.__handleREST(SMRUCC.WebCloud.HTTPInternal.Core.HttpProcessor)">
 <summary>
 GET
 </summary>
 <param name="p"></param>
</member>
<member name="T:SMRUCC.WebCloud.HTTPInternal.Platform.PlatformSub">
 <summary>
 Web App engine platform components.
 </summary>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Platform.PlatformSub.PlatformEngine">
 <summary>
 Platform engine parent host
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Platform.Plugins.PluginBase.handleVisit(SMRUCC.WebCloud.HTTPInternal.AppEngine.APIMethods.Arguments.HttpRequest,System.Boolean)">
 <summary>
 
 </summary>
 <param name="p"></param>
 <param name="success"></param>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Platform.Task.uid">
 <summary>
 任务的编号
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Platform.Task.GetQueuePos">
 <summary>
 获取当前的这个任务对象在队列之中的等待位置
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.WebCloud.HTTPInternal.Platform.TaskPool.NumThreads">
 <summary>
 允许同时运行的任务的数量
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.WebCloud.HTTPInternal.Platform.TaskPool.GetTask(System.String)">
 <summary>
 当不存在的时候，说明正在运行，或者已经运行完毕了
 </summary>
 <param name="uid"></param>
 <returns></returns>
</member>
</members>
</doc>
