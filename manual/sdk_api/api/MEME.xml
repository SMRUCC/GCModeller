<?xml version="1.0"?>
<doc>
<assembly>
<name>
MEME
</name>
</assembly>
<members>
<member name="T:MEME.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:MEME.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:MEME.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:MEME.CLI.MEMETOM_MotifSimilarity(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 导出tomtom程序的分析结果
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.MEMEPlantSimilarity(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 计算出Motif的相似度，然后方便分组归纳新的Motif数据，这里只是计算出一个模块的
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.LoadSimilarityHits(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 导出通过MAST程序锁分析出来的Motif之间相似度的结果
 文件夹的组织结构是Motif.uid -> Motifs
 </summary>
 <returns></returns>
 
 
</member>
<member name="M:MEME.CLI.UnionSimilarity(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 合并相似的Motif进入下一次迭代
 </summary>
 <returns></returns>
 
</member>
<member name="M:MEME.CLI.__buildRegulates(SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.AnnotationModel,SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.AnnotationModel,SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT,SMRUCC.genomics.Analysis.RNA_Seq.ICorrelations,System.Collections.Generic.Dictionary{System.String,System.String[]})">
 <summary>

 </summary>
 <param name="query"></param>
 <param name="subject"></param>
 <param name="correlates"></param>
 <param name="mapsRegulates">subjects -> uid</param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.__siteToRegulation(SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.Site,System.String,System.String,SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.AnnotationModel,SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT,SMRUCC.genomics.Analysis.RNA_Seq.ICorrelations,System.Collections.Generic.Dictionary{System.String,System.String[]})">
 <summary>

 </summary>
 <param name="site">被调控的基因</param>
 <param name="subject"></param>
 <param name="PTT"></param>
 <param name="correlates"></param>
 <param name="mapsRegulates"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.__siteToRegulation(SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.GenomeMotifFootPrints.PredictedRegulationFootprint,System.String,SMRUCC.genomics.Analysis.RNA_Seq.ICorrelations)">
 <summary>

 </summary>
 <param name="site">copy</param>
 <param name="TF"></param>
 <param name="correlations"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.__siteToFootprint(SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.Site,System.String,System.String,SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.AnnotationModel,SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT)">
 <summary>
 基本的位点信息
 </summary>
 <param name="site"></param>
 <param name="subject"></param>
 <param name="PTT"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.MotifMatch(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 1
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.HitContext(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 2
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.ToFootprints(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 3
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.SiteRegexScan(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 使用正则表达式来扫描可能的位点
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.Expand(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment},System.String)">
 <summary>
 拓展简单位点的信息为Motif位点信息
 </summary>
 <param name="source"></param>
 <param name="motifs">MotifSiteLog.Xml 文件夹</param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.#cctor">
 <summary>
 初始化应用程序模块的时候自动执行初始化代码
 </summary>
</member>
<member name="M:MEME.CLI.RegulatorMotifs(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 导出由bbh结果所得到的motif信息
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.RegulonReconstructs2(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 其实bbh参数的数据类型不一定必须要严格满足bbh，只需要同时具备有query_name和hit_name就可以了
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.RegulonReconstructs(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 进行Regulon的批量重建工作
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.SWTomQueryBatch(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 bits.level越低则条件越苛刻
 </summary>
 <param name="args"></param>
 <returns></returns>
 <remarks>默认参数已经是经过RegulatorsMotif测试过的</remarks>
</member>
<member name="M:MEME.CLI.ExportMotifDraw(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 生成论文表格
 </summary>
 <returns></returns>

</member>
<member name="M:MEME.CLI.TomQuery(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 对meme的分析结果判断是哪一个motif
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.ParserRegPreciseOperon(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 这个函数里面默认是按照TF进行分组输出的，假若需要做操纵子的分析，可以添加/corn标记
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.ModuleRegulates(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 需要事先已经填上了代谢途径的信息在里面
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.MotifScan(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 使用片段相似性来扫描Motif位点
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.__loadMEME(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
 <summary>
 
 </summary>
 <param name="ID"></param>
 <param name="memeFile"></param>
 <param name="source">Fasta source</param>
 <param name="LocusFromFasta"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.__siteMatchesCommon(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String)">
 <summary>
 利用meme得到的motif数据，不是从数据库之中匹配出来的数据
 </summary>
 <param name="MEMESets"></param>
 <param name="MastSets"></param>
 <param name="out"></param>
 <param name="PTTFile"></param>
 <param name="FastaDir"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.SiteMatches(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 这个函数是和regprecise的匹配结果
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.DiffHits(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 求query - subject得到的差集
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.CORN(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 Cluster of co-regulated orthologous operons
 </summary>
 <param name="args"></param>
 <returns></returns>
 
</member>
<member name="M:MEME.CLI.LDMMaxLen(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 可以根据这个来设置meme的maxw参数，因为tomquery里面的相似度的结果是和长度相关的：coverage
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.DownloadRegprecise(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 下载数据库
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.CompileMast(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 对单个的mast文档进行数据导出
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.CompileMastBuck(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 批量汇编mast结果，导出调控位点的信息
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.SiteMappedBack(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 从当前的基因组之中利用规则得到一些可能的新的Motif之后再使用那个得到的新Motif比对回基因组，发现潜在的调控的联系
 和<see cref="M:MEME.CLI.CompileMast(Microsoft.VisualBasic.CommandLine.CommandLine)"/>函数所不同的是meme的数据源不同，仅此而已
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.RegulatorsBBh(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 联系需要注释的蛋白质在Regprecise数据库之中的信息
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.Build(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 从mast sites之中得到调控信息
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="M:MEME.CLI.KEGGFamilyDump(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 Regprecise之中的家族注释好像有些是错误的，使用这个来从KEGG数据库之中推测家族
 </summary>
 <param name="args"></param>
 <returns></returns>
</member>
<member name="P:MEME.MotifDraws.FamilyMotifs">
 <summary>
 按照家族分类的Motif计算模型
 </summary>
 <returns></returns>
</member>
<member name="M:MEME.MotifDraws.CreateViews(System.Collections.Generic.Dictionary{System.String,System.String[]},Microsoft.VisualBasic.Dictionary{SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.AnnotationModel},SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ModuleClassAPI,System.String)">
 <summary>

 </summary>
 <param name="Footprints">{Module, Families}</param>
 <param name="models">{Module, Model}</param>
 <returns></returns>
</member>
<member name="M:MEME.Analysis.RegpreciseSummary.LoadRegpreciseBBH(System.String)">
 <summary>
 
 </summary>
 <param name="csv"></param>
 <returns></returns>
</member>
<member name="M:MEME.Analysis.RegpreciseSummary.GenerateRegulations(System.Collections.Generic.Dictionary{System.Int32,SMRUCC.genomics.Data.Regprecise.bbhMappings[]},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.MastSites},System.String,System.Double)">
 <summary>
 以site位点为基准：从site找调控因子
 </summary>
 <param name="regulators"></param>
 <param name="sites"></param>
 <returns></returns>
</member>
<member name="M:MEME.Analysis.RegpreciseSummary.GenerateRegulations(System.Collections.Generic.Dictionary{System.Int32,SMRUCC.genomics.Data.Regprecise.bbhMappings[]},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.MastSites},SMRUCC.genomics.Analysis.RNA_Seq.Correlation2,System.Double)">
 <summary>
 以site位点为基准：从site找调控因子
 </summary>
 <param name="regulators"></param>
 <param name="sites"></param>
 <returns></returns>
</member>
<member name="M:MEME.Analysis.RegpreciseSummary.GenerateRegulations(System.Collections.Generic.Dictionary{System.Int32,SMRUCC.genomics.Data.Regprecise.bbhMappings[]},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Interops.NBCR.MEME_Suite.ComponentModel.MotifSite},System.String,System.Double)">
 <summary>
 以site位点为基准：从site找调控因子
 </summary>
 <param name="regulators"></param>
 <param name="sites"></param>
 <returns></returns>
</member>
<member name="M:MEME.Analysis.RegpreciseSummary.__createSites(SMRUCC.genomics.Interops.NBCR.MEME_Suite.ComponentModel.MotifSite,System.Collections.Generic.Dictionary{System.Int32,SMRUCC.genomics.Data.Regprecise.bbhMappings[]},SMRUCC.genomics.Data.Regprecise.WebServices.Regulations,System.Collections.Generic.Dictionary{System.String,SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Module},SMRUCC.genomics.Analysis.RNA_Seq.ICorrelations,System.Double)">
 <summary>
 
 </summary>
 <param name="site">没有调控因子的记录，需要从数据库之中读取数据</param>
 <param name="regulators">需要进行注释的基因组和Regprecise数据库Mapping所得到的结果</param>
 <returns></returns>
</member>
<member name="M:MEME.Analysis.RegpreciseSummary.SiteToRegulation(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.MastSites},System.String,System.String)">
 <summary>
 直接将MastSite里面的Trace作为调控因子
 </summary>
 <param name="site"></param>
 <param name="correlations"></param>
 <returns></returns>
 
</member>
<member name="M:MEME.Analysis.RegpreciseSummary.SiteToRegulation(SMRUCC.genomics.Interops.NBCR.MEME_Suite.Analysis.MotifScans.MastSites,SMRUCC.genomics.Analysis.RNA_Seq.ICorrelations,SMRUCC.genomics.Assembly.DOOR.DOOR)">
 <summary>
 直接将MastSite里面的Trace作为调控因子
 </summary>
 <param name="site"></param>
 <param name="correlations"></param>
 <returns></returns>
 
</member>
<member name="M:MEME.Analysis.RegpreciseSummary.__correlationFilter(System.String,System.String[],SMRUCC.genomics.Analysis.RNA_Seq.ICorrelations,System.Double)">
 <summary>
 
 </summary>
 <param name="ORF"></param>
 <param name="regulators"></param>
 <param name="correlations"></param>
 <param name="cutOff">一般是0.6</param>
 <returns></returns>
</member>
<member name="M:MEME.Analysis.RegpreciseSummary.__getMapped(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Data.Regprecise.bbhMappings})">
 <summary>
 得到基因组之中被mapped到的调控因子
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.Settings.File.BlastBin">
 <summary>
 Blast程序组所在的文件夹
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:MEME.Settings.File.R_HOME">
 <summary>
 The R program install location on your computer. This property value is the directory path value like: D:\R\bin or C:\Program Files\R\bin
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.Settings.File.RepositoryRoot">
 <summary>
 The root directory for stores the GCModeller database such as fasta sequence for annotation.
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.Settings.File.Perl">
 <summary>
 External hybrid programming with bio-perl.
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.Settings.File.ShoalShell">
 <summary>
 有一些时候需要进行批量计算的时候，可能会在程序的内部释放出脚本重新调用Shoal进行计算
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.Settings.File.MySQL">
 <summary>
 Connection paramenter to the model data server.
 (连接至存放模型数据的服务器的MySQL连接参数)
 </summary>
 <remarks></remarks>
</member>
<member name="P:MEME.Settings.Programs.GCHOST.SDK">
 <summary>
 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:MEME.Settings.Programs.IDE.Languages">
 <summary>
 Enum the mainly used language.
 </summary>
 <remarks></remarks>
</member>
<member name="F:MEME.Settings.Programs.IDE.Languages.System">
 <summary>
 Following the system default language.
 </summary>
 <remarks></remarks>
</member>
<member name="F:MEME.Settings.Programs.IDE.Languages.ZhCN">
 <summary>
 Language in Chinese simplify.
 (简体中文) 
 </summary>
 <remarks></remarks>
</member>
<member name="F:MEME.Settings.Programs.IDE.Languages.EnUS">
 <summary>
 Language in English.
 (英语语言)
 </summary>
 <remarks></remarks>
</member>
<member name="F:MEME.Settings.Programs.IDE.Languages.FrFR">
 <summary>
 Language in french.
 (法语语言)
 </summary>
 <remarks></remarks>
</member>
<member name="P:MEME.Settings.Programs.SMART.CDD">
 <summary>
 CDD数据库的数据文件夹的路径
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:MEME.Settings.Session">
 <summary>
 GCModeller program profile session.(GCModeller的应用程序配置会话) 
 </summary>
 <remarks></remarks>
 
</member>
<member name="P:MEME.Settings.Session.TEMP">
 <summary>
 Temp data directory for this application session.(本应用程序会话的临时数据文件夹)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:MEME.Settings.Session.Templates">
 <summary>
 Templates directory of the GCModeller inputs data.
 (在这个文件夹里面存放的是一些分析工具的输入的数据的模板文件)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:MEME.Settings.Session.DataCache">
 <summary>
 The cache data directory for this application session.(本应用程序的数据缓存文件夹)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:MEME.Settings.Session.Initialized">
 <summary>
 This property indicates that whether this application session is initialized or not.(应用程序是否已经初始化完毕)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:MEME.Settings.Session._LogDir">
 <summary>
 Directory for stores the application log file.(存放应用程序的日志文件的文件系统目录)
 </summary>
 <remarks></remarks>
</member>
<member name="P:MEME.Settings.Session.LogDIR">
 <summary>
 Directory for stores the application log file.(存放应用程序的日志文件的文件系统目录)
 </summary>
 <remarks></remarks>
</member>
<member name="P:MEME.Settings.Session.SettingsDIR">
 <summary>
 Data storage directory for the program settings.(配置文件所存放的文件夹)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:MEME.Settings.Session.Initialize(System.Type)">
 <summary>
 Initialize the application session and get the program profile data.(初始化应用程序会话，并获取应用程序的配置数据)
 </summary>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:MEME.Settings.Session.TryGetShoalShellBin">
 <summary>
 首先尝试通过配置文件得到脚本环境，假若没有配置这个值，则会尝试通过本身程序来测试，因为这个函数的调用可能是来自于Shoal脚本的
 </summary>
 <returns></returns>
</member>
<member name="M:MEME.Settings.Session.Finallize">
 <summary>
 Close the application session and save the settings file.
 </summary>
 <remarks></remarks>
 
</member>
<member name="M:MEME.Settings.Session.FolkShoalThread(System.String,System.String)">
 <summary>
 For unawareless of overrides the original data file, this function will automatcly add a .std_out extension to the STDOUT filepath.
 (新构建一个Shoal实例运行一个分支脚本任务，在.NET之中线程的效率要比进程的效率要低，使用这种多线程的方法来实现并行的效率要高很多？？？？)
 </summary>
 <param name="Script">脚本文件的文件文本内容</param>
 <param name="STDOUT">Standard output redirect to this file. Facility the GCModeller debugging.</param>
 <returns></returns>
 
</member>
<member name="T:MEME.GCModeller.FileSystem.FileSystem">
 <summary>
 
 </summary>
 <remarks>由于可能会修改参数然后在调用的这种情况出现，所以这里的数据可能需要实时更新，所以不再使用属性的简写形式了</remarks>
 
</member>
<member name="M:MEME.GCModeller.FileSystem.FileSystem.TryGetSource(System.String,System.Func{System.String})">
 <summary>
 这个是为了加载数据而构建的，故而假若数据源不存在的话就会返回备用的
 </summary>
 <param name="source"></param>
 <param name="alt"></param>
 <returns></returns>
</member>
<member name="P:MEME.GCModeller.FileSystem.FileSystem.RepositoryRoot">
 <summary>
 The root directory for stores the GCModeller database such as fasta sequence for annotation.
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.GCModeller.FileSystem.FileSystem.RegpreciseRoot">
 <summary>
 &lt;RepositoryRoot>/Regprecise/
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.GCModeller.FileSystem.FileSystem.MotifLDM">
 <summary>
 &lt;RegpreciseRoot>/MEME/MAST_LDM/
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.GCModeller.FileSystem.FileSystem.Regulations">
 <summary>
 regulations.xml文件在GCModeller数据库之中的位置
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.GCModeller.FileSystem.FileSystem.IsNullOrEmpty">
 <summary>
 配置文件之中是否包含有GCModeller数据库的位置的路径参数
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.GCModeller.FileSystem.FileSystem.KEGGFamilies">
 <summary>
 Regprecise数据库之中的调控因子蛋白质的摘要Dump信息
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.GCModeller.FileSystem.FileSystem.CDD">
 <summary>
 NCBI CDD数据库的文件夹位置
 </summary>
 <returns></returns>
</member>
<member name="M:MEME.GCModeller.FileSystem.FileSystem.GetRepositoryRoot">
 <summary>
 The root directory for stores the GCModeller database such as fasta sequence for annotation.
 </summary>
 <returns></returns>
 
</member>
<member name="M:MEME.GCModeller.FileSystem.FileSystem.GetMotifLDM">
 <summary>
 &lt;RegpreciseRoot>/MEME/MAST_LDM/
 </summary>
 <returns></returns>
</member>
<member name="M:MEME.GCModeller.FileSystem.FileSystem.GetMotifLDM(System.String)">
 <summary>
 &lt;RegpreciseRoot>/MEME/MAST_LDM/
 </summary>
 <returns></returns>
</member>
<member name="M:MEME.GCModeller.FileSystem.FileSystem.GetRegulations">
 <summary>
 regulations.xml文件在GCModeller数据库之中的位置
 </summary>
 <returns></returns>
 
</member>
<member name="M:MEME.GCModeller.FileSystem.FileSystem.IsRepositoryNullOrEmpty">
 <summary>
 配置文件之中是否包含有GCModeller数据库的位置的路径参数
 </summary>
 <returns></returns>
 
</member>
<member name="M:MEME.GCModeller.FileSystem.FileSystem.GetPfamDb(System.String)">
 <summary>
 默认返回NCBI CDD数据库之中的Pfam数据库
 </summary>
 <param name="name"></param>
 <returns></returns>
</member>
<member name="M:MEME.GCModeller.FileSystem.FileSystem.GetLocalblast">
 <summary>
 This function will search for the blast+ bin directory automatically based on the 
 registry, config data and system directories.
 (会自动搜索注册表，配置文件和文件系统之上的目录，实在找不到会返回空字符串并且记录下错误)
 </summary>
 <returns></returns>
 
</member>
<member name="M:MEME.GCModeller.FileSystem.KEGG.Directories.GetReactions">
 <summary>
 /KEGG/Reactions/
 </summary>
 <returns></returns>
 
</member>
<member name="P:MEME.GCModeller.FileSystem.RegPrecise.Directories.Motif_PWM">
 <summary>
 Directory of  /Regprecise/MEME/Motif_PWM/
 </summary>
 <returns></returns>
</member>
<member name="P:MEME.GCModeller.FileSystem.RegPrecise.Directories.RegPreciseRegulations">
 <summary>
 <see cref="M:MEME.GCModeller.FileSystem.FileSystem.GetRepositoryRoot"/> &amp; "/Regprecise/RegPrecise.Xml"
 </summary>
 <returns></returns>
</member>
</members>
</doc>
