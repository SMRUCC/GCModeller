.\" man page create by R# package system.
.TH RCONVERSION 1 2020-11-02 "as.character" "as.character"
.SH NAME
as.character \- Character Vectors
.SH SYNOPSIS
\fIas.character(\fBx\fR as <generic> Object, 
[\fB<Environment>\fR]);\fR
.SH DESCRIPTION
.PP
Character Vectors
 
 Create or test for objects of type "character".
.PP
.SH OPTIONS
.PP
\fBx\fB \fR\- object to be coerced or tested.
.PP
.PP
\fBenv\fB \fR\- -
.PP
.SH VALUE
.PP
as.character attempts to coerce its argument to character type; 
 like as.vector it strips attributes including names. For lists 
 and pairlists (including language objects such as calls) it deparses 
 the elements individually, except that it extracts the first element 
 of length-one character vectors.
.PP
.SH DETAILS
.PP
as.character and is.character are generic: you can write methods 
 to handle specific classes of objects, see InternalMethods. 
 Further, for as.character the default method calls as.vector, 
 so dispatch is first on methods for as.character and then for methods 
 for as.vector.

 as.character represents real And complex numbers to 15 significant 
 digits (technically the compiler's setting of the ISO C constant 
 DBL_DIG, which will be 15 on machines supporting IEC60559 arithmetic 
 according to the C99 standard). This ensures that all the digits in 
 the result will be reliable (and not the result of representation 
 error), but does mean that conversion to character and back to numeric 
 may change the number. If you want to convert numbers to character 
 with the maximum possible precision, use format.
.PP
.SH SEE ALSO
RConversion
.SH FILES
.PP
REnv.dll
.PP
.SH COPYRIGHT
Copyright Â© xie.guigang@gcmodeller.org 2019
